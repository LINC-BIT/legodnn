2023-05-15 17:08:15,993 - log.py[38] - DEBUG: entry file content: ---------------------------------
2023-05-15 17:08:15,993 - log.py[39] - DEBUG: 
import os
os.environ["CUDA_VISIBLE_DEVICES"] = "1"

import copy
import torch
import math
from cv_task.semantic_segmentation.mmseg_tools.test import test_segmentor
import sys
sys.path.insert(0, '../../')
sys.setrecursionlimit(100000)
from legodnn import BlockExtractor, BlockTrainer, ServerBlockProfiler, EdgeBlockProfiler, OptimalRuntime
from legodnn.gen_series_legodnn_models import gen_series_legodnn_models
from legodnn.utils.dl.common.env import set_random_seed
set_random_seed(0)
from legodnn.block_detection.model_topology_extraction import topology_extraction
from legodnn.presets.auto_block_manager import AutoBlockManager
from legodnn.presets.common_detection_manager_1204_new import CommonDetectionManager
from legodnn.model_manager.common_semantic_segmentation_model_manager_v2 import CommonSemanticSegmentationModelManager
from legodnn.utils.dl.common.model import get_module, set_module, get_model_size
from legodnn.utils.common.file import experiments_model_file_path

from cv_task.datasets.semantic_segmentation import mmseg_build_dataloader
from cv_task.semantic_segmentation.mmseg_models.legodnn_configs import get_fcn_r18_d8_512x512_b16_30k_voc2012_config
from cv_task.semantic_segmentation.mmseg_tools import mmseg_init_model
from mmcv.parallel import MMDataParallel

if __name__=='__main__':
    cv_task = 'semantic_segmentation'
    dataset_name = 'voc2012'
    model_name = 'fcn_r18_d8_512_512_b16'
    method = 'legodnn'
    sparsity = 's0'
    compress_layer_max_ratio = 0.125
    # compress_layer_max_ratio = 0.25
    # train_iter_num = 6000
    train_iter_num = 1000
    device = 'cuda' 
    model_input_size = (1, 3, 512, 512)
    block_sparsity = [0.0, 0.4, 0.8]
    teacher_pt_file = None
    checkpoint = None
    
    root_path = os.path.join('results/legodnn', cv_task, model_name+'_'+dataset_name + '_' + str(compress_layer_max_ratio).replace('.', '-'))
    
    compressed_blocks_dir_path = root_path + '/compressed'
    trained_blocks_dir_path = root_path + '/trained'
    descendant_models_dir_path = root_path + '/descendant'
    test_sample_num = 65
    model_config = get_fcn_r18_d8_512x512_b16_30k_voc2012_config()
    
    print('\033[1;36m-------------------------------->    BUILD LEGODNN GRAPH\033[0m')
    jit_detector = mmseg_init_model(model_config, None, mode='lego_jit', device=device)
    model_graph = topology_extraction(jit_detector, model_input_size, device=device, mode='unpack')
    model_graph.print_ordered_node()
    
    print('\033[1;36m-------------------------------->    START BLOCK DETECTION\033[0m')
    detection_manager = CommonDetectionManager(model_graph, max_ratio=compress_layer_max_ratio)
    detection_manager.detection_all_blocks()
    detection_manager.print_all_blocks()
    # exit(0)
    model_manager = CommonSemanticSegmentationModelManager()
    block_manager = AutoBlockManager(block_sparsity, detection_manager, model_manager)    
    # TODO
    if teacher_pt_file is not None:
        teacher_detector = mmseg_init_model(config=model_config, checkpoint=None, mode='mmseg_test', device=device)
        raw_teacher: torch.nn.Module = torch.load(teacher_pt_file).to(device)
        for name,param in raw_teacher.named_parameters():
            param.requires_grad = True
            
        for name, module in raw_teacher.named_modules():
            if len(list(module.children()))>0:
                continue
            else:
                set_module(teacher_detector, name, copy.deepcopy(module))
    else:
        teacher_detector = mmseg_init_model(config=model_config, checkpoint=checkpoint, mode='mmseg_test', device=device)
        
    print('\033[1;36m-------------------------------->    START BLOCK EXTRACTION\033[0m')
    block_extractor = BlockExtractor(teacher_detector, block_manager, compressed_blocks_dir_path, model_input_size, device)
    block_extractor.extract_all_blocks()
    # exit(0)
    print('\033[1;36m-------------------------------->    START BLOCK TRAIN\033[0m')
    train_loader, test_loader = mmseg_build_dataloader(cfg=model_config)
    epoch_num = math.ceil(float(train_iter_num)/len(train_loader))
    parallel_teacher_detector = MMDataParallel(teacher_detector.cuda(0), device_ids=[0])
    block_trainer = BlockTrainer(parallel_teacher_detector, block_manager, model_manager, compressed_blocks_dir_path,
                                 trained_blocks_dir_path, epoch_num, train_loader, device=device)
    block_trainer.train_all_blocks()
    
    server_block_profiler = ServerBlockProfiler(teacher_detector, block_manager, model_manager,
                                                trained_blocks_dir_path, test_loader, model_input_size, device)
    server_block_profiler.profile_all_blocks()

    edge_block_profiler = EdgeBlockProfiler(block_manager, model_manager, trained_blocks_dir_path, 
                                            test_sample_num, model_input_size, device)
    edge_block_profiler.profile_all_blocks()

    optimal_runtime = OptimalRuntime(trained_blocks_dir_path, model_input_size,
                                     block_manager, model_manager, device)
    
    model_size_min = get_model_size(torch.load(os.path.join(compressed_blocks_dir_path, 'model_frame.pt')))/1024**2
    model_size_max = get_model_size(teacher_detector)/1024**2 + 1
    gen_series_legodnn_models(deadline=100, model_size_search_range=[model_size_min, model_size_max], target_model_num=100, optimal_runtime=optimal_runtime, descendant_models_save_path=descendant_models_dir_path, device=device)
2023-05-15 17:08:15,994 - log.py[40] - DEBUG: entry file content: ---------------------------------
2023-05-15 17:08:49,978 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-0.pt
2023-05-15 17:08:49,979 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:08:51,854 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-4.pt
2023-05-15 17:08:51,855 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 20, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(20, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:08:53,189 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-8.pt
2023-05-15 17:08:53,189 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 7, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(7, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(7, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:08:53,237 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-0.pt
2023-05-15 17:08:53,238 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:08:55,671 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-4.pt
2023-05-15 17:08:55,671 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(39, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:08:57,927 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-8.pt
2023-05-15 17:08:57,927 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(13, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:08:57,971 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-0.pt
2023-05-15 17:08:57,971 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:08:59,178 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-4.pt
2023-05-15 17:08:59,178 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(39, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:00,325 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-8.pt
2023-05-15 17:09:00,325 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(13, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:00,468 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-0.pt
2023-05-15 17:09:00,468 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:01,694 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-4.pt
2023-05-15 17:09:01,694 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 77, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(77, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:02,981 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-8.pt
2023-05-15 17:09:02,981 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 26, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(26, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:03,050 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-0.pt
2023-05-15 17:09:03,050 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:04,110 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-4.pt
2023-05-15 17:09:04,110 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(77, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:05,052 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-8.pt
2023-05-15 17:09:05,052 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(26, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:05,158 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-0.pt
2023-05-15 17:09:05,159 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:06,471 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-4.pt
2023-05-15 17:09:06,471 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(154, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(154, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:07,848 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-8.pt
2023-05-15 17:09:07,848 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(52, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:08,017 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-0.pt
2023-05-15 17:09:08,017 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:09,639 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-4.pt
2023-05-15 17:09:09,640 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 154, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(154, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(154, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:11,030 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-8.pt
2023-05-15 17:09:11,030 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 52, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(52, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:11,108 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-0.pt
2023-05-15 17:09:11,109 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:13,117 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-4.pt
2023-05-15 17:09:13,117 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 308, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(308, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(308, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:15,511 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-8.pt
2023-05-15 17:09:15,512 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 103, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(103, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 17:09:15,671 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-0.pt
2023-05-15 17:09:15,671 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:18,525 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-4.pt
2023-05-15 17:09:18,526 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 308, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(308, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(308, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:21,296 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-8.pt
2023-05-15 17:09:21,297 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 103, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(103, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 17:09:21,394 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-0.pt
2023-05-15 17:09:21,394 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(640, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:09:23,554 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-4.pt
2023-05-15 17:09:23,554 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(77, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(589, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:09:25,560 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-8.pt
2023-05-15 17:09:25,561 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(538, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 17:09:26,027 - block_trainer.py[183] - INFO: start block training...
2023-05-15 17:12:34,233 - block_trainer.py[357] - INFO: epoch 0 (188.206009s, 30 blocks still need training), blocks loss: 
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-0 | 0.01252937 | 0.01088646 | 0.00904936 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-1 | 0.61330434 | 0.65394976 | 0.76786741 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-2 | 0.94385660 | 0.94495838 | 0.94305017 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-3 | 0.19739157 | 0.22494652 | 0.27767228 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-4 | 0.96261524 | 0.96302585 | 0.95362860 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-5 | 0.15091934 | 0.16658342 | 0.20295550 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-6 | 0.96882934 | 0.96929160 | 0.96585563 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-7 | 0.11091766 | 0.11838427 | 0.13957027 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-8 | 0.97140039 | 0.97171548 | 0.97038764 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-9 | 0.07222224 | 0.05243900 | 0.02315278 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+

2023-05-15 17:15:48,791 - block_trainer.py[357] - INFO: epoch 1 (194.557078s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00200334   |   0.00203301   |   0.00214128   |
|         | (↓ 0.01052603) | (↓ 0.00885344) | (↓ 0.00690807) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.41760505   |   0.43435161   |   0.49155842   |
|         | (↓ 0.19569929) | (↓ 0.21959815) | (↓ 0.27630899) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.89172951   |   0.89216572   |   0.78782940   |
|         | (↓ 0.05212709) | (↓ 0.05279265) | (↓ 0.15522077) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.04527216   |   0.05138490   |   0.06504568   |
|         | (↓ 0.15211940) | (↓ 0.17356162) | (↓ 0.21262660) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.91027290   |   0.91044505   |   0.91272588   |
|         | (↓ 0.05234234) | (↓ 0.05258080) | (↓ 0.04090272) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.02890180   |   0.03304111   |   0.04235641   |
|         | (↓ 0.12201754) | (↓ 0.13354231) | (↓ 0.16059909) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.91692414   |   0.91761514   |   0.91859608   |
|         | (↓ 0.05190520) | (↓ 0.05167646) | (↓ 0.04725955) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.01935391   |   0.02119429   |   0.02486484   |
|         | (↓ 0.09156374) | (↓ 0.09718998) | (↓ 0.11470542) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.91913409   |   0.91952967   |   0.92035139   |
|         | (↓ 0.05226630) | (↓ 0.05218582) | (↓ 0.05003625) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00439953   |   0.00389249   |   0.00191976   |
|         | (↓ 0.06782271) | (↓ 0.04854652) | (↓ 0.02123302) |
+---------+----------------+----------------+----------------+

2023-05-15 17:18:56,726 - block_trainer.py[357] - INFO: epoch 2 (187.934631s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00134475   |   0.00144131   |   0.00176011   |
|         | (↓ 0.00065859) | (↓ 0.00059171) | (↓ 0.00038117) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.34874926   |   0.36183904   |   0.40387729   |
|         | (↓ 0.06885578) | (↓ 0.07251257) | (↓ 0.08768113) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.84209397   |   0.84220326   |   0.64835201   |
|         | (↓ 0.04963553) | (↓ 0.04996246) | (↓ 0.13947739) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.02635646   |   0.03000560   |   0.03939975   |
|         | (↓ 0.01891570) | (↓ 0.02137930) | (↓ 0.02564594) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.86014074   |   0.86191735   |   0.86595719   |
|         | (↓ 0.05013216) | (↓ 0.04852770) | (↓ 0.04676869) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.01715361   |   0.01946696   |   0.02568864   |
|         | (↓ 0.01174819) | (↓ 0.01357415) | (↓ 0.01666777) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.86687426   |   0.86715225   |   0.86863296   |
|         | (↓ 0.05004988) | (↓ 0.05046289) | (↓ 0.04996312) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.01091998   |   0.01200567   |   0.01412017   |
|         | (↓ 0.00843394) | (↓ 0.00918862) | (↓ 0.01074467) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.86878260   |   0.86901156   |   0.86998681   |
|         | (↓ 0.05035148) | (↓ 0.05051811) | (↓ 0.05036458) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00215291   |   0.00184148   |   0.00088623   |
|         | (↓ 0.00224662) | (↓ 0.00205101) | (↓ 0.00103353) |
+---------+----------------+----------------+----------------+

2023-05-15 17:22:07,376 - block_trainer.py[357] - INFO: epoch 3 (190.642586s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00125323   |   0.00132830   |   0.00164213   |
|         | (↓ 0.00009152) | (↓ 0.00011301) | (↓ 0.00011798) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.29846832   |   0.30960042   |   0.34580993   |
|         | (↓ 0.05028094) | (↓ 0.05223862) | (↓ 0.05806736) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.79435706   |   0.79613851   |   0.56483528   |
|         | (↓ 0.04773691) | (↓ 0.04606475) | (↓ 0.08351673) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01848323   |   0.02076828   |   0.02733421   |
|         | (↓ 0.00787323) | (↓ 0.00923733) | (↓ 0.01206554) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.81262138   |   0.81410764   |   0.81771417   |
|         | (↓ 0.04751937) | (↓ 0.04780971) | (↓ 0.04824302) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.01214373   |   0.01378627   |   0.01821411   |
|         | (↓ 0.00500988) | (↓ 0.00568070) | (↓ 0.00747452) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.81855878   |   0.81885544   |   0.82025108   |
|         | (↓ 0.04831548) | (↓ 0.04829681) | (↓ 0.04838187) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00770509   |   0.00839918   |   0.00982656   |
|         | (↓ 0.00321489) | (↓ 0.00360649) | (↓ 0.00429362) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.82047276   |   0.82068662   |   0.82162825   |
|         | (↓ 0.04830984) | (↓ 0.04832494) | (↓ 0.04835856) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00144588   |   0.00117041   |   0.00054634   |
|         | (↓ 0.00070703) | (↓ 0.00067108) | (↓ 0.00033990) |
+---------+----------------+----------------+----------------+

2023-05-15 17:25:16,871 - block_trainer.py[357] - INFO: epoch 4 (189.472571s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00092585   |   0.00104159   |   0.00145366   |
|         | (↓ 0.00032738) | (↓ 0.00028671) | (↓ 0.00018847) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.25417556   |   0.26432082   |   0.29707103   |
|         | (↓ 0.04429276) | (↓ 0.04527960) | (↓ 0.04873890) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.74855097   |   0.75282768   |   0.47305464   |
|         | (↓ 0.04580609) | (↓ 0.04331083) | (↓ 0.09178064) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01350529   |   0.01504022   |   0.01956247   |
|         | (↓ 0.00497793) | (↓ 0.00572806) | (↓ 0.00777174) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.76730226   |   0.76794506   |   0.77224916   |
|         | (↓ 0.04531912) | (↓ 0.04616258) | (↓ 0.04546501) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00882091   |   0.00998788   |   0.01335261   |
|         | (↓ 0.00332282) | (↓ 0.00379839) | (↓ 0.00486150) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.77223125   |   0.77266615   |   0.77407533   |
|         | (↓ 0.04632753) | (↓ 0.04618929) | (↓ 0.04617575) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00552412   |   0.00606873   |   0.00707659   |
|         | (↓ 0.00218097) | (↓ 0.00233045) | (↓ 0.00274996) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.77416773   |   0.77439159   |   0.77527366   |
|         | (↓ 0.04630503) | (↓ 0.04629503) | (↓ 0.04635459) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00102495   |   0.00081760   |   0.00037425   |
|         | (↓ 0.00042093) | (↓ 0.00035280) | (↓ 0.00017209) |
+---------+----------------+----------------+----------------+

2023-05-15 17:28:27,204 - block_trainer.py[357] - INFO: epoch 5 (190.332694s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+----------------+
|         |       0.0       |       0.4       |      0.8       |
+---------+-----------------+-----------------+----------------+
| block-0 |    0.00111709   |    0.00111287   |   0.00138395   |
|         | (↓ -0.00019124) | (↓ -0.00007127) | (↓ 0.00006971) |
+---------+-----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.21944146   |   0.22897725   |   0.25977464   |
|         | (↓ 0.03473411) | (↓ 0.03534358) | (↓ 0.03729639) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.70511679   |   0.70896573   |   0.42925050   |
|         | (↓ 0.04343418) | (↓ 0.04386195) | (↓ 0.04380415) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01076781   |   0.01183498   |   0.01516662   |
|         | (↓ 0.00273748) | (↓ 0.00320524) | (↓ 0.00439585) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.72311718   |   0.72401622   |   0.72758160   |
|         | (↓ 0.04418508) | (↓ 0.04392883) | (↓ 0.04466757) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00710036   |   0.00800140   |   0.01076190   |
|         | (↓ 0.00172055) | (↓ 0.00198648) | (↓ 0.00259071) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.72794831   |   0.72824558   |   0.72961269   |
|         | (↓ 0.04428294) | (↓ 0.04442056) | (↓ 0.04446264) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00440951   |   0.00480224   |   0.00556450   |
|         | (↓ 0.00111461) | (↓ 0.00126648) | (↓ 0.00151209) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.72979261   |   0.72993482   |   0.73088689   |
|         | (↓ 0.04437513) | (↓ 0.04445677) | (↓ 0.04438676) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00079740   |   0.00062559   |   0.00028367   |
|         | (↓ 0.00022755) | (↓ 0.00019201) | (↓ 0.00009058) |
+---------+----------------+----------------+----------------+

2023-05-15 17:31:37,364 - block_trainer.py[357] - INFO: epoch 6 (190.153763s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00091385   |   0.00096328   |   0.00128411   |
|         | (↓ 0.00020324) | (↓ 0.00014958) | (↓ 0.00009984) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.19079179   |   0.20021959   |   0.22960943   |
|         | (↓ 0.02864966) | (↓ 0.02875766) | (↓ 0.03016521) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.66337901   |   0.66698830   |   0.39536554   |
|         | (↓ 0.04173778) | (↓ 0.04197743) | (↓ 0.03388496) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00926499   |   0.01013263   |   0.01272438   |
|         | (↓ 0.00150281) | (↓ 0.00170235) | (↓ 0.00244224) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.68101159   |   0.68153581   |   0.68469604   |
|         | (↓ 0.04210559) | (↓ 0.04248041) | (↓ 0.04288555) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00608517   |   0.00686993   |   0.00931809   |
|         | (↓ 0.00101520) | (↓ 0.00113147) | (↓ 0.00144380) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.68559762   |   0.68579136   |   0.68687383   |
|         | (↓ 0.04235068) | (↓ 0.04245422) | (↓ 0.04273885) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00382088   |   0.00413491   |   0.00476545   |
|         | (↓ 0.00058863) | (↓ 0.00066734) | (↓ 0.00079906) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.68734811   |   0.68741603   |   0.68838941   |
|         | (↓ 0.04244450) | (↓ 0.04251879) | (↓ 0.04249748) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00066186   |   0.00051911   |   0.00023640   |
|         | (↓ 0.00013555) | (↓ 0.00010648) | (↓ 0.00004727) |
+---------+----------------+----------------+----------------+

2023-05-15 17:34:53,285 - block_trainer.py[357] - INFO: epoch 7 (195.920861s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00079729   |   0.00087044   |   0.00118850   |
|         | (↓ 0.00011656) | (↓ 0.00009284) | (↓ 0.00009561) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.16288231   |   0.17190019   |   0.19957676   |
|         | (↓ 0.02790948) | (↓ 0.02831940) | (↓ 0.03003267) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.62383384   |   0.62751032   |   0.36583107   |
|         | (↓ 0.03954517) | (↓ 0.03947798) | (↓ 0.02953447) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00767783   |   0.00838644   |   0.01045569   |
|         | (↓ 0.00158717) | (↓ 0.00174619) | (↓ 0.00226869) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.64069991   |   0.64111620   |   0.64401755   |
|         | (↓ 0.04031168) | (↓ 0.04041961) | (↓ 0.04067850) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00502658   |   0.00563839   |   0.00764393   |
|         | (↓ 0.00105859) | (↓ 0.00123153) | (↓ 0.00167416) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.64494399   |   0.64519093   |   0.64604788   |
|         | (↓ 0.04065363) | (↓ 0.04060043) | (↓ 0.04082595) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00318004   |   0.00344883   |   0.00395157   |
|         | (↓ 0.00064084) | (↓ 0.00068607) | (↓ 0.00081387) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.64666377   |   0.64679328   |   0.64767395   |
|         | (↓ 0.04068434) | (↓ 0.04062275) | (↓ 0.04071545) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00054036   |   0.00042026   |   0.00019321   |
|         | (↓ 0.00012150) | (↓ 0.00009886) | (↓ 0.00004319) |
+---------+----------------+----------------+----------------+

2023-05-15 17:38:14,405 - block_trainer.py[357] - INFO: epoch 8 (201.119740s, 30 blocks still need training), blocks loss: 
+---------+----------------+-----------------+----------------+
|         |      0.0       |       0.4       |      0.8       |
+---------+----------------+-----------------+----------------+
| block-0 |   0.00077895   |    0.00087055   |   0.00118076   |
|         | (↓ 0.00001833) | (↓ -0.00000011) | (↓ 0.00000774) |
+---------+----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.14062537   |   0.14939814   |   0.17607302   |
|         | (↓ 0.02225694) | (↓ 0.02250206) | (↓ 0.02350374) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.58572069   |   0.58944544   |   0.31916975   |
|         | (↓ 0.03811315) | (↓ 0.03806489) | (↓ 0.04666132) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00657291   |   0.00716450   |   0.00884466   |
|         | (↓ 0.00110492) | (↓ 0.00122193) | (↓ 0.00161103) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.60205739   |   0.60218980   |   0.60506198   |
|         | (↓ 0.03864252) | (↓ 0.03892641) | (↓ 0.03895556) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00429894   |   0.00482414   |   0.00648885   |
|         | (↓ 0.00072765) | (↓ 0.00081425) | (↓ 0.00115508) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.60611233   |   0.60628881   |   0.60735129   |
|         | (↓ 0.03883166) | (↓ 0.03890212) | (↓ 0.03869659) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00271364   |   0.00292971   |   0.00336858   |
|         | (↓ 0.00046640) | (↓ 0.00051912) | (↓ 0.00058299) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.60780266   |   0.60797778   |   0.60874162   |
|         | (↓ 0.03886111) | (↓ 0.03881551) | (↓ 0.03893234) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00046131   |   0.00035915   |   0.00016838   |
|         | (↓ 0.00007904) | (↓ 0.00006110) | (↓ 0.00002483) |
+---------+----------------+----------------+----------------+

2023-05-15 17:41:34,457 - block_trainer.py[357] - INFO: epoch 9 (200.051983s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+-----------------+
|         |       0.0       |       0.4       |       0.8       |
+---------+-----------------+-----------------+-----------------+
| block-0 |    0.00082208   |    0.00090158   |    0.00119786   |
|         | (↓ -0.00004312) | (↓ -0.00003103) | (↓ -0.00001709) |
+---------+-----------------+-----------------+-----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.12101712   |   0.12958543   |   0.15527136   |
|         | (↓ 0.01960825) | (↓ 0.01981271) | (↓ 0.02080166) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.54983511   |   0.55164781   |   0.27692337   |
|         | (↓ 0.03588558) | (↓ 0.03779763) | (↓ 0.04224638) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00569662   |   0.00618772   |   0.00759212   |
|         | (↓ 0.00087628) | (↓ 0.00097678) | (↓ 0.00125254) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.56475934   |   0.56530789   |   0.56795133   |
|         | (↓ 0.03729805) | (↓ 0.03688190) | (↓ 0.03711066) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00375493   |   0.00419387   |   0.00558349   |
|         | (↓ 0.00054401) | (↓ 0.00063028) | (↓ 0.00090535) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.56895460   |   0.56909435   |   0.57029020   |
|         | (↓ 0.03715773) | (↓ 0.03719446) | (↓ 0.03706109) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00237763   |   0.00256027   |   0.00293447   |
|         | (↓ 0.00033601) | (↓ 0.00036944) | (↓ 0.00043411) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.57059173   |   0.57083800   |   0.57150388   |
|         | (↓ 0.03721093) | (↓ 0.03713978) | (↓ 0.03723774) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00040396   |   0.00031380   |   0.00014668   |
|         | (↓ 0.00005736) | (↓ 0.00004535) | (↓ 0.00002170) |
+---------+----------------+----------------+----------------+

2023-05-15 17:44:51,014 - block_trainer.py[357] - INFO: epoch 10 (196.549419s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+----------------+
|         |       0.0       |       0.4       |      0.8       |
+---------+-----------------+-----------------+----------------+
| block-0 |    0.00092131   |    0.00095233   |   0.00118297   |
|         | (↓ -0.00009923) | (↓ -0.00005075) | (↓ 0.00001488) |
+---------+-----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.10359513   |   0.11210641   |   0.13760881   |
|         | (↓ 0.01742199) | (↓ 0.01747903) | (↓ 0.01766255) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.51612485   |   0.51780363   |   0.26535880   |
|         | (↓ 0.03371026) | (↓ 0.03384417) | (↓ 0.01156457) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00527820   |   0.00574812   |   0.00698423   |
|         | (↓ 0.00041842) | (↓ 0.00043961) | (↓ 0.00060789) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.52971971   |   0.53021505   |   0.53206012   |
|         | (↓ 0.03503964) | (↓ 0.03509284) | (↓ 0.03589121) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00346066   |   0.00387016   |   0.00514312   |
|         | (↓ 0.00029427) | (↓ 0.00032371) | (↓ 0.00044037) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.53355682   |   0.53373215   |   0.53478638   |
|         | (↓ 0.03539777) | (↓ 0.03536220) | (↓ 0.03550382) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00218342   |   0.00234784   |   0.00269454   |
|         | (↓ 0.00019421) | (↓ 0.00021243) | (↓ 0.00023993) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.53510288   |   0.53519331   |   0.53584063   |
|         | (↓ 0.03548885) | (↓ 0.03564469) | (↓ 0.03566325) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00035470   |   0.00027240   |   0.00012829   |
|         | (↓ 0.00004926) | (↓ 0.00004140) | (↓ 0.00001838) |
+---------+----------------+----------------+----------------+

2023-05-15 17:44:51,252 - server_block_profiler.py[193] - INFO: raw block info: {"index": 0, "id": "block-0", "size": 135422, "FLOPs": 7507804160.0, "param": 28640.0, "input_size": [3, 512, 1024], "output_size": [64, 256, 512]}
2023-05-15 17:44:51,390 - server_block_profiler.py[193] - INFO: raw block info: {"index": 1, "id": "block-1", "size": 320114, "FLOPs": 4882169856.0, "param": 74112.0, "input_size": [64, 256, 512], "output_size": [64, 128, 256]}
2023-05-15 17:44:51,478 - server_block_profiler.py[193] - INFO: raw block info: {"index": 2, "id": "block-2", "size": 317185, "FLOPs": 4848615424.0, "param": 73984.0, "input_size": [64, 128, 256], "output_size": [64, 128, 256]}
2023-05-15 17:44:51,540 - server_block_profiler.py[193] - INFO: raw block info: {"index": 3, "id": "block-3", "size": 946351, "FLOPs": 3770679296.0, "param": 230144.0, "input_size": [64, 128, 256], "output_size": [128, 64, 128]}
2023-05-15 17:44:51,576 - server_block_profiler.py[193] - INFO: raw block info: {"index": 4, "id": "block-4", "size": 1203969, "FLOPs": 4840226816.0, "param": 295424.0, "input_size": [128, 64, 128], "output_size": [128, 64, 128]}
2023-05-15 17:44:51,619 - server_block_profiler.py[193] - INFO: raw block info: {"index": 5, "id": "block-5", "size": 3705071, "FLOPs": 15057551360.0, "param": 919040.0, "input_size": [128, 64, 128], "output_size": [256, 64, 128]}
2023-05-15 17:44:51,670 - server_block_profiler.py[193] - INFO: raw block info: {"index": 6, "id": "block-6", "size": 4747009, "FLOPs": 19344130048.0, "param": 1180672.0, "input_size": [256, 64, 128], "output_size": [256, 64, 128]}
2023-05-15 17:44:51,730 - server_block_profiler.py[193] - INFO: raw block info: {"index": 7, "id": "block-7", "size": 14727407, "FLOPs": 60179873792.0, "param": 3673088.0, "input_size": [256, 64, 128], "output_size": [512, 64, 128]}
2023-05-15 17:44:51,856 - server_block_profiler.py[193] - INFO: raw block info: {"index": 8, "id": "block-8", "size": 18910977, "FLOPs": 77342965760.0, "param": 4720640.0, "input_size": [512, 64, 128], "output_size": [512, 64, 128]}
2023-05-15 17:44:51,946 - server_block_profiler.py[193] - INFO: raw block info: {"index": 9, "id": "block-9", "size": 5923838, "FLOPs": 24167579648.0, "param": 1475072.0, "input_size": [512, 64, 128], "output_size": [128, 64, 128]}
2023-05-15 17:47:55,446 - server_block_profiler.py[264] - INFO: profile blocks acc drop
2023-05-15 18:05:15,418 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:07:25,174 - server_block_profiler.py[70] - INFO: get -1-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:09:31,722 - server_block_profiler.py[70] - INFO: get -1-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:11:21,173 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:13:20,110 - server_block_profiler.py[70] - INFO: get -1-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:15:17,152 - server_block_profiler.py[70] - INFO: get -1-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:17:00,489 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:20:35,033 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:23:47,121 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:25:46,910 - server_block_profiler.py[70] - INFO: get 0--1-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:27:48,696 - server_block_profiler.py[70] - INFO: get 8--1-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:29:25,511 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:31:21,643 - server_block_profiler.py[70] - INFO: get 0--1-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:33:07,842 - server_block_profiler.py[70] - INFO: get 8--1-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:33:07,842 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:33:07,843 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:36:59,030 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:39:57,707 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:41:55,354 - server_block_profiler.py[70] - INFO: get 0-0--1-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:44:01,762 - server_block_profiler.py[70] - INFO: get 8-8--1-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:45:39,052 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:47:36,798 - server_block_profiler.py[70] - INFO: get 0-0--1-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:49:28,097 - server_block_profiler.py[70] - INFO: get 8-8--1-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:49:28,097 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 18:49:28,098 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:53:22,425 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 18:56:46,210 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 18:58:40,454 - server_block_profiler.py[70] - INFO: get 0-0-0--1-0-0-0-0-0-0 metrics in cache
2023-05-15 19:00:33,383 - server_block_profiler.py[70] - INFO: get 8-8-8--1-8-8-8-8-8-8 metrics in cache
2023-05-15 19:02:14,698 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:04:10,459 - server_block_profiler.py[70] - INFO: get 0-0-0--1-0-0-0-0-0-0 metrics in cache
2023-05-15 19:06:09,474 - server_block_profiler.py[70] - INFO: get 8-8-8--1-8-8-8-8-8-8 metrics in cache
2023-05-15 19:06:09,475 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 19:06:09,475 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:10:19,933 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 19:13:32,330 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:15:32,434 - server_block_profiler.py[70] - INFO: get 0-0-0-0--1-0-0-0-0-0 metrics in cache
2023-05-15 19:17:21,427 - server_block_profiler.py[70] - INFO: get 8-8-8-8--1-8-8-8-8-8 metrics in cache
2023-05-15 19:19:00,860 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:20:47,191 - server_block_profiler.py[70] - INFO: get 0-0-0-0--1-0-0-0-0-0 metrics in cache
2023-05-15 19:22:27,687 - server_block_profiler.py[70] - INFO: get 8-8-8-8--1-8-8-8-8-8 metrics in cache
2023-05-15 19:22:27,688 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 19:22:27,688 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:26:22,422 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 19:29:34,477 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:31:37,467 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0--1-0-0-0-0 metrics in cache
2023-05-15 19:33:29,081 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8--1-8-8-8-8 metrics in cache
2023-05-15 19:34:57,852 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:36:59,583 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0--1-0-0-0-0 metrics in cache
2023-05-15 19:38:50,670 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8--1-8-8-8-8 metrics in cache
2023-05-15 19:38:50,671 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 19:38:50,671 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:42:52,855 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 19:46:20,151 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:48:27,316 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0--1-0-0-0 metrics in cache
2023-05-15 19:50:22,410 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8--1-8-8-8 metrics in cache
2023-05-15 19:51:55,412 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:53:51,494 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0--1-0-0-0 metrics in cache
2023-05-15 19:55:47,319 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8--1-8-8-8 metrics in cache
2023-05-15 19:55:47,320 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 19:55:47,320 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 19:59:52,817 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 20:03:11,300 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:05:12,277 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0--1-0-0 metrics in cache
2023-05-15 20:07:06,314 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8--1-8-8 metrics in cache
2023-05-15 20:08:43,399 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:10:07,531 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0--1-0-0 metrics in cache
2023-05-15 20:11:58,909 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8--1-8-8 metrics in cache
2023-05-15 20:11:58,910 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 20:11:58,910 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:15:57,237 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 20:19:23,296 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:22:00,959 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0--1-0 metrics in cache
2023-05-15 20:22:56,831 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8--1-8 metrics in cache
2023-05-15 20:23:42,027 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:24:36,818 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0--1-0 metrics in cache
2023-05-15 20:25:29,678 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8--1-8 metrics in cache
2023-05-15 20:25:29,678 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 20:25:29,678 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:27:20,705 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 20:28:47,816 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:29:50,959 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0--1 metrics in cache
2023-05-15 20:30:52,777 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8--1 metrics in cache
2023-05-15 20:31:25,038 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 20:33:14,961 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0--1 metrics in cache
2023-05-15 20:34:16,325 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8--1 metrics in cache
2023-05-15 20:34:16,326 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 20:34:16,348 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.0) acc drop: -7.228014483236696e-20
2023-05-15 20:34:16,363 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,363 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.4) acc drop: -6.66666666666667e-05
2023-05-15 20:34:16,370 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.4) size drop: 51584B (0.049MB), FLOPs drop: 3381.658M, param drop: 0.013M
2023-05-15 20:34:16,371 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.8) acc drop: -6.666666666666663e-05
2023-05-15 20:34:16,378 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.8) size drop: 96064B (0.092MB), FLOPs drop: 6278.349M, param drop: 0.024M
2023-05-15 20:34:16,455 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.0) acc drop: 0.00036666666666666683
2023-05-15 20:34:16,467 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,467 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.4) acc drop: 0.00036666666666666683
2023-05-15 20:34:16,476 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.4) size drop: 115520B (0.110MB), FLOPs drop: 1890.714M, param drop: 0.029M
2023-05-15 20:34:16,476 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.8) acc drop: 0.00036666666666666683
2023-05-15 20:34:16,487 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.8) size drop: 235904B (0.225MB), FLOPs drop: 3857.056M, param drop: 0.059M
2023-05-15 20:34:16,507 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.0) acc drop: 0.0002000000000000001
2023-05-15 20:34:16,516 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,517 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.4) acc drop: 6.666666666666676e-05
2023-05-15 20:34:16,541 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.4) size drop: 115520B (0.110MB), FLOPs drop: 1890.714M, param drop: 0.029M
2023-05-15 20:34:16,542 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.8) acc drop: 0.0002
2023-05-15 20:34:16,548 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.8) size drop: 235840B (0.225MB), FLOPs drop: 3857.056M, param drop: 0.059M
2023-05-15 20:34:16,563 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.0) acc drop: -0.00020000000000000017
2023-05-15 20:34:16,574 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,574 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.4) acc drop: -0.0003
2023-05-15 20:34:16,585 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.4) size drop: 353344B (0.337MB), FLOPs drop: 1445.560M, param drop: 0.088M
2023-05-15 20:34:16,585 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.8) acc drop: -0.0003333333333333333
2023-05-15 20:34:16,594 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.8) size drop: 706624B (0.674MB), FLOPs drop: 2891.121M, param drop: 0.176M
2023-05-15 20:34:16,603 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.0) acc drop: 0.0003333333333333333
2023-05-15 20:34:16,618 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,618 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.4) acc drop: 0.00046666666666666666
2023-05-15 20:34:16,628 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.4) size drop: 470848B (0.449MB), FLOPs drop: 1926.857M, param drop: 0.118M
2023-05-15 20:34:16,628 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.8) acc drop: 0.0003000000000000001
2023-05-15 20:34:16,637 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.8) size drop: 941632B (0.898MB), FLOPs drop: 3853.713M, param drop: 0.235M
2023-05-15 20:34:16,645 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.0) acc drop: -0.00010000000000000005
2023-05-15 20:34:16,663 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,663 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.4) acc drop: -0.0007666666666666664
2023-05-15 20:34:16,676 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.4) size drop: 1411712B (1.346MB), FLOPs drop: 5778.899M, param drop: 0.353M
2023-05-15 20:34:16,676 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.8) acc drop: -0.0007999999999999998
2023-05-15 20:34:16,686 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.8) size drop: 2823296B (2.693MB), FLOPs drop: 11557.798M, param drop: 0.705M
2023-05-15 20:34:16,700 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.0) acc drop: 0.0006666666666666665
2023-05-15 20:34:16,726 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,726 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.4) acc drop: -0.0002
2023-05-15 20:34:16,744 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.4) size drop: 1881664B (1.794MB), FLOPs drop: 7704.084M, param drop: 0.470M
2023-05-15 20:34:16,744 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.8) acc drop: -0.00016666666666666666
2023-05-15 20:34:16,756 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.8) size drop: 3763264B (3.589MB), FLOPs drop: 15408.169M, param drop: 0.940M
2023-05-15 20:34:16,785 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.0) acc drop: -0.0016
2023-05-15 20:34:16,862 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:16,862 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.4) acc drop: -0.002466666666666667
2023-05-15 20:34:16,903 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.4) size drop: 5643328B (5.382MB), FLOPs drop: 23108.911M, param drop: 1.410M
2023-05-15 20:34:16,903 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.8) acc drop: -0.0013999999999999996
2023-05-15 20:34:16,936 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.8) size drop: 11314560B (10.790MB), FLOPs drop: 46331.101M, param drop: 2.828M
2023-05-15 20:34:16,998 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.0) acc drop: -0.0004333333333333335
2023-05-15 20:34:17,055 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:17,055 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.4) acc drop: -0.0014000000000000002
2023-05-15 20:34:17,100 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.4) size drop: 7523392B (7.175MB), FLOPs drop: 30809.653M, param drop: 1.880M
2023-05-15 20:34:17,100 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.8) acc drop: -0.0005333333333333335
2023-05-15 20:34:17,132 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.8) size drop: 15083840B (14.385MB), FLOPs drop: 61770.334M, param drop: 3.770M
2023-05-15 20:34:17,172 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.0) acc drop: -0.001
2023-05-15 20:34:17,194 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 20:34:17,194 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.4) acc drop: -0.0008666666666666667
2023-05-15 20:34:17,225 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.4) size drop: 1553088B (1.481MB), FLOPs drop: 6357.959M, param drop: 0.388M
2023-05-15 20:34:17,225 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.8) acc drop: -0.0003
2023-05-15 20:34:17,241 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.8) size drop: 2918784B (2.784MB), FLOPs drop: 11948.851M, param drop: 0.729M
2023-05-15 20:34:17,465 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 0, "id": "block-0", "latency": 0.0012078838164989766}
2023-05-15 20:34:17,727 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 1, "id": "block-1", "latency": 0.0012832950188563417}
2023-05-15 20:34:17,914 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 2, "id": "block-2", "latency": 0.0007744556344472448}
2023-05-15 20:34:18,138 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 3, "id": "block-3", "latency": 0.0008668366757723003}
2023-05-15 20:34:18,256 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 4, "id": "block-4", "latency": 0.0009075554471749528}
2023-05-15 20:34:18,470 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 5, "id": "block-5", "latency": 0.001654495017345135}
2023-05-15 20:34:18,838 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 6, "id": "block-6", "latency": 0.001992260434077337}
2023-05-15 20:34:19,732 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 7, "id": "block-7", "latency": 0.006214789375892052}
2023-05-15 20:34:20,907 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 8, "id": "block-8", "latency": 0.008431761734302226}
2023-05-15 20:34:21,327 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 9, "id": "block-9", "latency": 0.002872800984749428}
2023-05-15 20:34:21,334 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2023-05-15 20:34:21,339 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.0) from file
2023-05-15 20:34:21,359 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 20:34:21,364 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.0) from file
2023-05-15 20:34:21,370 - pure_runtime.py[42] - DEBUG: load 3th block (block-3) (sparsity 0.0) from file
2023-05-15 20:34:21,374 - pure_runtime.py[42] - DEBUG: load 4th block (block-4) (sparsity 0.0) from file
2023-05-15 20:34:21,384 - pure_runtime.py[42] - DEBUG: load 5th block (block-5) (sparsity 0.0) from file
2023-05-15 20:34:21,395 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.0) from file
2023-05-15 20:34:21,418 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.0) from file
2023-05-15 20:34:21,432 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.0) from file
2023-05-15 20:34:21,443 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 20:34:23,192 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 20:34:23,358 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.4) latency rel drop: 10.660% (0.001s -> 0.001s)
2023-05-15 20:34:23,500 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.8) latency rel drop: 33.191% (0.001s -> 0.001s)
2023-05-15 20:34:23,966 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 20:34:24,156 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.4) latency rel drop: -29.851% (0.001s -> 0.001s)
2023-05-15 20:34:24,335 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.8) latency rel drop: 1.613% (0.001s -> 0.001s)
2023-05-15 20:34:24,682 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 20:34:24,818 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.4) latency rel drop: -29.722% (0.001s -> 0.001s)
2023-05-15 20:34:24,959 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.8) latency rel drop: -36.283% (0.001s -> 0.001s)
2023-05-15 20:34:25,351 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 20:34:25,535 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.4) latency rel drop: 11.554% (0.001s -> 0.001s)
2023-05-15 20:34:25,697 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.8) latency rel drop: -34.348% (0.001s -> 0.001s)
2023-05-15 20:34:25,985 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 20:34:26,103 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.4) latency rel drop: 27.962% (0.001s -> 0.001s)
2023-05-15 20:34:26,216 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.8) latency rel drop: 26.428% (0.001s -> 0.001s)
2023-05-15 20:34:26,819 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.0) latency rel drop: 0.000% (0.002s -> 0.002s)
2023-05-15 20:34:26,970 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.4) latency rel drop: 33.806% (0.002s -> 0.001s)
2023-05-15 20:34:27,158 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.8) latency rel drop: 33.718% (0.002s -> 0.001s)
2023-05-15 20:34:27,865 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.0) latency rel drop: 0.000% (0.002s -> 0.002s)
2023-05-15 20:34:28,103 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.4) latency rel drop: 21.024% (0.002s -> 0.002s)
2023-05-15 20:34:28,267 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.8) latency rel drop: 47.577% (0.002s -> 0.001s)
2023-05-15 20:34:30,246 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.0) latency rel drop: 0.000% (0.007s -> 0.007s)
2023-05-15 20:34:30,836 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.4) latency rel drop: 40.419% (0.007s -> 0.004s)
2023-05-15 20:34:31,165 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.8) latency rel drop: 74.249% (0.007s -> 0.002s)
2023-05-15 20:34:33,448 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.0) latency rel drop: 0.000% (0.009s -> 0.009s)
2023-05-15 20:34:34,224 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.4) latency rel drop: 30.941% (0.009s -> 0.006s)
2023-05-15 20:34:34,584 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.8) latency rel drop: 74.278% (0.009s -> 0.002s)
2023-05-15 20:34:35,438 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.0) latency rel drop: 0.000% (0.003s -> 0.003s)
2023-05-15 20:34:35,782 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.4) latency rel drop: 23.201% (0.003s -> 0.002s)
2023-05-15 20:34:36,079 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.8) latency rel drop: 41.520% (0.003s -> 0.002s)
2023-05-15 20:34:36,080 - optimal_runtime.py[21] - INFO: init adaptive model runtime
2023-05-15 20:34:36,090 - optimal_runtime.py[147] - INFO: load blocks metrics
2023-05-15 20:34:36,105 - optimal_runtime.py[176] - INFO: load model metrics
2023-05-15 20:34:36,113 - optimal_runtime.py[187] - INFO: load sparest blocks for initializing model
2023-05-15 20:34:36,114 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:36,119 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 20:34:36,133 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 20:34:36,140 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 20:34:36,147 - pure_runtime.py[42] - DEBUG: load 3th block (block-3) (sparsity 0.8) from file
2023-05-15 20:34:36,152 - pure_runtime.py[42] - DEBUG: load 4th block (block-4) (sparsity 0.8) from file
2023-05-15 20:34:36,158 - pure_runtime.py[42] - DEBUG: load 5th block (block-5) (sparsity 0.8) from file
2023-05-15 20:34:36,162 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 20:34:36,178 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.8) from file
2023-05-15 20:34:36,188 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.8) from file
2023-05-15 20:34:36,194 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 20:34:36,384 - gen_series_legodnn_models.py[17] - INFO: min model size: 0.613MB, max model size: 50.035MB
2023-05-15 20:34:36,385 - gen_series_legodnn_models.py[28] - INFO: target model size: 0.613MB
2023-05-15 20:34:36,385 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 642680.0B (0.613MB), try to adapt blocks
2023-05-15 20:34:36,388 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:36,457 - optimal_runtime.py[77] - INFO: infer time of current model: 0.059060287475585935
2023-05-15 20:34:36,457 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008003199864178896, 0.0008108479976654052, 0.0004821119904518128, 0.0005907519981265067, 0.0004646399952471256, 0.0007287999838590621, 0.0008631680049002172, 0.0017852799966931341, 0.002032192025333643, 0.0015754240266978741]
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.008
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.557
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.189
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.971
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.437
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.505
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.210
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.896
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.067
2023-05-15 20:34:36,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.066
2023-05-15 20:34:36,458 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:36,458 - optimal_runtime.py[116] - INFO: avg ratio: 1.2644000668780582
2023-05-15 20:34:36,459 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010197219992040806
2023-05-15 20:34:36,459 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00119792 0.00082414 0.00035376 0.00043972 0.00063154 0.00109955
 0.00164654 0.00693296 0.00790048 0.00269397]
2023-05-15 20:34:36,462 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:36,857 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:36,858 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:36,864 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00119792 0.00082414 0.00035376 0.00043972 0.00063154 0.00109955
 0.00164654 0.00693296 0.00790048 0.00269397]
2023-05-15 20:34:36,868 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:37,103 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:37,104 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:37,105 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -56758460416.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.00338982043638519,
  'esti_test_accuracy': 0.005033333333333332,
  'is_relaxed': True,
  'model_size': 13291841.0,
  'update_swap_mem_cost': 0,
  'update_swap_time_cost': 0.00016355514526367188}
2023-05-15 20:34:37,168 - gen_series_legodnn_models.py[28] - INFO: target model size: 1.112MB
2023-05-15 20:34:37,168 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 1166145.7878787878B (1.112MB), try to adapt blocks
2023-05-15 20:34:37,170 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:37,233 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04094617462158203
2023-05-15 20:34:37,234 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010653760116547345, 0.0013910080045461655, 0.0006489600017666817, 0.0006233920045197011, 0.0004858560003340244, 0.0007813440151512624, 0.0009074239954352378, 0.0016663039848208428, 0.0022050879690796135, 0.0014607680281624198]
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.757
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.908
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.626
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.868
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.374
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.404
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.151
2023-05-15 20:34:37,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.960
2023-05-15 20:34:37,235 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.984
2023-05-15 20:34:37,235 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.150
2023-05-15 20:34:37,235 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:37,235 - optimal_runtime.py[116] - INFO: avg ratio: 1.1329308157018478
2023-05-15 20:34:37,235 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011380541036761595
2023-05-15 20:34:37,236 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00159465 0.00141381 0.00047618 0.00046401 0.00066038 0.00117882
 0.00173097 0.00647092 0.00857265 0.00249791]
2023-05-15 20:34:37,237 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:37,465 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:37,465 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:37,469 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00159465 0.00141381 0.00047618 0.00046401 0.00066038 0.00117882
 0.00173097 0.00647092 0.00857265 0.00249791]
2023-05-15 20:34:37,471 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:37,786 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:37,788 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:37,788 - gen_series_legodnn_models.py[28] - INFO: target model size: 1.611MB
2023-05-15 20:34:37,788 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 1689611.5757575757B (1.611MB), try to adapt blocks
2023-05-15 20:34:37,790 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:37,864 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05856979370117187
2023-05-15 20:34:37,864 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011206400031223893, 0.0008440639954060316, 0.001293663987889886, 0.00047302399296313526, 0.00036236799322068695, 0.0007056000074371695, 0.0006823360109701751, 0.0018840319626033308, 0.0021147199869155885, 0.0017678720126859844]
2023-05-15 20:34:37,864 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.720
2023-05-15 20:34:37,864 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.496
2023-05-15 20:34:37,864 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.816
2023-05-15 20:34:37,864 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.462
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.843
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.554
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.531
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.849
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.026
2023-05-15 20:34:37,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.950
2023-05-15 20:34:37,865 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:37,865 - optimal_runtime.py[116] - INFO: avg ratio: 1.2580596016035783
2023-05-15 20:34:37,865 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010248612723492761
2023-05-15 20:34:37,866 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00167737 0.0008579  0.00094925 0.00035209 0.00049253 0.00106454
 0.0013016  0.00731645 0.00822133 0.00302306]
2023-05-15 20:34:37,867 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:38,168 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:38,168 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:38,170 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00167737 0.0008579  0.00094925 0.00035209 0.00049253 0.00106454
 0.0013016  0.00731645 0.00822133 0.00302306]
2023-05-15 20:34:38,171 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:38,467 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:38,468 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:38,468 - gen_series_legodnn_models.py[28] - INFO: target model size: 2.111MB
2023-05-15 20:34:38,468 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 2213077.3636363638B (2.111MB), try to adapt blocks
2023-05-15 20:34:38,470 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:38,554 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0638114891052246
2023-05-15 20:34:38,554 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010061439834535123, 0.001095583997666836, 0.0007266880013048649, 0.0007498879954218864, 0.0006871999907307327, 0.000742367997765541, 0.0007548479875549674, 0.001689631948247552, 0.0020185920242220164, 0.0018130879686214028]
2023-05-15 20:34:38,554 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.802
2023-05-15 20:34:38,554 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.152
2023-05-15 20:34:38,554 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.452
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.553
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.972
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.477
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.384
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.947
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.074
2023-05-15 20:34:38,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.927
2023-05-15 20:34:38,555 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:38,555 - optimal_runtime.py[116] - INFO: avg ratio: 1.0759774380229385
2023-05-15 20:34:38,555 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011982933084171041
2023-05-15 20:34:38,556 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150599 0.00111354 0.00053322 0.00055817 0.00093405 0.00112002
 0.00143992 0.00656152 0.00784761 0.00310038]
2023-05-15 20:34:38,557 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:38,816 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:38,817 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:38,819 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150599 0.00111354 0.00053322 0.00055817 0.00093405 0.00112002
 0.00143992 0.00656152 0.00784761 0.00310038]
2023-05-15 20:34:38,820 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:39,152 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:39,154 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:39,157 - gen_series_legodnn_models.py[28] - INFO: target model size: 2.610MB
2023-05-15 20:34:39,158 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 2736543.1515151514B (2.610MB), try to adapt blocks
2023-05-15 20:34:39,161 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:39,302 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1188595199584961
2023-05-15 20:34:39,302 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010886080041527747, 0.007662591956555843, 0.007167327821254729, 0.0009274559915065765, 0.0008678400032222271, 0.000600159994326532, 0.0008187520019710064, 0.0017006399650126697, 0.002042784014716744, 0.0017267520148307085]
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.741
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.008 = 0.165
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.007 = 0.147
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.256
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.769
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.827
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.276
2023-05-15 20:34:39,302 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.941
2023-05-15 20:34:39,303 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.062
2023-05-15 20:34:39,303 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.973
2023-05-15 20:34:39,303 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 3, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:39,303 - optimal_runtime.py[116] - INFO: avg ratio: 1.0025172364007944
2023-05-15 20:34:39,303 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012860991483992853
2023-05-15 20:34:39,304 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00162942 0.00778818 0.00525913 0.00069034 0.00117958 0.00090547
 0.00156182 0.00660427 0.00794166 0.00295274]
2023-05-15 20:34:39,305 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:39,554 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:39,555 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:39,557 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00162942 0.00778818 0.00525913 0.00069034 0.00117958 0.00090547
 0.00156182 0.00660427 0.00794166 0.00295274]
2023-05-15 20:34:39,561 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:39,818 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:39,819 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:39,819 - gen_series_legodnn_models.py[28] - INFO: target model size: 3.109MB
2023-05-15 20:34:39,819 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 3260008.9393939395B (3.109MB), try to adapt blocks
2023-05-15 20:34:39,821 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:39,886 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049662208557128905
2023-05-15 20:34:39,886 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008266879841685294, 0.0007213439997285604, 0.0009645119812339545, 0.0009255679994821549, 0.0002912960019893944, 0.0008860799842514098, 0.0010140479765832424, 0.0019167680069804192, 0.002119935968890786, 0.001624576009809971]
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.976
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.750
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.094
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.258
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.292
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.238
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.030
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.835
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:34:39,887 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.034
2023-05-15 20:34:39,888 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 2, 3, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:39,888 - optimal_runtime.py[116] - INFO: avg ratio: 1.061042810881188
2023-05-15 20:34:39,888 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012151597944666175
2023-05-15 20:34:39,888 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00123738 0.00073317 0.00070773 0.00068893 0.00039593 0.00133683
 0.00193436 0.00744358 0.0082416  0.00277802]
2023-05-15 20:34:39,890 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:40,167 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:40,168 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:40,172 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00123738 0.00073317 0.00070773 0.00068893 0.00039593 0.00133683
 0.00193436 0.00744358 0.0082416  0.00277802]
2023-05-15 20:34:40,174 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:40,458 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:40,459 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:40,459 - gen_series_legodnn_models.py[28] - INFO: target model size: 3.608MB
2023-05-15 20:34:40,459 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 3783474.7272727275B (3.608MB), try to adapt blocks
2023-05-15 20:34:40,461 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:40,531 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05264976119995117
2023-05-15 20:34:40,531 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008414079854264855, 0.001097215972840786, 0.0004355840031057596, 0.0002658240012824535, 0.00035699200257658964, 0.0010311679951846599, 0.0009250879883766175, 0.0018484480008482932, 0.00207311999052763, 0.0015915200198069216]
2023-05-15 20:34:40,531 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.959
2023-05-15 20:34:40,531 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.151
2023-05-15 20:34:40,531 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.423
2023-05-15 20:34:40,531 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 4.381
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.870
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.063
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.129
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.866
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.046
2023-05-15 20:34:40,532 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.056
2023-05-15 20:34:40,532 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:40,532 - optimal_runtime.py[116] - INFO: avg ratio: 1.2848085679650483
2023-05-15 20:34:40,533 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010035242573395895
2023-05-15 20:34:40,533 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00125942 0.0011152  0.00031962 0.00019786 0.00048523 0.00155573
 0.00176466 0.00717826 0.0080596  0.0027215 ]
2023-05-15 20:34:40,535 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:40,740 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:40,740 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:40,744 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00125942 0.0011152  0.00031962 0.00019786 0.00048523 0.00155573
 0.00176466 0.00717826 0.0080596  0.0027215 ]
2023-05-15 20:34:40,746 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:41,042 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:41,043 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:41,044 - gen_series_legodnn_models.py[28] - INFO: target model size: 4.107MB
2023-05-15 20:34:41,044 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 4306940.515151516B (4.107MB), try to adapt blocks
2023-05-15 20:34:41,047 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:41,174 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09863426971435547
2023-05-15 20:34:41,174 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011066240034997463, 0.0010450560078024865, 0.0005920319855213165, 0.0007530239969491958, 0.000546879991889, 0.0007605760022997856, 0.0008850240074098109, 0.001812031999230385, 0.0020788160264492033, 0.001597023993730545]
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.729
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.208
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.783
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.547
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.221
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.442
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.180
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.883
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.043
2023-05-15 20:34:41,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.052
2023-05-15 20:34:41,175 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:41,175 - optimal_runtime.py[116] - INFO: avg ratio: 1.1910500478748525
2023-05-15 20:34:41,175 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010825208951472553
2023-05-15 20:34:41,176 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00165639 0.00106218 0.00043441 0.0005605  0.00074333 0.00114749
 0.00168824 0.00703684 0.00808174 0.00273091]
2023-05-15 20:34:41,177 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:41,402 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:41,403 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:41,406 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00165639 0.00106218 0.00043441 0.0005605  0.00074333 0.00114749
 0.00168824 0.00703684 0.00808174 0.00273091]
2023-05-15 20:34:41,408 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:41,662 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:41,666 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:41,668 - gen_series_legodnn_models.py[28] - INFO: target model size: 4.607MB
2023-05-15 20:34:41,669 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 4830406.303030303B (4.607MB), try to adapt blocks
2023-05-15 20:34:41,673 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:41,728 - optimal_runtime.py[77] - INFO: infer time of current model: 0.03979958343505859
2023-05-15 20:34:41,728 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010343039892613888, 0.0009734719917178156, 0.0005110400021076202, 0.0006274880021810531, 0.0004887039996683598, 0.0007581120021641255, 0.0008886079825460912, 0.0018144319653511044, 0.0020581759735941885, 0.0015793599896132948]
2023-05-15 20:34:41,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.780
2023-05-15 20:34:41,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.297
2023-05-15 20:34:41,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.065
2023-05-15 20:34:41,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.856
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.366
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.447
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.175
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.882
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.054
2023-05-15 20:34:41,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.064
2023-05-15 20:34:41,729 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:41,729 - optimal_runtime.py[116] - INFO: avg ratio: 1.2337732583899033
2023-05-15 20:34:41,729 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010450352649669798
2023-05-15 20:34:41,730 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00154814 0.00098943 0.00037498 0.00046706 0.00066425 0.00114377
 0.00169507 0.00704616 0.0080015  0.0027007 ]
2023-05-15 20:34:41,731 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:42,097 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:42,097 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:42,100 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00154814 0.00098943 0.00037498 0.00046706 0.00066425 0.00114377
 0.00169507 0.00704616 0.0080015  0.0027007 ]
2023-05-15 20:34:42,101 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:42,348 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:42,350 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:42,351 - gen_series_legodnn_models.py[28] - INFO: target model size: 5.106MB
2023-05-15 20:34:42,351 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 5353872.090909091B (5.106MB), try to adapt blocks
2023-05-15 20:34:42,355 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:42,419 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04632022476196289
2023-05-15 20:34:42,420 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001170656006783247, 0.0011056319922208785, 0.0006478080078959465, 0.0008038720190525055, 0.0005773759931325912, 0.000868767999112606, 0.0009688640050590038, 0.0018978560119867324, 0.0021192959398031236, 0.0017054079845547675]
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.689
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.142
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.629
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.449
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.156
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.262
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.078
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.843
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:34:42,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.985
2023-05-15 20:34:42,421 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:42,421 - optimal_runtime.py[116] - INFO: avg ratio: 1.1078596573880855
2023-05-15 20:34:42,421 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011638085703295985
2023-05-15 20:34:42,422 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00175223 0.00112375 0.00047534 0.00059835 0.00078478 0.00131072
 0.00184817 0.00737013 0.00823912 0.00291625]
2023-05-15 20:34:42,423 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:42,808 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:42,809 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:42,815 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00175223 0.00112375 0.00047534 0.00059835 0.00078478 0.00131072
 0.00184817 0.00737013 0.00823912 0.00291625]
2023-05-15 20:34:42,817 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:43,108 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:43,109 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:43,109 - gen_series_legodnn_models.py[28] - INFO: target model size: 5.605MB
2023-05-15 20:34:43,110 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 5877337.878787879B (5.605MB), try to adapt blocks
2023-05-15 20:34:43,112 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:43,169 - optimal_runtime.py[77] - INFO: infer time of current model: 0.038644287109375
2023-05-15 20:34:43,170 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010223999992012979, 0.000978816006332636, 0.0005299840010702609, 0.0006088640168309211, 0.0004620480015873909, 0.0007253439910709858, 0.0008576320111751556, 0.001780159942805767, 0.0020473920330405238, 0.001553823981434107]
2023-05-15 20:34:43,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.789
2023-05-15 20:34:43,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.290
2023-05-15 20:34:43,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.991
2023-05-15 20:34:43,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.913
2023-05-15 20:34:43,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.445
2023-05-15 20:34:43,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.512
2023-05-15 20:34:43,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 20:34:43,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 20:34:43,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.059
2023-05-15 20:34:43,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.081
2023-05-15 20:34:43,172 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:43,172 - optimal_runtime.py[116] - INFO: avg ratio: 1.2675351576948
2023-05-15 20:34:43,172 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010171998434627374
2023-05-15 20:34:43,173 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00153032 0.00099486 0.00038888 0.0004532  0.00062802 0.00109433
 0.00163598 0.00691307 0.00795958 0.00265704]
2023-05-15 20:34:43,176 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:43,451 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:43,452 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:43,456 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00153032 0.00099486 0.00038888 0.0004532  0.00062802 0.00109433
 0.00163598 0.00691307 0.00795958 0.00265704]
2023-05-15 20:34:43,458 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:43,793 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:43,794 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:43,794 - gen_series_legodnn_models.py[28] - INFO: target model size: 6.104MB
2023-05-15 20:34:43,794 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 6400803.666666667B (6.104MB), try to adapt blocks
2023-05-15 20:34:43,796 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:43,884 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06837916564941406
2023-05-15 20:34:43,885 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.000762975974008441, 0.0014684800207614898, 0.0004715200010687113, 0.0004713600082322955, 0.002684991918504238, 0.0007413119897246362, 0.0008703360036015511, 0.0017695680111646653, 0.0020388799980282785, 0.001549823973327875]
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.058
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.860
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.238
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.471
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.249
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.479
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.200
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.904
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.064
2023-05-15 20:34:43,885 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.084
2023-05-15 20:34:43,885 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:43,886 - optimal_runtime.py[116] - INFO: avg ratio: 1.0926997609942861
2023-05-15 20:34:43,886 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011799550160214676
2023-05-15 20:34:43,886 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00114202 0.00149255 0.00034598 0.00035085 0.00364947 0.00111842
 0.00166022 0.00687194 0.00792648 0.0026502 ]
2023-05-15 20:34:43,887 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:44,170 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:44,171 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:44,174 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00114202 0.00149255 0.00034598 0.00035085 0.00364947 0.00111842
 0.00166022 0.00687194 0.00792648 0.0026502 ]
2023-05-15 20:34:44,177 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:44,443 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:44,443 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:44,444 - gen_series_legodnn_models.py[28] - INFO: target model size: 6.603MB
2023-05-15 20:34:44,444 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 6924269.454545455B (6.603MB), try to adapt blocks
2023-05-15 20:34:44,447 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:44,511 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047432254791259766
2023-05-15 20:34:44,512 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009128960138186813, 0.000976320005953312, 0.0005231680087745189, 0.0006550400108098983, 0.0005202240087091923, 0.000785056009888649, 0.0009022399820387363, 0.0018352320268750191, 0.0020605760589241986, 0.0016313599869608878]
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.884
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.293
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.017
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.778
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.284
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.397
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.158
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.872
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.053
2023-05-15 20:34:44,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.030
2023-05-15 20:34:44,513 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:44,513 - optimal_runtime.py[116] - INFO: avg ratio: 1.2022559279595821
2023-05-15 20:34:44,513 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.0107243103070315
2023-05-15 20:34:44,513 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00136642 0.00099232 0.00038388 0.00048757 0.00070709 0.00118442
 0.00172108 0.00712694 0.00801083 0.00278962]
2023-05-15 20:34:44,515 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:44,760 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:44,761 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:44,764 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00136642 0.00099232 0.00038388 0.00048757 0.00070709 0.00118442
 0.00172108 0.00712694 0.00801083 0.00278962]
2023-05-15 20:34:44,765 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:45,055 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:45,055 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:45,055 - gen_series_legodnn_models.py[28] - INFO: target model size: 7.103MB
2023-05-15 20:34:45,055 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 7447735.242424243B (7.103MB), try to adapt blocks
2023-05-15 20:34:45,057 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:45,122 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049013088226318356
2023-05-15 20:34:45,122 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.002369472051039338, 0.0011200320180505515, 0.0005699519924819469, 0.000574271994177252, 0.0004918400119058787, 0.0009622719958424568, 0.0009350399989634752, 0.0017219840083271265, 0.0020078720171004534, 0.0015776639990508555]
2023-05-15 20:34:45,122 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.341
2023-05-15 20:34:45,122 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.127
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.852
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.028
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.358
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.140
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.117
2023-05-15 20:34:45,123 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.929
2023-05-15 20:34:45,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.080
2023-05-15 20:34:45,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.065
2023-05-15 20:34:45,124 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:45,125 - optimal_runtime.py[116] - INFO: avg ratio: 1.116550061067782
2023-05-15 20:34:45,125 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011547503412051628
2023-05-15 20:34:45,125 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00354661 0.00113839 0.00041821 0.00042745 0.00066851 0.00145179
 0.00178365 0.00668715 0.00780594 0.0026978 ]
2023-05-15 20:34:45,127 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:45,384 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:45,385 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:45,392 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00354661 0.00113839 0.00041821 0.00042745 0.00066851 0.00145179
 0.00178365 0.00668715 0.00780594 0.0026978 ]
2023-05-15 20:34:45,394 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:45,730 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:45,731 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:45,731 - gen_series_legodnn_models.py[28] - INFO: target model size: 7.602MB
2023-05-15 20:34:45,731 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 7971201.03030303B (7.602MB), try to adapt blocks
2023-05-15 20:34:45,734 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:45,835 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07831712341308594
2023-05-15 20:34:45,835 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012339520202949642, 0.0010307200141251086, 0.0006922240117564798, 0.0009559999955818057, 0.0005761919990181923, 0.0008411200009286403, 0.0009062399975955486, 0.0018790719956159594, 0.002009152039885521, 0.0016291840039193632]
2023-05-15 20:34:45,835 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.654
2023-05-15 20:34:45,835 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.225
2023-05-15 20:34:45,835 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.525
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.159
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.304
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.152
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.852
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.079
2023-05-15 20:34:45,836 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.031
2023-05-15 20:34:45,837 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:45,837 - optimal_runtime.py[116] - INFO: avg ratio: 1.1669833144198951
2023-05-15 20:34:45,837 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01104845757483339
2023-05-15 20:34:45,837 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00184697 0.00104761 0.00050793 0.00071159 0.00078317 0.001269
 0.00172871 0.00729719 0.00781091 0.0027859 ]
2023-05-15 20:34:45,839 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:46,128 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:46,129 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:46,133 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00184697 0.00104761 0.00050793 0.00071159 0.00078317 0.001269
 0.00172871 0.00729719 0.00781091 0.0027859 ]
2023-05-15 20:34:46,135 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:46,506 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:46,508 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:46,508 - gen_series_legodnn_models.py[28] - INFO: target model size: 8.101MB
2023-05-15 20:34:46,509 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 8494666.818181818B (8.101MB), try to adapt blocks
2023-05-15 20:34:46,512 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:46,600 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0722352294921875
2023-05-15 20:34:46,601 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0016876800060272217, 0.0013328320048749448, 0.000844960007816553, 0.000558464014902711, 0.0005184960002079606, 0.004402848009951412, 0.0010235519949346782, 0.0018235199768096208, 0.002077695978805423, 0.0016000320268794894]
2023-05-15 20:34:46,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.478
2023-05-15 20:34:46,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.947
2023-05-15 20:34:46,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.249
2023-05-15 20:34:46,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.085
2023-05-15 20:34:46,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.288
2023-05-15 20:34:46,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.004 = 0.249
2023-05-15 20:34:46,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.020
2023-05-15 20:34:46,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.878
2023-05-15 20:34:46,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.044
2023-05-15 20:34:46,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.050
2023-05-15 20:34:46,603 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:46,603 - optimal_runtime.py[116] - INFO: avg ratio: 1.0680056802391162
2023-05-15 20:34:46,603 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012072375529894153
2023-05-15 20:34:46,604 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00252611 0.00135468 0.00062    0.00041569 0.00070475 0.00664261
 0.00195249 0.00708146 0.00807739 0.00273605]
2023-05-15 20:34:46,605 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:46,927 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:46,928 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:46,934 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00252611 0.00135468 0.00062    0.00041569 0.00070475 0.00664261
 0.00195249 0.00708146 0.00807739 0.00273605]
2023-05-15 20:34:46,937 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:47,210 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:47,211 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:47,211 - gen_series_legodnn_models.py[28] - INFO: target model size: 8.600MB
2023-05-15 20:34:47,211 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 9018132.606060605B (8.600MB), try to adapt blocks
2023-05-15 20:34:47,213 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:47,283 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047602142333984375
2023-05-15 20:34:47,283 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010979199931025504, 0.0012870720028877259, 0.0008090879991650581, 0.0009771519899368286, 0.0006265280023217202, 0.0008739839904010295, 0.0010151679888367653, 0.00193292798101902, 0.0020707839950919148, 0.001563935976475477]
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.735
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.981
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.304
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.192
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.066
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.255
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.029
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.828
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.047
2023-05-15 20:34:47,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.074
2023-05-15 20:34:47,284 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 6, 8, 9]),)
2023-05-15 20:34:47,284 - optimal_runtime.py[116] - INFO: avg ratio: 1.0648147357350346
2023-05-15 20:34:47,284 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012108552978473255
2023-05-15 20:34:47,285 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00164336 0.00130817 0.00059368 0.00072733 0.00085158 0.00131859
 0.00193649 0.00750633 0.00805052 0.00267433]
2023-05-15 20:34:47,286 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:47,507 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:47,508 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:47,511 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00164336 0.00130817 0.00059368 0.00072733 0.00085158 0.00131859
 0.00193649 0.00750633 0.00805052 0.00267433]
2023-05-15 20:34:47,513 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:47,829 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:47,831 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:47,832 - gen_series_legodnn_models.py[28] - INFO: target model size: 9.100MB
2023-05-15 20:34:47,832 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 9541598.393939395B (9.100MB), try to adapt blocks
2023-05-15 20:34:47,836 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:47,916 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05886646270751953
2023-05-15 20:34:47,916 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010548480078577994, 0.001018303994089365, 0.0005328639931976795, 0.0006584959998726845, 0.0005114879943430424, 0.0008009600043296814, 0.0009104959964752198, 0.0018396159633994103, 0.0020742719620466237, 0.0016578240171074867]
2023-05-15 20:34:47,916 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.765
2023-05-15 20:34:47,916 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.240
2023-05-15 20:34:47,916 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.981
2023-05-15 20:34:47,916 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.769
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.305
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.369
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.147
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.870
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.046
2023-05-15 20:34:47,917 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.013
2023-05-15 20:34:47,917 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:47,918 - optimal_runtime.py[116] - INFO: avg ratio: 1.1867527691345308
2023-05-15 20:34:47,918 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010864407461471083
2023-05-15 20:34:47,918 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00157889 0.00103499 0.000391   0.00049014 0.00069522 0.00120841
 0.00173683 0.00714396 0.00806408 0.00283488]
2023-05-15 20:34:47,920 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:48,254 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:48,255 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:48,259 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00157889 0.00103499 0.000391   0.00049014 0.00069522 0.00120841
 0.00173683 0.00714396 0.00806408 0.00283488]
2023-05-15 20:34:48,261 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:48,513 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:48,514 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:48,514 - gen_series_legodnn_models.py[28] - INFO: target model size: 9.599MB
2023-05-15 20:34:48,514 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 10065064.181818182B (9.599MB), try to adapt blocks
2023-05-15 20:34:48,516 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:48,608 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07546575927734375
2023-05-15 20:34:48,608 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001252448007464409, 0.001191872000694275, 0.0007279679961502552, 0.0007367679951712488, 0.0003683200059458613, 0.0006049600038677454, 0.001328927998431027, 0.0016980480328202246, 0.0020208000410348176, 0.0029797760532237587]
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.644
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.059
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.450
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.581
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.813
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.813
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.786
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.942
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.073
2023-05-15 20:34:48,609 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.564
2023-05-15 20:34:48,610 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 6, 7, 8]),)
2023-05-15 20:34:48,610 - optimal_runtime.py[116] - INFO: avg ratio: 1.1485810356310129
2023-05-15 20:34:48,610 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011225473205574257
2023-05-15 20:34:48,613 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00187466 0.00121141 0.00053416 0.0005484  0.00050062 0.00091271
 0.00253501 0.0065942  0.0078562  0.00509541]
2023-05-15 20:34:48,616 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:48,901 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:48,901 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:48,904 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00187466 0.00121141 0.00053416 0.0005484  0.00050062 0.00091271
 0.00253501 0.0065942  0.0078562  0.00509541]
2023-05-15 20:34:48,906 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:49,252 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:49,254 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:49,254 - gen_series_legodnn_models.py[28] - INFO: target model size: 10.098MB
2023-05-15 20:34:49,254 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 10588529.96969697B (10.098MB), try to adapt blocks
2023-05-15 20:34:49,258 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:49,344 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06699369812011718
2023-05-15 20:34:49,345 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001163007976487279, 0.0011157760024070739, 0.00045152000710368153, 0.0009121920000761746, 0.0005163199938833713, 0.00117900799959898, 0.0008442559717223048, 0.0016850239802151917, 0.002412159942090511, 0.0019411199844907969]
2023-05-15 20:34:49,345 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.694
2023-05-15 20:34:49,345 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.132
2023-05-15 20:34:49,345 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.338
2023-05-15 20:34:49,345 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.277
2023-05-15 20:34:49,345 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.293
2023-05-15 20:34:49,346 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.930
2023-05-15 20:34:49,346 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.237
2023-05-15 20:34:49,346 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.950
2023-05-15 20:34:49,346 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 20:34:49,346 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.865
2023-05-15 20:34:49,346 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:49,347 - optimal_runtime.py[116] - INFO: avg ratio: 1.0728791022865827
2023-05-15 20:34:49,347 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012017538241193785
2023-05-15 20:34:49,347 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00174078 0.00113406 0.00033131 0.00067898 0.00070179 0.00177878
 0.00161047 0.00654362 0.00937767 0.00331931]
2023-05-15 20:34:49,349 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:49,659 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:49,660 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:49,663 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00174078 0.00113406 0.00033131 0.00067898 0.00070179 0.00177878
 0.00161047 0.00654362 0.00937767 0.00331931]
2023-05-15 20:34:49,666 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:49,991 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:49,993 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:49,993 - gen_series_legodnn_models.py[28] - INFO: target model size: 10.597MB
2023-05-15 20:34:49,993 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 11111995.757575758B (10.597MB), try to adapt blocks
2023-05-15 20:34:49,996 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:50,051 - optimal_runtime.py[77] - INFO: infer time of current model: 0.03938636779785156
2023-05-15 20:34:50,052 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010390399992465972, 0.000989152003079653, 0.0005302079953253269, 0.000624672006815672, 0.00047084800899028774, 0.0007251520045101642, 0.0008572799935936929, 0.0017844800017774106, 0.0020473919399082658, 0.0016422720104455947]
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.777
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.276
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.991
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.864
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.418
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.512
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.897
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.059
2023-05-15 20:34:50,052 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:34:50,053 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:50,053 - optimal_runtime.py[116] - INFO: avg ratio: 1.2512322164475052
2023-05-15 20:34:50,053 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010304534578332287
2023-05-15 20:34:50,054 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00155523 0.00100536 0.00038905 0.00046497 0.00063998 0.00109404
 0.00163531 0.00692985 0.00795958 0.00280828]
2023-05-15 20:34:50,055 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:50,297 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:50,297 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:50,303 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00155523 0.00100536 0.00038905 0.00046497 0.00063998 0.00109404
 0.00163531 0.00692985 0.00795958 0.00280828]
2023-05-15 20:34:50,306 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:50,576 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:50,576 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:50,577 - gen_series_legodnn_models.py[28] - INFO: target model size: 11.096MB
2023-05-15 20:34:50,577 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 11635461.545454547B (11.096MB), try to adapt blocks
2023-05-15 20:34:50,578 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:50,633 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04268966293334961
2023-05-15 20:34:50,633 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008641919950023293, 0.0009494080059230329, 0.0005295360013842582, 0.0006171840019524098, 0.00046227199956774714, 0.0007287680059671402, 0.0008590399883687497, 0.0017770880013704298, 0.0020306879617273807, 0.0015482239946722983]
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.934
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.330
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.993
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.887
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.444
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.505
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.216
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.901
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.068
2023-05-15 20:34:50,633 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.085
2023-05-15 20:34:50,634 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:50,634 - optimal_runtime.py[116] - INFO: avg ratio: 1.274665262001456
2023-05-15 20:34:50,634 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010115099253322194
2023-05-15 20:34:50,634 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00129352 0.00096497 0.00038856 0.00045939 0.00062833 0.0010995
 0.00163867 0.00690114 0.00789464 0.00264746]
2023-05-15 20:34:50,636 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:50,909 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:50,909 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:50,912 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00129352 0.00096497 0.00038856 0.00045939 0.00062833 0.0010995
 0.00163867 0.00690114 0.00789464 0.00264746]
2023-05-15 20:34:50,915 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:51,237 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:51,238 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:51,238 - gen_series_legodnn_models.py[28] - INFO: target model size: 11.596MB
2023-05-15 20:34:51,238 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 12158927.333333334B (11.596MB), try to adapt blocks
2023-05-15 20:34:51,240 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:51,315 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05445788955688476
2023-05-15 20:34:51,316 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010453119874000549, 0.0009944320023059846, 0.0005314880087971687, 0.0006632639952003955, 0.0005307519957423209, 0.00079926398396492, 0.0009150080159306527, 0.0020066559463739393, 0.002079904042184353, 0.0016477440260350704]
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.772
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.270
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.986
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.756
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.258
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.372
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.141
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.798
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.043
2023-05-15 20:34:51,316 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.020
2023-05-15 20:34:51,317 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:51,317 - optimal_runtime.py[116] - INFO: avg ratio: 1.1839195182412732
2023-05-15 20:34:51,317 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010890407195127518
2023-05-15 20:34:51,318 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00156462 0.00101073 0.00038999 0.00049369 0.0007214  0.00120585
 0.00174543 0.00779265 0.00808597 0.00281764]
2023-05-15 20:34:51,319 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:51,569 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:51,570 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:51,575 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00156462 0.00101073 0.00038999 0.00049369 0.0007214  0.00120585
 0.00174543 0.00779265 0.00808597 0.00281764]
2023-05-15 20:34:51,577 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:51,967 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:51,968 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:51,969 - gen_series_legodnn_models.py[28] - INFO: target model size: 12.095MB
2023-05-15 20:34:51,969 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 12682393.121212121B (12.095MB), try to adapt blocks
2023-05-15 20:34:51,971 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:52,037 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04693478393554688
2023-05-15 20:34:52,037 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011331199929118156, 0.0013605120033025743, 0.0009899840056896208, 0.0008987840088084339, 0.0006238720063120127, 0.0009063039980828761, 0.0008991039879620075, 0.001829920008778572, 0.002206879995763302, 0.0017496639899909497]
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.712
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.928
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.066
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.296
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.070
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.210
2023-05-15 20:34:52,037 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.162
2023-05-15 20:34:52,038 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.875
2023-05-15 20:34:52,038 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.983
2023-05-15 20:34:52,038 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.960
2023-05-15 20:34:52,038 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:52,038 - optimal_runtime.py[116] - INFO: avg ratio: 1.0062187797174482
2023-05-15 20:34:52,038 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012813680185463439
2023-05-15 20:34:52,039 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00169605 0.00138281 0.00072642 0.000669   0.00084797 0.00136735
 0.00171509 0.00710631 0.00857961 0.00299192]
2023-05-15 20:34:52,041 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:52,296 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:52,296 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 20:34:52,299 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00169605 0.00138281 0.00072642 0.000669   0.00084797 0.00136735
 0.00171509 0.00710631 0.00857961 0.00299192]
2023-05-15 20:34:52,301 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:52,735 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:52,736 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:52,736 - gen_series_legodnn_models.py[28] - INFO: target model size: 12.594MB
2023-05-15 20:34:52,737 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 13205858.90909091B (12.594MB), try to adapt blocks
2023-05-15 20:34:52,738 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:52,820 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06382131195068359
2023-05-15 20:34:52,820 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009911679904907942, 0.0006485440023243428, 0.0005526719931513071, 0.00040908799320459364, 0.0004720320031046867, 0.0008812480010092257, 0.0011088959891349078, 0.001801312020048499, 0.0020878080017864703, 0.0016203839930240065]
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.814
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.947
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.910
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.847
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.415
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.244
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.942
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.888
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.039
2023-05-15 20:34:52,821 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.037
2023-05-15 20:34:52,822 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:52,822 - optimal_runtime.py[116] - INFO: avg ratio: 1.248394912296086
2023-05-15 20:34:52,822 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010327954329926572
2023-05-15 20:34:52,823 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148358 0.00065917 0.00040553 0.0003045  0.00064159 0.00132954
 0.00211529 0.00699521 0.0081167  0.00277086]
2023-05-15 20:34:52,825 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:53,058 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:53,059 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13310716.50909091B (12.694MB) and continue finding solution
2023-05-15 20:34:53,066 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148358 0.00065917 0.00040553 0.0003045  0.00064159 0.00132954
 0.00211529 0.00699521 0.0081167  0.00277086]
2023-05-15 20:34:53,070 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:53,439 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:53,440 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:53,440 - gen_series_legodnn_models.py[28] - INFO: target model size: 13.093MB
2023-05-15 20:34:53,440 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 13729324.696969697B (13.093MB), try to adapt blocks
2023-05-15 20:34:53,441 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:53,514 - optimal_runtime.py[77] - INFO: infer time of current model: 0.058921024322509764
2023-05-15 20:34:53,515 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.005531711958348752, 0.0014848960191011428, 0.0006816000118851662, 0.0008156800009310244, 0.0006859199926257134, 0.0006178880031220615, 0.000975360003300011, 0.006660672176629305, 0.0021688320264220237, 0.0015984000000171363]
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.006 = 0.146
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.850
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.548
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.428
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.973
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.775
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.071
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.007 = 0.240
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.000
2023-05-15 20:34:53,515 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.051
2023-05-15 20:34:53,516 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 6, 8, 9]),)
2023-05-15 20:34:53,516 - optimal_runtime.py[116] - INFO: avg ratio: 1.0622212330144525
2023-05-15 20:34:53,516 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012138117031719362
2023-05-15 20:34:53,517 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00827984 0.00150923 0.00050013 0.00060714 0.00093231 0.00093221
 0.00186056 0.02586605 0.0084317  0.00273326]
2023-05-15 20:34:53,518 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:53,766 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:53,767 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:53,782 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 20:34:53,783 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -54792118272.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.01832617697813524,
  'esti_test_accuracy': 0.005166666666666665,
  'is_relaxed': False,
  'model_size': 13412161.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.015896320343017578}
2023-05-15 20:34:53,811 - gen_series_legodnn_models.py[28] - INFO: target model size: 13.593MB
2023-05-15 20:34:53,812 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 14252790.484848486B (13.593MB), try to adapt blocks
2023-05-15 20:34:53,813 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:53,861 - optimal_runtime.py[77] - INFO: infer time of current model: 0.03813216018676758
2023-05-15 20:34:53,862 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009359360039234161, 0.0009794239960610866, 0.0007167039811611175, 0.0006663679927587509, 0.00052819200232625, 0.0007827519960701464, 0.0009284799955785273, 0.0018244800493121146, 0.002088159956037998, 0.001624576024711132]
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.862
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.289
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.402
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.748
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.264
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.401
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.125
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.877
2023-05-15 20:34:53,862 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.039
2023-05-15 20:34:53,863 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.034
2023-05-15 20:34:53,863 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:53,863 - optimal_runtime.py[116] - INFO: avg ratio: 1.2219458029094414
2023-05-15 20:34:53,863 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010551503683066536
2023-05-15 20:34:53,864 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0014009  0.00099548 0.00055249 0.000496   0.00071792 0.00118094
 0.00177113 0.00708519 0.00811807 0.00277802]
2023-05-15 20:34:53,865 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:54,193 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:54,193 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 20:34:54,204 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 20:34:54,205 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -50935062528.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.0034535233960568384,
  'esti_test_accuracy': 0.005166666666666665,
  'is_relaxed': False,
  'model_size': 13648065.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.011185884475708008}
2023-05-15 20:34:54,239 - gen_series_legodnn_models.py[28] - INFO: target model size: 14.092MB
2023-05-15 20:34:54,239 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 14776256.272727273B (14.092MB), try to adapt blocks
2023-05-15 20:34:54,241 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:54,320 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06769475555419922
2023-05-15 20:34:54,321 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011216640211641788, 0.00118358401581645, 0.0006907199956476688, 0.0006431039981544018, 0.0005543039962649346, 0.0005924800001084803, 0.0010956800347194076, 0.0018729280028492213, 0.0020257280115038158, 0.0015897280301433057]
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.719
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.084
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.454
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.811
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.205
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.851
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.953
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.854
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.071
2023-05-15 20:34:54,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.057
2023-05-15 20:34:54,322 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:54,322 - optimal_runtime.py[116] - INFO: avg ratio: 1.096916634755133
2023-05-15 20:34:54,322 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011754189180278846
2023-05-15 20:34:54,322 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016789  0.00118358 0.00053246 0.00047869 0.00075342 0.00089388
 0.00209008 0.00727333 0.00787535 0.00271843]
2023-05-15 20:34:54,324 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:54,558 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:54,558 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 20:34:54,574 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 20:34:54,583 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 20:34:54,593 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 20:34:54,593 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -51167567872.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4],
  'esti_latency': -0.0018401543796888221,
  'esti_test_accuracy': 0.005599999999999999,
  'is_relaxed': False,
  'model_size': 14657537.0,
  'update_swap_mem_cost': 8063138.0,
  'update_swap_time_cost': 0.03458595275878906}
2023-05-15 20:34:54,623 - gen_series_legodnn_models.py[28] - INFO: target model size: 14.591MB
2023-05-15 20:34:54,623 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 15299722.06060606B (14.591MB), try to adapt blocks
2023-05-15 20:34:54,624 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:54,673 - optimal_runtime.py[77] - INFO: infer time of current model: 0.03842140960693359
2023-05-15 20:34:54,673 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010630720108747483, 0.0010244799926877022, 0.0005700160004198551, 0.0006657279953360557, 0.0005026560090482235, 0.0007845439910888672, 0.0009293120205402374, 0.0018445440232753754, 0.002071936085820198, 0.0021561599634587767]
2023-05-15 20:34:54,673 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.759
2023-05-15 20:34:54,673 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.232
2023-05-15 20:34:54,673 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.852
2023-05-15 20:34:54,673 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.749
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.328
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.398
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.124
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.868
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.047
2023-05-15 20:34:54,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:34:54,674 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:54,674 - optimal_runtime.py[116] - INFO: avg ratio: 1.1920752756634054
2023-05-15 20:34:54,674 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010815898880824737
2023-05-15 20:34:54,675 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0015912  0.00104127 0.00041826 0.00049553 0.00068322 0.00118365
 0.00177272 0.0071631  0.008055   0.00280753]
2023-05-15 20:34:54,676 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:55,075 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:55,076 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 20:34:55,087 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 20:34:55,088 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -49201225728.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4],
  'esti_latency': -0.0028105623055680318,
  'esti_test_accuracy': 0.0057333333333333325,
  'is_relaxed': False,
  'model_size': 14777857.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.011227607727050781}
2023-05-15 20:34:55,122 - gen_series_legodnn_models.py[28] - INFO: target model size: 15.090MB
2023-05-15 20:34:55,122 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 15823187.84848485B (15.090MB), try to adapt blocks
2023-05-15 20:34:55,123 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:55,183 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049414783477783206
2023-05-15 20:34:55,184 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.000896384016610682, 0.000629311991855502, 0.000933983985334635, 0.001315679995343089, 0.0007421760018914939, 0.0011934400009922684, 0.000750528016127646, 0.0017424640543758868, 0.002172032028436661, 0.0021770559935830533]
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.900
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.006
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.076
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.885
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.900
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.919
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.392
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.918
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.999
2023-05-15 20:34:55,184 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.013
2023-05-15 20:34:55,185 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 2, 3, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:55,185 - optimal_runtime.py[116] - INFO: avg ratio: 1.0001740510452453
2023-05-15 20:34:55,185 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012891121926660946
2023-05-15 20:34:55,186 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0013417  0.00063963 0.00071999 0.00097931 0.00100877 0.00180055
 0.00143168 0.00676668 0.00844414 0.00283474]
2023-05-15 20:34:55,188 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:55,443 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:55,444 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 20:34:55,445 - gen_series_legodnn_models.py[28] - INFO: target model size: 15.589MB
2023-05-15 20:34:55,445 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 16346653.636363637B (15.589MB), try to adapt blocks
2023-05-15 20:34:55,449 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:55,521 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05423404693603515
2023-05-15 20:34:55,521 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011961919963359834, 0.0010255679860711098, 0.0008110080063343048, 0.0015179200023412705, 0.0006698239967226981, 0.0009941760003566742, 0.0010811200067400934, 0.0018834879621863366, 0.002044992037117481, 0.002141247991472483]
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.675
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.231
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.239
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.767
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.997
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.103
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.966
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.850
2023-05-15 20:34:55,521 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.061
2023-05-15 20:34:55,522 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.030
2023-05-15 20:34:55,522 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:55,522 - optimal_runtime.py[116] - INFO: avg ratio: 1.0010909679648097
2023-05-15 20:34:55,522 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012879314720138294
2023-05-15 20:34:55,523 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00179045 0.00104238 0.00062519 0.00112984 0.00091043 0.00149992
 0.0020623  0.00731434 0.00795025 0.00278812]
2023-05-15 20:34:55,524 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:55,855 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:55,856 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 20:34:55,868 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 20:34:55,869 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -42843267072.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0],
  'esti_latency': -0.00022149705892374194,
  'esti_test_accuracy': 0.005866666666666666,
  'is_relaxed': False,
  'model_size': 16330945.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.012535333633422852}
2023-05-15 20:34:55,899 - gen_series_legodnn_models.py[28] - INFO: target model size: 16.089MB
2023-05-15 20:34:55,899 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 16870119.424242426B (16.089MB), try to adapt blocks
2023-05-15 20:34:55,901 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:55,960 - optimal_runtime.py[77] - INFO: infer time of current model: 0.048947776794433594
2023-05-15 20:34:55,961 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012483199909329413, 0.001187871977686882, 0.0007960000038146973, 0.0007966080084443092, 0.0006256640031933785, 0.0009144640043377875, 0.0009963200129568576, 0.0019048959761857984, 0.0020934080332517626, 0.0023326400592923163]
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.646
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.063
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.262
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.462
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.067
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.199
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.048
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.840
2023-05-15 20:34:55,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.036
2023-05-15 20:34:55,962 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.232
2023-05-15 20:34:55,962 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:55,962 - optimal_runtime.py[116] - INFO: avg ratio: 1.1296129916932078
2023-05-15 20:34:55,962 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011413967203564513
2023-05-15 20:34:55,963 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00186848 0.00120734 0.00061362 0.00059294 0.00085041 0.00137966
 0.00190054 0.00739747 0.00813847 0.00233264]
2023-05-15 20:34:55,964 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:56,215 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:56,215 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 20:34:56,216 - gen_series_legodnn_models.py[28] - INFO: target model size: 16.588MB
2023-05-15 20:34:56,216 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 17393585.21212121B (16.588MB), try to adapt blocks
2023-05-15 20:34:56,217 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:56,283 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05025996780395508
2023-05-15 20:34:56,283 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010850880052894352, 0.0011440960075706243, 0.0008235840089619159, 0.0004972799997776747, 0.0006589439921081065, 0.0008496639877557754, 0.005960351817309857, 0.001978304013609886, 0.0021375680342316625, 0.0022709119953215123]
2023-05-15 20:34:56,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.744
2023-05-15 20:34:56,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.104
2023-05-15 20:34:56,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.220
2023-05-15 20:34:56,283 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.342
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.013
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.291
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.006 = 0.175
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.809
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.015
2023-05-15 20:34:56,284 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.265
2023-05-15 20:34:56,284 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 7, 8, 9]),)
2023-05-15 20:34:56,284 - optimal_runtime.py[116] - INFO: avg ratio: 1.0574638159703373
2023-05-15 20:34:56,284 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.0121927251270301
2023-05-15 20:34:56,285 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00162415 0.00116285 0.00063488 0.00037014 0.00089564 0.00128189
 0.01136973 0.00768255 0.00831015 0.00227091]
2023-05-15 20:34:56,287 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:56,547 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:56,548 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 20:34:56,548 - gen_series_legodnn_models.py[28] - INFO: target model size: 17.087MB
2023-05-15 20:34:56,548 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 17917051.0B (17.087MB), try to adapt blocks
2023-05-15 20:34:56,550 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:56,615 - optimal_runtime.py[77] - INFO: infer time of current model: 0.048678718566894534
2023-05-15 20:34:56,615 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0027380160614848136, 0.0011452800221741198, 0.0008689280152320862, 0.0004039360033348203, 0.0006424320088699461, 0.0007089919853024184, 0.0011609599757939576, 0.0015934079717844726, 0.002043936032801866, 0.002220895987004042]
2023-05-15 20:34:56,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.295
2023-05-15 20:34:56,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.102
2023-05-15 20:34:56,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.156
2023-05-15 20:34:56,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.883
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.039
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.547
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.900
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.004
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.061
2023-05-15 20:34:56,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.294
2023-05-15 20:34:56,616 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:56,616 - optimal_runtime.py[116] - INFO: avg ratio: 1.1379147712735846
2023-05-15 20:34:56,617 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011330695378421064
2023-05-15 20:34:56,617 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00409825 0.00116405 0.00066984 0.00030066 0.0008732  0.00106966
 0.0022146  0.00618784 0.00794614 0.0022209 ]
2023-05-15 20:34:56,619 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:56,909 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:56,911 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 20:34:56,922 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 20:34:56,923 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -38986211328.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0],
  'esti_latency': -0.0018688916145503977,
  'esti_test_accuracy': 0.005866666666666666,
  'is_relaxed': False,
  'model_size': 16566849.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.011882781982421875}
2023-05-15 20:34:57,011 - gen_series_legodnn_models.py[28] - INFO: target model size: 17.586MB
2023-05-15 20:34:57,011 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 18440516.78787879B (17.586MB), try to adapt blocks
2023-05-15 20:34:57,014 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:57,153 - optimal_runtime.py[77] - INFO: infer time of current model: 0.10619805145263672
2023-05-15 20:34:57,154 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001070688009262085, 0.0013238719776272774, 0.0007483519800007344, 0.0005244800001382827, 0.00040166400000452994, 0.000596319990232587, 0.0012515519941225647, 0.001804928006604314, 0.0022007040139287713, 0.0023877439768984913]
2023-05-15 20:34:57,154 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.754
2023-05-15 20:34:57,154 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.969
2023-05-15 20:34:57,154 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.342
2023-05-15 20:34:57,154 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.220
2023-05-15 20:34:57,154 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.662
2023-05-15 20:34:57,155 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.839
2023-05-15 20:34:57,155 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.834
2023-05-15 20:34:57,155 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.887
2023-05-15 20:34:57,155 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.986
2023-05-15 20:34:57,155 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.203
2023-05-15 20:34:57,156 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:57,156 - optimal_runtime.py[116] - INFO: avg ratio: 1.1262835466562373
2023-05-15 20:34:57,156 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011447708419593881
2023-05-15 20:34:57,157 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016026  0.00132387 0.00057689 0.00039039 0.00054595 0.00089967
 0.00238741 0.00700926 0.0085556  0.00238774]
2023-05-15 20:34:57,159 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:57,470 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:57,471 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.0]
2023-05-15 20:34:57,482 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 20:34:57,501 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 20:34:57,501 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -35139182592.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.0],
  'esti_latency': -0.0013087900106169073,
  'esti_test_accuracy': 0.005899999999999999,
  'is_relaxed': False,
  'model_size': 18212545.0,
  'update_swap_mem_cost': 4253414.0,
  'update_swap_time_cost': 0.030106067657470703}
2023-05-15 20:34:57,531 - gen_series_legodnn_models.py[28] - INFO: target model size: 18.085MB
2023-05-15 20:34:57,532 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 18963982.575757578B (18.085MB), try to adapt blocks
2023-05-15 20:34:57,535 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:57,619 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05936707305908203
2023-05-15 20:34:57,620 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012805760055780411, 0.001297247998416424, 0.0009906559959053994, 0.0010744320079684258, 0.0007990719974040985, 0.0011911039799451827, 0.0017871360182762145, 0.0021545279994606976, 0.0023148800209164618, 0.0027962560132145883]
2023-05-15 20:34:57,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.630
2023-05-15 20:34:57,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.973
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.014
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.084
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.836
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.921
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.880
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.743
2023-05-15 20:34:57,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.937
2023-05-15 20:34:57,622 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.027
2023-05-15 20:34:57,622 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 8, 9]),)
2023-05-15 20:34:57,623 - optimal_runtime.py[116] - INFO: avg ratio: 0.9411993207642092
2023-05-15 20:34:57,623 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01369886840699998
2023-05-15 20:34:57,624 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00191676 0.00131851 0.00076367 0.00079974 0.00108611 0.00179703
 0.00226289 0.00836689 0.00899948 0.00279626]
2023-05-15 20:34:57,627 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:57,955 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:57,956 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 20:34:57,970 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 20:34:57,977 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 20:34:58,004 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.4) from file
2023-05-15 20:34:58,012 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 20:34:58,012 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -33536270336.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8],
  'esti_latency': 0.00039621518887646145,
  'esti_test_accuracy': 0.0061,
  'is_relaxed': False,
  'model_size': 18963073.0,
  'update_swap_mem_cost': 25557918.0,
  'update_swap_time_cost': 0.05624222755432129}
2023-05-15 20:34:58,044 - gen_series_legodnn_models.py[28] - INFO: target model size: 18.585MB
2023-05-15 20:34:58,044 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 19487448.363636363B (18.585MB), try to adapt blocks
2023-05-15 20:34:58,045 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:58,105 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049904895782470704
2023-05-15 20:34:58,106 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014280320294201374, 0.0011090880036354065, 0.0004270400032401085, 0.0006391360103152691, 0.0004895360074006021, 0.0006376959877088666, 0.0008358720047399401, 0.0035942400209605695, 0.002120064027607441, 0.0017593279890716076]
2023-05-15 20:34:58,106 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.565
2023-05-15 20:34:58,106 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.138
2023-05-15 20:34:58,106 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.472
2023-05-15 20:34:58,106 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.822
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.364
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.720
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.249
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.030
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:34:58,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.955
2023-05-15 20:34:58,107 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:58,108 - optimal_runtime.py[116] - INFO: avg ratio: 1.287722136023792
2023-05-15 20:34:58,108 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010012537083286147
2023-05-15 20:34:58,108 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00213747 0.00112727 0.00031335 0.00047573 0.00066538 0.0009621
 0.00159448 0.00603251 0.0082421  0.00300845]
2023-05-15 20:34:58,110 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:58,430 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:58,432 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 20:34:58,443 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 20:34:58,444 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -31569928192.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8],
  'esti_latency': -0.0015268192293181396,
  'esti_test_accuracy': 0.006233333333333334,
  'is_relaxed': False,
  'model_size': 19083393.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.011757135391235352}
2023-05-15 20:34:58,482 - gen_series_legodnn_models.py[28] - INFO: target model size: 19.084MB
2023-05-15 20:34:58,482 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 20010914.151515152B (19.084MB), try to adapt blocks
2023-05-15 20:34:58,484 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:58,549 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0501926383972168
2023-05-15 20:34:58,550 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001122591994702816, 0.0010696960017085074, 0.0008233920037746429, 0.0008036159873008728, 0.0005692479982972145, 0.001168191991746426, 0.0012360640168190002, 0.0037863999307155612, 0.0023117120489478107, 0.0017916480228304863]
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.719
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.180
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.220
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.449
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.173
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.939
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.845
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.978
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.938
2023-05-15 20:34:58,550 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.938
2023-05-15 20:34:58,551 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:58,551 - optimal_runtime.py[116] - INFO: avg ratio: 1.0263660772858079
2023-05-15 20:34:58,551 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012562150995873479
2023-05-15 20:34:58,552 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00168029 0.00108723 0.00063473 0.00059816 0.00077373 0.00176246
 0.00235787 0.00635502 0.00898716 0.00306372]
2023-05-15 20:34:58,554 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:58,920 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:58,921 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 20:34:58,921 - gen_series_legodnn_models.py[28] - INFO: target model size: 19.583MB
2023-05-15 20:34:58,921 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 20534379.93939394B (19.583MB), try to adapt blocks
2023-05-15 20:34:58,923 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:58,987 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0487108154296875
2023-05-15 20:34:58,988 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014304319825023412, 0.0009582080040127039, 0.000822112012654543, 0.0008269439991563559, 0.0005227200128138065, 0.0008255359902977944, 0.0009616319946944713, 0.0033906239494681362, 0.002085183963179588, 0.0016957120150327683]
2023-05-15 20:34:58,988 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.564
2023-05-15 20:34:58,989 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.318
2023-05-15 20:34:58,989 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.222
2023-05-15 20:34:58,989 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.408
2023-05-15 20:34:58,990 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.277
2023-05-15 20:34:58,990 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.328
2023-05-15 20:34:58,991 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.086
2023-05-15 20:34:58,991 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.092
2023-05-15 20:34:58,991 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.040
2023-05-15 20:34:58,992 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.991
2023-05-15 20:34:58,993 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:58,993 - optimal_runtime.py[116] - INFO: avg ratio: 1.16930848820197
2023-05-15 20:34:58,993 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011026487680537257
2023-05-15 20:34:58,993 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00214106 0.00097391 0.00063375 0.00061552 0.00071049 0.00124549
 0.00183437 0.00569076 0.0081065  0.00289967]
2023-05-15 20:34:58,995 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:59,249 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:59,249 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 20:34:59,272 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 20:34:59,272 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -25979035648.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4],
  'esti_latency': 0.00022527263316274304,
  'esti_test_accuracy': 0.0068000000000000005,
  'is_relaxed': False,
  'model_size': 20449089.0,
  'update_swap_mem_cost': 7375804.0,
  'update_swap_time_cost': 0.022601604461669922}
2023-05-15 20:34:59,304 - gen_series_legodnn_models.py[28] - INFO: target model size: 20.082MB
2023-05-15 20:34:59,305 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 21057845.727272727B (20.082MB), try to adapt blocks
2023-05-15 20:34:59,306 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:59,358 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04130620956420898
2023-05-15 20:34:59,358 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010583360195159913, 0.001035871997475624, 0.0007448639869689941, 0.0007323840036988258, 0.0005879679918289185, 0.0008837120048701764, 0.0009590719863772393, 0.003449919939041138, 0.0021083520129323006, 0.0022219839468598365]
2023-05-15 20:34:59,358 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.762
2023-05-15 20:34:59,358 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.219
2023-05-15 20:34:59,358 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.349
2023-05-15 20:34:59,358 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.590
2023-05-15 20:34:59,358 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.136
2023-05-15 20:34:59,359 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.241
2023-05-15 20:34:59,359 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.089
2023-05-15 20:34:59,359 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.073
2023-05-15 20:34:59,359 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.029
2023-05-15 20:34:59,359 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.993
2023-05-15 20:34:59,359 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:34:59,359 - optimal_runtime.py[116] - INFO: avg ratio: 1.1410133208874025
2023-05-15 20:34:59,359 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011299925604618783
2023-05-15 20:34:59,360 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158411 0.00105285 0.0005742  0.00054514 0.00079917 0.00133326
 0.00182949 0.00579028 0.00819657 0.00289324]
2023-05-15 20:34:59,362 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:34:59,741 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:34:59,742 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 20:34:59,754 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 20:34:59,760 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.4) from file
2023-05-15 20:34:59,761 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -21116002304.0,
  'blocks_sparsity': [0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4],
  'esti_latency': 0.0011722436734043634,
  'esti_test_accuracy': 0.0068000000000000005,
  'is_relaxed': False,
  'model_size': 20613953.0,
  'update_swap_mem_cost': 412000.0,
  'update_swap_time_cost': 0.01837301254272461}
2023-05-15 20:34:59,792 - gen_series_legodnn_models.py[28] - INFO: target model size: 20.582MB
2023-05-15 20:34:59,792 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 21581311.515151516B (20.582MB), try to adapt blocks
2023-05-15 20:34:59,794 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:34:59,855 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04887535858154297
2023-05-15 20:34:59,856 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0017598720267415046, 0.001471136003732681, 0.0008567359969019891, 0.0007622720003128052, 0.0005028480030596257, 0.0007782399952411651, 0.0008728000223636628, 0.0033960319608449937, 0.002059648029506207, 0.0021808320283889775]
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.613
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.133
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.173
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.528
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.328
2023-05-15 20:34:59,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.409
2023-05-15 20:34:59,857 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.197
2023-05-15 20:34:59,857 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.090
2023-05-15 20:34:59,857 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.053
2023-05-15 20:34:59,857 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.012
2023-05-15 20:34:59,857 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:34:59,857 - optimal_runtime.py[116] - INFO: avg ratio: 1.1406919207444528
2023-05-15 20:34:59,857 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01130310945964449
2023-05-15 20:34:59,858 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00196986 0.00113295 0.00066044 0.00056739 0.00068348 0.00117414
 0.00166492 0.00569984 0.00800722 0.00283966]
2023-05-15 20:34:59,860 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:00,113 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:00,114 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 20:35:00,124 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 20:35:00,132 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 20:35:00,132 - gen_series_legodnn_models.py[28] - INFO: target model size: 21.081MB
2023-05-15 20:35:00,132 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 22104777.303030305B (21.081MB), try to adapt blocks
2023-05-15 20:35:00,133 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:00,194 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047342273712158205
2023-05-15 20:35:00,194 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011431999951601029, 0.0011185280010104178, 0.0008250560089945793, 0.0008753600046038628, 0.0005509759970009328, 0.0007930560000240803, 0.0009084800072014333, 0.0033937919586896894, 0.0020336960218846796, 0.002104479994624853]
2023-05-15 20:35:00,194 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.706
2023-05-15 20:35:00,194 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.129
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.330
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.212
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.383
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.150
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.091
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.066
2023-05-15 20:35:00,195 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.048
2023-05-15 20:35:00,195 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:35:00,195 - optimal_runtime.py[116] - INFO: avg ratio: 1.1305494194062224
2023-05-15 20:35:00,195 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011404513078851883
2023-05-15 20:35:00,196 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00171114 0.00113686 0.00063602 0.00065156 0.00074889 0.00119649
 0.00173298 0.00569608 0.00790633 0.00274024]
2023-05-15 20:35:00,197 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:00,586 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:00,587 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 20:35:00,607 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 20:35:00,607 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -19621076992.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0],
  'esti_latency': 0.0016303090541881452,
  'esti_test_accuracy': 0.006933333333333333,
  'is_relaxed': False,
  'model_size': 22002177.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.019475221633911133}
2023-05-15 20:35:00,637 - gen_series_legodnn_models.py[28] - INFO: target model size: 21.580MB
2023-05-15 20:35:00,638 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 22628243.090909094B (21.580MB), try to adapt blocks
2023-05-15 20:35:00,639 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:00,709 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05853702545166015
2023-05-15 20:35:00,709 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0018926080083474517, 0.0006455999892204998, 0.0006453760080039502, 0.0008162880023010076, 0.000603551996871829, 0.000927103997208178, 0.0011881920220330358, 0.0033872000463306905, 0.0022440640516579154, 0.002292319998145103]
2023-05-15 20:35:00,709 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.426
2023-05-15 20:35:00,709 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.956
2023-05-15 20:35:00,709 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.557
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.427
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.106
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.879
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.093
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.966
2023-05-15 20:35:00,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.253
2023-05-15 20:35:00,710 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 3, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:00,710 - optimal_runtime.py[116] - INFO: avg ratio: 1.1830483134362257
2023-05-15 20:35:00,710 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010898426964877885
2023-05-15 20:35:00,711 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00283285 0.00065618 0.00049751 0.00060759 0.00082035 0.00139873
 0.00226655 0.00568501 0.00872417 0.00229232]
2023-05-15 20:35:00,712 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:00,948 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:00,949 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 20:35:00,950 - gen_series_legodnn_models.py[28] - INFO: target model size: 22.079MB
2023-05-15 20:35:00,950 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 23151708.87878788B (22.079MB), try to adapt blocks
2023-05-15 20:35:00,953 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:01,017 - optimal_runtime.py[77] - INFO: infer time of current model: 0.043931102752685545
2023-05-15 20:35:01,017 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009881919883191585, 0.0009536320120096208, 0.0006679360195994377, 0.000607455987483263, 0.0004879040010273456, 0.0007513919882476329, 0.0008702400028705597, 0.003362944006919861, 0.002071072045713663, 0.0021860799454152583]
2023-05-15 20:35:01,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.817
2023-05-15 20:35:01,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.324
2023-05-15 20:35:01,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.504
2023-05-15 20:35:01,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.917
2023-05-15 20:35:01,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.369
2023-05-15 20:35:01,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.459
2023-05-15 20:35:01,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.200
2023-05-15 20:35:01,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.101
2023-05-15 20:35:01,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.047
2023-05-15 20:35:01,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.314
2023-05-15 20:35:01,018 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:01,018 - optimal_runtime.py[116] - INFO: avg ratio: 1.2898284297527955
2023-05-15 20:35:01,018 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.00999618657992968
2023-05-15 20:35:01,019 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00147912 0.00096926 0.0005149  0.00045215 0.00066316 0.00113363
 0.00166004 0.0056443  0.00805164 0.00218608]
2023-05-15 20:35:01,020 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:01,372 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:01,373 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 20:35:01,374 - gen_series_legodnn_models.py[28] - INFO: target model size: 22.578MB
2023-05-15 20:35:01,374 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 23675174.666666668B (22.578MB), try to adapt blocks
2023-05-15 20:35:01,376 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:01,444 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05493395233154297
2023-05-15 20:35:01,445 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009469119710847736, 0.000807039987295866, 0.0006323199868202209, 0.0009440639773383736, 0.0005514240022748708, 0.0009185600094497203, 0.0009006079994142056, 0.003565184086561203, 0.0022274239761754873, 0.002408448036760092]
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.852
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.564
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.589
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.234
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.211
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.194
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.160
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.039
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.974
2023-05-15 20:35:01,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.193
2023-05-15 20:35:01,445 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:01,446 - optimal_runtime.py[116] - INFO: avg ratio: 1.1715657256275975
2023-05-15 20:35:01,446 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011005243118562385
2023-05-15 20:35:01,446 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00141733 0.00082027 0.00048744 0.0007027  0.0007495  0.00138584
 0.00171796 0.00598374 0.00865948 0.00240845]
2023-05-15 20:35:01,447 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:01,706 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:01,707 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 20:35:01,708 - gen_series_legodnn_models.py[28] - INFO: target model size: 23.078MB
2023-05-15 20:35:01,708 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 24198640.454545457B (23.078MB), try to adapt blocks
2023-05-15 20:35:01,710 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:01,781 - optimal_runtime.py[77] - INFO: infer time of current model: 0.055106208801269534
2023-05-15 20:35:01,782 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.00225087999086827, 0.0006496320012956858, 0.0006421760022640228, 0.0005822400078177453, 0.000365792004391551, 0.0005912639955058694, 0.0008639040160924196, 0.0033994240537285805, 0.0024433600120246407, 0.002542399976402521]
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.359
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.944
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.564
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.000
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.825
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.855
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.209
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.089
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.888
2023-05-15 20:35:01,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.130
2023-05-15 20:35:01,783 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:01,783 - optimal_runtime.py[116] - INFO: avg ratio: 1.365761234007909
2023-05-15 20:35:01,783 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009440424372033393
2023-05-15 20:35:01,784 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00336911 0.00066028 0.00049504 0.00043338 0.00049719 0.00089204
 0.00164795 0.00570553 0.00949897 0.0025424 ]
2023-05-15 20:35:01,785 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:02,087 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:02,088 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 20:35:02,098 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 20:35:02,099 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -11916992512.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0],
  'esti_latency': -0.0015328120474517905,
  'esti_test_accuracy': 0.006966666666666667,
  'is_relaxed': False,
  'model_size': 23883777.0,
  'update_swap_mem_cost': 3849090.0,
  'update_swap_time_cost': 0.010211944580078125}
2023-05-15 20:35:02,143 - gen_series_legodnn_models.py[28] - INFO: target model size: 23.577MB
2023-05-15 20:35:02,143 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 24722106.242424242B (23.577MB), try to adapt blocks
2023-05-15 20:35:02,146 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:02,277 - optimal_runtime.py[77] - INFO: infer time of current model: 0.11517235565185546
2023-05-15 20:35:02,278 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009710080064833164, 0.0009575999937951566, 0.0006967040002346039, 0.0007188800051808357, 0.006286784082651139, 0.000818816002458334, 0.001483295999467373, 0.007617055788636208, 0.0020211839843541383, 0.0022684159763157368]
2023-05-15 20:35:02,278 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.831
2023-05-15 20:35:02,278 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.319
2023-05-15 20:35:02,278 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.442
2023-05-15 20:35:02,278 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.620
2023-05-15 20:35:02,278 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.006 = 0.106
2023-05-15 20:35:02,279 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.339
2023-05-15 20:35:02,279 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.061
2023-05-15 20:35:02,279 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.008 = 0.486
2023-05-15 20:35:02,279 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.073
2023-05-15 20:35:02,279 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.266
2023-05-15 20:35:02,280 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 8, 9]),)
2023-05-15 20:35:02,280 - optimal_runtime.py[116] - INFO: avg ratio: 1.1901578142951919
2023-05-15 20:35:02,280 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010833324358368458
2023-05-15 20:35:02,281 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0014534  0.0009733  0.00053707 0.00053509 0.00854506 0.00123535
 0.00187816 0.01278433 0.00785769 0.00226842]
2023-05-15 20:35:02,283 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:02,566 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:02,567 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 20:35:02,573 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 20:35:02,573 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -9020301312.0,
  'blocks_sparsity': [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0],
  'esti_latency': -0.003067338278650699,
  'esti_test_accuracy': 0.006966666666666667,
  'is_relaxed': False,
  'model_size': 23928257.0,
  'update_swap_mem_cost': 123196.0,
  'update_swap_time_cost': 0.005864381790161133}
2023-05-15 20:35:02,611 - gen_series_legodnn_models.py[28] - INFO: target model size: 24.076MB
2023-05-15 20:35:02,611 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 25245572.03030303B (24.076MB), try to adapt blocks
2023-05-15 20:35:02,613 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:02,772 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1387058868408203
2023-05-15 20:35:02,773 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001201632011681795, 0.0009652480073273182, 0.0006910399794578552, 0.0006500800028443336, 0.0005138240009546279, 0.0007817280068993568, 0.001482880037277937, 0.003458175964653492, 0.002119807936251163, 0.0025623679459095003]
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.898
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.308
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.454
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.791
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.299
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.403
2023-05-15 20:35:02,773 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.061
2023-05-15 20:35:02,774 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.071
2023-05-15 20:35:02,774 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:35:02,774 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.121
2023-05-15 20:35:02,775 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:02,775 - optimal_runtime.py[116] - INFO: avg ratio: 1.2175338764151524
2023-05-15 20:35:02,775 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010589738724863464
2023-05-15 20:35:02,776 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00134501 0.00098107 0.00053271 0.00048388 0.0006984  0.0011794
 0.00187763 0.00580414 0.00824111 0.00256237]
2023-05-15 20:35:02,778 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:03,037 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:03,039 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 20:35:03,046 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 20:35:03,046 - gen_series_legodnn_models.py[28] - INFO: target model size: 24.575MB
2023-05-15 20:35:03,046 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 25769037.81818182B (24.575MB), try to adapt blocks
2023-05-15 20:35:03,049 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:03,170 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1013986587524414
2023-05-15 20:35:03,170 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010000320076942444, 0.0010142079889774323, 0.0007078079916536808, 0.0006610560081899168, 0.0005094080008566379, 0.000546303995884955, 0.0013999679703265426, 0.003642336089164018, 0.0027107520122081038, 0.002539839967153966]
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.807
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.245
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.419
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.762
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.311
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.007
2023-05-15 20:35:03,170 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.124
2023-05-15 20:35:03,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.017
2023-05-15 20:35:03,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.800
2023-05-15 20:35:03,171 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.131
2023-05-15 20:35:03,171 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 9]),)
2023-05-15 20:35:03,171 - optimal_runtime.py[116] - INFO: avg ratio: 1.2077718656998337
2023-05-15 20:35:03,171 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010675331994453861
2023-05-15 20:35:03,172 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149684 0.00103083 0.00054563 0.00049205 0.00069239 0.00082421
 0.00177265 0.00611323 0.0105385  0.00253984]
2023-05-15 20:35:03,174 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:03,439 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:03,441 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 20:35:03,452 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 20:35:03,452 - gen_series_legodnn_models.py[28] - INFO: target model size: 25.074MB
2023-05-15 20:35:03,452 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 26292503.606060605B (25.074MB), try to adapt blocks
2023-05-15 20:35:03,454 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:03,511 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04377046585083008
2023-05-15 20:35:03,511 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012818560115993023, 0.0010482559874653817, 0.0007685439884662628, 0.0007543359845876694, 0.000592095986008644, 0.0008852480128407477, 0.0015212160013616085, 0.003482944026589393, 0.002131519943475723, 0.002326303981244564]
2023-05-15 20:35:03,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.842
2023-05-15 20:35:03,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.204
2023-05-15 20:35:03,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.307
2023-05-15 20:35:03,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.544
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.128
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.239
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.034
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.063
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.018
2023-05-15 20:35:03,512 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.235
2023-05-15 20:35:03,512 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:03,512 - optimal_runtime.py[116] - INFO: avg ratio: 1.1535054652717611
2023-05-15 20:35:03,513 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011177550543177567
2023-05-15 20:35:03,513 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0014348  0.00106544 0.00059245 0.00056148 0.00080478 0.00133558
 0.00192618 0.00584571 0.00828664 0.0023263 ]
2023-05-15 20:35:03,515 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:03,891 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:03,892 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 20:35:03,903 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 20:35:03,903 - gen_series_legodnn_models.py[28] - INFO: target model size: 25.574MB
2023-05-15 20:35:03,903 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 26815969.393939395B (25.574MB), try to adapt blocks
2023-05-15 20:35:03,906 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:03,971 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05282182312011719
2023-05-15 20:35:03,972 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010282560000196101, 0.001013344008475542, 0.0005022719986736775, 0.0008157439911738038, 0.0004986240044236184, 0.0008070399910211563, 0.0015821119733154775, 0.0034412800297141076, 0.00204928001947701, 0.002202015985734761]
2023-05-15 20:35:03,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.785
2023-05-15 20:35:03,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.246
2023-05-15 20:35:03,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.000
2023-05-15 20:35:03,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.428
2023-05-15 20:35:03,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.339
2023-05-15 20:35:03,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.359
2023-05-15 20:35:03,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.994
2023-05-15 20:35:03,974 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.076
2023-05-15 20:35:03,974 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.058
2023-05-15 20:35:03,974 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.305
2023-05-15 20:35:03,974 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:03,975 - optimal_runtime.py[116] - INFO: avg ratio: 1.2256260076576573
2023-05-15 20:35:03,975 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010519820531997107
2023-05-15 20:35:03,976 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00153909 0.00102995 0.00038719 0.00060719 0.00067774 0.00121759
 0.00200328 0.00577578 0.00796692 0.00220202]
2023-05-15 20:35:03,978 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:04,264 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:04,265 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 20:35:04,278 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 20:35:04,295 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.4) from file
2023-05-15 20:35:04,303 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 20:35:04,304 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -609247232.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8],
  'esti_latency': 0.0030594195322383964,
  'esti_test_accuracy': 0.0071,
  'is_relaxed': False,
  'model_size': 26643841.0,
  'update_swap_mem_cost': 27992704.0,
  'update_swap_time_cost': 0.038098812103271484}
2023-05-15 20:35:04,339 - gen_series_legodnn_models.py[28] - INFO: target model size: 26.073MB
2023-05-15 20:35:04,339 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 27339435.181818184B (26.073MB), try to adapt blocks
2023-05-15 20:35:04,341 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:04,397 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04611199951171875
2023-05-15 20:35:04,398 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009671679884195329, 0.0009682240039110184, 0.0006872960031032562, 0.0009271040037274361, 0.0008632960170507431, 0.0009929600059986115, 0.0011055999919772149, 0.003615840047597885, 0.004165312066674232, 0.0016354239732027053]
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.834
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.304
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.462
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.256
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.773
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.104
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.945
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.024
2023-05-15 20:35:04,398 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.398
2023-05-15 20:35:04,399 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.027
2023-05-15 20:35:04,399 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 5, 6, 7, 9]),)
2023-05-15 20:35:04,399 - optimal_runtime.py[116] - INFO: avg ratio: 1.1100927133471894
2023-05-15 20:35:04,399 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011614674598691987
2023-05-15 20:35:04,400 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00144765 0.00098409 0.00052982 0.00069008 0.0011734  0.00149809
 0.002109   0.00606876 0.00603153 0.00279657]
2023-05-15 20:35:04,401 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:04,777 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:04,777 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 20:35:04,778 - gen_series_legodnn_models.py[28] - INFO: target model size: 26.572MB
2023-05-15 20:35:04,778 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 27862900.969696973B (26.572MB), try to adapt blocks
2023-05-15 20:35:04,779 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:04,864 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0696759033203125
2023-05-15 20:35:04,865 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010664640143513678, 0.0010033279955387114, 0.0007339519932866096, 0.0006454080073162914, 0.00035439999587833876, 0.0005925440001301466, 0.0009919039979577064, 0.0056597119271755226, 0.00431439995765686, 0.0016360000488348306]
2023-05-15 20:35:04,865 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.757
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.258
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.369
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.804
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.884
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.851
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.053
2023-05-15 20:35:04,866 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.006 = 0.654
2023-05-15 20:35:04,867 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.350
2023-05-15 20:35:04,867 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.027
2023-05-15 20:35:04,867 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 6, 8, 9]),)
2023-05-15 20:35:04,868 - optimal_runtime.py[116] - INFO: avg ratio: 1.2113370480205634
2023-05-15 20:35:04,868 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010643912576582724
2023-05-15 20:35:04,869 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00159628 0.00101977 0.00056579 0.0004804  0.0004817  0.00089398
 0.00189212 0.00949916 0.00624742 0.00279756]
2023-05-15 20:35:04,871 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:05,200 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:05,200 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 20:35:05,201 - gen_series_legodnn_models.py[28] - INFO: target model size: 27.071MB
2023-05-15 20:35:05,201 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 28386366.757575758B (27.071MB), try to adapt blocks
2023-05-15 20:35:05,203 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:05,261 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04262841415405273
2023-05-15 20:35:05,262 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010124800167977811, 0.0009777600057423114, 0.0006912639886140823, 0.0006355200037360191, 0.0005083520039916038, 0.0007723519951105118, 0.0008954240158200265, 0.00338607993721962, 0.004112127847969532, 0.0015888960175216198]
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.797
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.291
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.453
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.832
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.313
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.420
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.166
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.094
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.416
2023-05-15 20:35:05,262 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.057
2023-05-15 20:35:05,263 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:05,263 - optimal_runtime.py[116] - INFO: avg ratio: 1.2764108391724953
2023-05-15 20:35:05,263 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010101266178737177
2023-05-15 20:35:05,263 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151548 0.00099379 0.00053288 0.00047304 0.00069096 0.00116525
 0.00170808 0.00568313 0.00595452 0.00271701]
2023-05-15 20:35:05,265 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:05,667 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:05,668 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 20:35:05,685 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 20:35:05,686 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 4981645312.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4],
  'esti_latency': 0.003745134022051612,
  'esti_test_accuracy': 0.007666666666666667,
  'is_relaxed': False,
  'model_size': 28009537.0,
  'update_swap_mem_cost': 7375804.0,
  'update_swap_time_cost': 0.017699480056762695}
2023-05-15 20:35:05,721 - gen_series_legodnn_models.py[28] - INFO: target model size: 27.571MB
2023-05-15 20:35:05,721 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 28909832.545454547B (27.571MB), try to adapt blocks
2023-05-15 20:35:05,723 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:05,817 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07915744018554688
2023-05-15 20:35:05,818 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014665599931031465, 0.0006433599889278411, 0.0007092159986495973, 0.000560416008811444, 0.0006223359927535057, 0.0009759040027856826, 0.000952864008024335, 0.003364223979413509, 0.004129439905285835, 0.002156319983303547]
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.550
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.963
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.417
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.078
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.073
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.124
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.096
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.101
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.410
2023-05-15 20:35:05,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.023
2023-05-15 20:35:05,819 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:05,819 - optimal_runtime.py[116] - INFO: avg ratio: 1.1775926121546456
2023-05-15 20:35:05,819 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010948918587656242
2023-05-15 20:35:05,820 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00219514 0.0006539  0.00054672 0.00041714 0.00084589 0.00147235
 0.00181765 0.00564645 0.00597959 0.00280774]
2023-05-15 20:35:05,822 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:06,102 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:06,103 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 20:35:06,103 - gen_series_legodnn_models.py[28] - INFO: target model size: 28.070MB
2023-05-15 20:35:06,103 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 29433298.333333336B (28.070MB), try to adapt blocks
2023-05-15 20:35:06,105 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:06,178 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05686687850952148
2023-05-15 20:35:06,178 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012832960039377212, 0.0013259840086102485, 0.0010338240116834641, 0.001028223991394043, 0.0007432959899306297, 0.0011126719936728478, 0.001134560003876686, 0.0035595199614763258, 0.004203904002904892, 0.0023090240135788917]
2023-05-15 20:35:06,178 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.629
2023-05-15 20:35:06,178 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.952
2023-05-15 20:35:06,178 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.972
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.133
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.898
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.986
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.921
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.040
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.385
2023-05-15 20:35:06,179 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.956
2023-05-15 20:35:06,179 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:06,180 - optimal_runtime.py[116] - INFO: avg ratio: 0.9820972056830013
2023-05-15 20:35:06,180 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.013128400697301599
2023-05-15 20:35:06,180 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00192083 0.00134772 0.00079695 0.00076534 0.0010103  0.0016787
 0.00216424 0.00597423 0.00608742 0.00300658]
2023-05-15 20:35:06,182 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:06,538 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:06,539 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 20:35:06,539 - gen_series_legodnn_models.py[28] - INFO: target model size: 28.569MB
2023-05-15 20:35:06,539 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 29956764.12121212B (28.569MB), try to adapt blocks
2023-05-15 20:35:06,542 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:06,619 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05498883056640625
2023-05-15 20:35:06,619 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0015814079884439707, 0.0014427519775927064, 0.0009978879950940608, 0.0014512640107423066, 0.0008850879929959774, 0.0009512319900095463, 0.0007572479899972677, 0.0034505279660224917, 0.004208063930273056, 0.002265024002641439]
2023-05-15 20:35:06,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.510
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.875
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.007
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.802
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.754
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.153
2023-05-15 20:35:06,620 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.379
2023-05-15 20:35:06,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.073
2023-05-15 20:35:06,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.384
2023-05-15 20:35:06,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.974
2023-05-15 20:35:06,622 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 4, 5, 7, 9]),)
2023-05-15 20:35:06,622 - optimal_runtime.py[116] - INFO: avg ratio: 0.9484000521260768
2023-05-15 20:35:06,622 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.013594859691332735
2023-05-15 20:35:06,623 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00236704 0.0014664  0.00076925 0.00108023 0.00120302 0.00143513
 0.0014445  0.0057913  0.00609344 0.00294928]
2023-05-15 20:35:06,626 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:06,866 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:06,867 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 20:35:06,886 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 20:35:06,886 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 11339603968.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0],
  'esti_latency': 0.007670020861986297,
  'esti_test_accuracy': 0.0078000000000000005,
  'is_relaxed': False,
  'model_size': 29562625.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.01938486099243164}
2023-05-15 20:35:06,927 - gen_series_legodnn_models.py[28] - INFO: target model size: 29.068MB
2023-05-15 20:35:06,927 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 30480229.90909091B (29.068MB), try to adapt blocks
2023-05-15 20:35:06,929 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:06,993 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04996550369262695
2023-05-15 20:35:06,993 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009099519830197097, 0.0009550400078296659, 0.0006588479951024056, 0.0005876800082623958, 0.00047417599707841876, 0.0007379199974238874, 0.0008656960017979145, 0.003362848088145256, 0.004073823913931846, 0.0021974400579929353]
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.887
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.322
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.525
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.982
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.408
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.486
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.206
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.101
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.429
2023-05-15 20:35:06,994 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.307
2023-05-15 20:35:06,994 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:06,995 - optimal_runtime.py[116] - INFO: avg ratio: 1.348169470069227
2023-05-15 20:35:06,995 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009563608972130638
2023-05-15 20:35:06,995 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00136201 0.00097069 0.00050789 0.00043743 0.00064451 0.0011133
 0.00165137 0.00564414 0.00589905 0.00219744]
2023-05-15 20:35:06,996 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:07,373 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:07,374 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 20:35:07,375 - gen_series_legodnn_models.py[28] - INFO: target model size: 29.567MB
2023-05-15 20:35:07,376 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 31003695.6969697B (29.567MB), try to adapt blocks
2023-05-15 20:35:07,378 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:07,458 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05786601638793945
2023-05-15 20:35:07,458 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001080351985991001, 0.0009943679980933665, 0.000712128009647131, 0.0006596160046756268, 0.0004947200007736683, 0.000768224012106657, 0.0008908800035715102, 0.003478143937885761, 0.00418764804303646, 0.0023802880346775056]
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.747
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.270
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.411
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.766
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.350
2023-05-15 20:35:07,458 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.427
2023-05-15 20:35:07,459 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.172
2023-05-15 20:35:07,459 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.065
2023-05-15 20:35:07,459 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.390
2023-05-15 20:35:07,459 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.207
2023-05-15 20:35:07,459 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:07,459 - optimal_runtime.py[116] - INFO: avg ratio: 1.2865003312358132
2023-05-15 20:35:07,459 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010022046109790963
2023-05-15 20:35:07,460 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00161707 0.00101067 0.00054896 0.00049098 0.00067243 0.00115902
 0.00169941 0.00583765 0.00606388 0.00238029]
2023-05-15 20:35:07,461 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:07,723 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:07,724 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 20:35:07,724 - gen_series_legodnn_models.py[28] - INFO: target model size: 30.067MB
2023-05-15 20:35:07,724 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 31527161.484848484B (30.067MB), try to adapt blocks
2023-05-15 20:35:07,726 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:07,802 - optimal_runtime.py[77] - INFO: infer time of current model: 0.061099231719970705
2023-05-15 20:35:07,803 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008110400037840009, 0.0006424319967627525, 0.0006455039978027343, 0.0005979839987121522, 0.00022681599669158457, 0.0007540800217539072, 0.0008193920087069273, 0.0033155839778482915, 0.004162112079560756, 0.00223894402757287]
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.995
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.965
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.556
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.948
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.944
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.454
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.275
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.117
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.399
2023-05-15 20:35:07,803 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.283
2023-05-15 20:35:07,804 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:07,804 - optimal_runtime.py[116] - INFO: avg ratio: 1.4996268439223777
2023-05-15 20:35:07,804 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.008597715953245526
2023-05-15 20:35:07,805 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00121396 0.00065296 0.0004976  0.0004451  0.00030829 0.00113769
 0.00156304 0.00556482 0.0060269  0.00223894]
2023-05-15 20:35:07,806 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:08,057 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:08,058 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:08,070 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 20:35:08,071 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 19043688448.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.003577334894434474,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31444225.0,
  'update_swap_mem_cost': 3849090.0,
  'update_swap_time_cost': 0.012591361999511719}
2023-05-15 20:35:08,119 - gen_series_legodnn_models.py[28] - INFO: target model size: 30.566MB
2023-05-15 20:35:08,119 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 32050627.272727273B (30.566MB), try to adapt blocks
2023-05-15 20:35:08,121 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:08,187 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05030096054077148
2023-05-15 20:35:08,187 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009053760040551423, 0.0014988479875028132, 0.0012784640081226826, 0.0009842880088835955, 0.0007676799967885018, 0.0009566719774156808, 0.0015335679668933152, 0.003280576005578041, 0.004134752117097378, 0.002280352000147104]
2023-05-15 20:35:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.891
2023-05-15 20:35:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.842
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.786
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.870
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.146
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.026
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.129
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.408
2023-05-15 20:35:08,188 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.260
2023-05-15 20:35:08,188 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 3, 4, 5, 6, 7]),)
2023-05-15 20:35:08,189 - optimal_runtime.py[116] - INFO: avg ratio: 1.0408757729911813
2023-05-15 20:35:08,189 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012387035969580497
2023-05-15 20:35:08,189 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00135516 0.00152341 0.00098554 0.00073264 0.00104344 0.00144334
 0.00194182 0.00550606 0.00598728 0.00228035]
2023-05-15 20:35:08,191 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:08,459 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:08,460 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:08,470 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 20:35:08,470 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 22900744192.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.007233136670893895,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31680129.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.009645462036132812}
2023-05-15 20:35:08,562 - gen_series_legodnn_models.py[28] - INFO: target model size: 31.065MB
2023-05-15 20:35:08,562 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 32574093.060606062B (31.065MB), try to adapt blocks
2023-05-15 20:35:08,564 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:08,682 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09804544067382813
2023-05-15 20:35:08,683 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009840319901704788, 0.0011889600194990634, 0.0005888319984078407, 0.0014293120503425598, 0.00044361600186675786, 0.001046432012692094, 0.0018104639556258918, 0.004170688085258007, 0.004446496009826661, 0.002698623988777399]
2023-05-15 20:35:08,689 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.820
2023-05-15 20:35:08,689 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.079
2023-05-15 20:35:08,689 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.706
2023-05-15 20:35:08,689 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.815
2023-05-15 20:35:08,689 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.505
2023-05-15 20:35:08,690 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.048
2023-05-15 20:35:08,690 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.869
2023-05-15 20:35:08,696 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.888
2023-05-15 20:35:08,696 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.310
2023-05-15 20:35:08,696 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.065
2023-05-15 20:35:08,697 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:08,697 - optimal_runtime.py[116] - INFO: avg ratio: 1.0430484953917263
2023-05-15 20:35:08,698 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012361233151546273
2023-05-15 20:35:08,699 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00147289 0.00118896 0.00045392 0.00106389 0.00060297 0.00157876
 0.00229242 0.00700001 0.0064387  0.00269862]
2023-05-15 20:35:08,701 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:09,008 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:09,010 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:09,010 - gen_series_legodnn_models.py[28] - INFO: target model size: 31.564MB
2023-05-15 20:35:09,010 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 33097558.84848485B (31.564MB), try to adapt blocks
2023-05-15 20:35:09,014 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:09,087 - optimal_runtime.py[77] - INFO: infer time of current model: 0.056134654998779294
2023-05-15 20:35:09,087 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009327999809756874, 0.0010849600173532964, 0.0006687360033392907, 0.0004581760000437498, 0.0005022079972550273, 0.0005932799903675913, 0.0014368959814310075, 0.003564639952033758, 0.0041344000361859794, 0.0021757759675383563]
2023-05-15 20:35:09,087 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.865
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.502
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.542
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.330
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.848
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.095
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.039
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.408
2023-05-15 20:35:09,088 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.320
2023-05-15 20:35:09,088 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:09,088 - optimal_runtime.py[116] - INFO: avg ratio: 1.3406999235716066
2023-05-15 20:35:09,089 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009616891455888886
2023-05-15 20:35:09,089 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00139621 0.00108496 0.00051551 0.00034104 0.00068261 0.00089509
 0.00181941 0.00598283 0.00598677 0.00217578]
2023-05-15 20:35:09,091 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:09,343 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:09,344 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:09,345 - gen_series_legodnn_models.py[28] - INFO: target model size: 32.064MB
2023-05-15 20:35:09,345 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 33621024.63636364B (32.064MB), try to adapt blocks
2023-05-15 20:35:09,349 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:09,508 - optimal_runtime.py[77] - INFO: infer time of current model: 0.13908160400390626
2023-05-15 20:35:09,509 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010777919963002205, 0.0012359360046684741, 0.000714624010026455, 0.0006814720034599303, 0.0005437119901180267, 0.000832896001636982, 0.0015056000240147116, 0.0034735360369086265, 0.004180480048060417, 0.0023112960383296017]
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.749
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.038
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.406
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.709
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.228
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.317
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.045
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.066
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.393
2023-05-15 20:35:09,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.243
2023-05-15 20:35:09,510 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:09,510 - optimal_runtime.py[116] - INFO: avg ratio: 1.2169649503859619
2023-05-15 20:35:09,510 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01059468938346788
2023-05-15 20:35:09,510 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00161323 0.00123594 0.00055089 0.00050724 0.00073902 0.0012566
 0.0019064  0.00582992 0.0060535  0.0023113 ]
2023-05-15 20:35:09,512 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:09,817 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:09,818 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:09,819 - gen_series_legodnn_models.py[28] - INFO: target model size: 32.563MB
2023-05-15 20:35:09,819 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 34144490.42424242B (32.563MB), try to adapt blocks
2023-05-15 20:35:09,823 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:09,897 - optimal_runtime.py[77] - INFO: infer time of current model: 0.053429534912109375
2023-05-15 20:35:09,897 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010762240141630173, 0.0012124479971826077, 0.00070592001080513, 0.0008106560036540032, 0.0006831360012292862, 0.0008280640020966529, 0.0014813440032303332, 0.003403552003204823, 0.004087903961539268, 0.0020420800363644956]
2023-05-15 20:35:09,897 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.750
2023-05-15 20:35:09,897 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.058
2023-05-15 20:35:09,897 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.423
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.437
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.977
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.324
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.062
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.088
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.424
2023-05-15 20:35:09,898 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.407
2023-05-15 20:35:09,898 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:09,898 - optimal_runtime.py[116] - INFO: avg ratio: 1.1528443059199838
2023-05-15 20:35:09,899 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011183960898880968
2023-05-15 20:35:09,899 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00161089 0.00121245 0.00054418 0.0006034  0.00092853 0.00124931
 0.00187569 0.00571246 0.00591944 0.00204208]
2023-05-15 20:35:09,901 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:10,158 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:10,159 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:10,160 - gen_series_legodnn_models.py[28] - INFO: target model size: 33.062MB
2023-05-15 20:35:10,160 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 34667956.21212121B (33.062MB), try to adapt blocks
2023-05-15 20:35:10,163 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:10,237 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05686470413208008
2023-05-15 20:35:10,238 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013403199911117554, 0.0015227520167827608, 0.0009909120053052903, 0.001083199992775917, 0.0008253439888358116, 0.0012124800011515616, 0.0017956799939274788, 0.004149503983557224, 0.004444512113928795, 0.0035427519828081133]
2023-05-15 20:35:10,238 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.602
2023-05-15 20:35:10,238 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.843
2023-05-15 20:35:10,239 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.014
2023-05-15 20:35:10,239 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.075
2023-05-15 20:35:10,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.809
2023-05-15 20:35:10,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.904
2023-05-15 20:35:10,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.876
2023-05-15 20:35:10,241 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.892
2023-05-15 20:35:10,241 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.310
2023-05-15 20:35:10,241 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.004 = 0.811
2023-05-15 20:35:10,242 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:10,242 - optimal_runtime.py[116] - INFO: avg ratio: 0.9030823262023023
2023-05-15 20:35:10,243 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01427706562936144
2023-05-15 20:35:10,244 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00200618 0.00152275 0.00076387 0.00080627 0.00112182 0.00182928
 0.0022737  0.00696445 0.00643583 0.00354275]
2023-05-15 20:35:10,247 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:10,596 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:10,596 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:10,597 - gen_series_legodnn_models.py[28] - INFO: target model size: 33.561MB
2023-05-15 20:35:10,597 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 35191422.0B (33.561MB), try to adapt blocks
2023-05-15 20:35:10,599 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:10,675 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05694412612915039
2023-05-15 20:35:10,676 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001101727996021509, 0.0012748479917645454, 0.0007748799920082092, 0.0007737599983811378, 0.0006097600087523461, 0.0009006400033831596, 0.0015637760087847709, 0.0033455679714679714, 0.0040971840284764775, 0.0022962560094892974]
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.732
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.007
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.297
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.505
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.095
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.006
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.107
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.421
2023-05-15 20:35:10,676 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.251
2023-05-15 20:35:10,677 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:10,677 - optimal_runtime.py[116] - INFO: avg ratio: 1.1399736571381074
2023-05-15 20:35:10,677 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01131023121382939
2023-05-15 20:35:10,678 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00164906 0.00127485 0.00059734 0.00057594 0.00082879 0.0013588
 0.00198007 0.00561514 0.00593288 0.00229626]
2023-05-15 20:35:10,680 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:10,908 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:10,909 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:10,910 - gen_series_legodnn_models.py[28] - INFO: target model size: 34.060MB
2023-05-15 20:35:10,910 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 35714887.78787879B (34.060MB), try to adapt blocks
2023-05-15 20:35:10,911 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:10,971 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04357612609863281
2023-05-15 20:35:10,971 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009792320169508457, 0.0011903999969363214, 0.0006677120104432106, 0.0005986559949815273, 0.000467872004956007, 0.000740671992301941, 0.0014419200085103512, 0.003385695956647396, 0.004103519886732102, 0.0022026560045778753]
2023-05-15 20:35:10,971 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.824
2023-05-15 20:35:10,971 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.078
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.505
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.945
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.427
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.481
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.091
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.094
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.419
2023-05-15 20:35:10,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.304
2023-05-15 20:35:10,972 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:10,973 - optimal_runtime.py[116] - INFO: avg ratio: 1.2998061387164321
2023-05-15 20:35:10,973 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009919452798275717
2023-05-15 20:35:10,973 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146571 0.0011904  0.00051472 0.0004456  0.00063594 0.00111746
 0.00182577 0.00568249 0.00594206 0.00220266]
2023-05-15 20:35:10,975 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:11,244 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:11,245 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:11,245 - gen_series_legodnn_models.py[28] - INFO: target model size: 34.560MB
2023-05-15 20:35:11,245 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 36238353.57575758B (34.560MB), try to adapt blocks
2023-05-15 20:35:11,248 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:11,419 - optimal_runtime.py[77] - INFO: infer time of current model: 0.12733113861083983
2023-05-15 20:35:11,420 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014362559812143446, 0.001263552013784647, 0.0009729919880628586, 0.0006523840026929974, 0.0005967999901622534, 0.0007311360025778412, 0.0016826880071312187, 0.003516671996563673, 0.00417494410276413, 0.0022517119999974967]
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.562
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.016
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.033
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.785
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.119
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.500
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.935
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.053
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.395
2023-05-15 20:35:11,420 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.276
2023-05-15 20:35:11,421 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 6, 7, 8, 9]),)
2023-05-15 20:35:11,421 - optimal_runtime.py[116] - INFO: avg ratio: 1.1179304450443566
2023-05-15 20:35:11,421 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011533244932241818
2023-05-15 20:35:11,422 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00214978 0.00126355 0.00075006 0.00048559 0.00081118 0.00110307
 0.00213063 0.00590232 0.00604548 0.00225171]
2023-05-15 20:35:11,424 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:11,704 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:11,705 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:11,706 - gen_series_legodnn_models.py[28] - INFO: target model size: 35.059MB
2023-05-15 20:35:11,706 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 36761819.36363637B (35.059MB), try to adapt blocks
2023-05-15 20:35:11,708 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:11,769 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04553327941894531
2023-05-15 20:35:11,769 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011137919947504997, 0.0011801280081272124, 0.0006717440038919448, 0.0006212160028517246, 0.0004645440094172955, 0.000744575995951891, 0.001430336020886898, 0.0033600319735705856, 0.00409670390933752, 0.0022033599987626076]
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.725
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.087
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.496
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.875
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.437
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.473
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.100
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.102
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.421
2023-05-15 20:35:11,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.304
2023-05-15 20:35:11,770 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:11,770 - optimal_runtime.py[116] - INFO: avg ratio: 1.3025496464005386
2023-05-15 20:35:11,771 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009898559855692372
2023-05-15 20:35:11,771 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00166712 0.00118013 0.00051783 0.00046239 0.00063141 0.00112335
 0.0018111  0.00563942 0.00593219 0.00220336]
2023-05-15 20:35:11,772 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:12,085 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:12,086 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:12,087 - gen_series_legodnn_models.py[28] - INFO: target model size: 35.558MB
2023-05-15 20:35:12,087 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 37285285.151515156B (35.558MB), try to adapt blocks
2023-05-15 20:35:12,089 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:12,174 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06477763366699218
2023-05-15 20:35:12,175 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010301439855247736, 0.0008821120038628577, 0.000712352007627487, 0.0004098879937082529, 0.0004454720076173544, 0.0012703359969891608, 0.001469439994543791, 0.003503680031746626, 0.004119327913969756, 0.002309472027234733]
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.783
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.455
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.410
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 2.841
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.499
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.863
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.071
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.057
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.414
2023-05-15 20:35:12,175 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.244
2023-05-15 20:35:12,176 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:12,176 - optimal_runtime.py[116] - INFO: avg ratio: 1.251540297007143
2023-05-15 20:35:12,176 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010301998002572569
2023-05-15 20:35:12,176 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00154191 0.00088211 0.00054914 0.00030509 0.00060549 0.00191656
 0.00186062 0.00588051 0.00596495 0.00230947]
2023-05-15 20:35:12,178 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:12,424 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:12,425 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:12,425 - gen_series_legodnn_models.py[28] - INFO: target model size: 36.057MB
2023-05-15 20:35:12,426 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 37808750.93939394B (36.057MB), try to adapt blocks
2023-05-15 20:35:12,427 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:12,495 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05243555068969727
2023-05-15 20:35:12,496 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0017646720260381696, 0.0016923519894480707, 0.0009289919957518578, 0.000988447993993759, 0.0007572479993104935, 0.0011177599877119065, 0.001688768021762371, 0.0036135680973529817, 0.004207263864576816, 0.002383551962673664]
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.457
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.758
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.081
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.178
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.882
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.981
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.932
2023-05-15 20:35:12,496 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.025
2023-05-15 20:35:12,497 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.384
2023-05-15 20:35:12,497 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.205
2023-05-15 20:35:12,497 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:12,497 - optimal_runtime.py[116] - INFO: avg ratio: 1.005302260927313
2023-05-15 20:35:12,497 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012825362222913476
2023-05-15 20:35:12,498 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00264135 0.00169235 0.00071614 0.00073574 0.00102926 0.00168637
 0.00213833 0.00606495 0.00609228 0.00238355]
2023-05-15 20:35:12,500 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:12,792 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:12,793 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:12,794 - gen_series_legodnn_models.py[28] - INFO: target model size: 36.556MB
2023-05-15 20:35:12,794 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 38332216.72727273B (36.556MB), try to adapt blocks
2023-05-15 20:35:12,796 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:12,947 - optimal_runtime.py[77] - INFO: infer time of current model: 0.13362326049804688
2023-05-15 20:35:12,948 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001555039993487298, 0.0012732480093836783, 0.000762559972703457, 0.0007540800124406814, 0.00059078399091959, 0.0008831360042095183, 0.001549600005149841, 0.0034785278961062434, 0.004251583814620971, 0.02052899243682623]
2023-05-15 20:35:12,948 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.519
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.008
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.317
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.544
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.130
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.242
2023-05-15 20:35:12,949 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.015
2023-05-15 20:35:12,950 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.064
2023-05-15 20:35:12,950 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.370
2023-05-15 20:35:12,950 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.021 = 0.140
2023-05-15 20:35:12,950 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8]),)
2023-05-15 20:35:12,950 - optimal_runtime.py[116] - INFO: avg ratio: 1.1638189011113578
2023-05-15 20:35:12,951 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011078498233354425
2023-05-15 20:35:12,951 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00232758 0.00127325 0.00058784 0.00056129 0.000803   0.00133239
 0.00196212 0.0058383  0.00615646 0.02052899]
2023-05-15 20:35:12,955 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:13,222 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:13,223 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:13,224 - gen_series_legodnn_models.py[28] - INFO: target model size: 37.056MB
2023-05-15 20:35:13,224 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 38855682.515151516B (37.056MB), try to adapt blocks
2023-05-15 20:35:13,228 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:13,292 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04369676971435547
2023-05-15 20:35:13,292 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.000990592010319233, 0.001196319982409477, 0.0006715200096368791, 0.0006100799962878228, 0.0004795839972794056, 0.0007363520078361033, 0.0014283200167119505, 0.003377792049199343, 0.004120128005743027, 0.0022145279981195926]
2023-05-15 20:35:13,292 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.815
2023-05-15 20:35:13,292 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.073
2023-05-15 20:35:13,292 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.496
2023-05-15 20:35:13,292 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.909
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.392
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.489
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.102
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.096
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.413
2023-05-15 20:35:13,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.297
2023-05-15 20:35:13,293 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:13,293 - optimal_runtime.py[116] - INFO: avg ratio: 1.2948317314206503
2023-05-15 20:35:13,293 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009957560760239058
2023-05-15 20:35:13,294 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148271 0.00119632 0.00051766 0.0004541  0.00065186 0.00111094
 0.00180855 0.00566922 0.0059661  0.00221453]
2023-05-15 20:35:13,295 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:13,530 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:13,531 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:13,532 - gen_series_legodnn_models.py[28] - INFO: target model size: 37.555MB
2023-05-15 20:35:13,532 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 39379148.303030305B (37.555MB), try to adapt blocks
2023-05-15 20:35:13,537 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:13,630 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05786614227294922
2023-05-15 20:35:13,631 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.002547615954652429, 0.00088662401586771, 0.0007425280027091503, 0.0012098240088671446, 0.0007787839891389012, 0.000987583993934095, 0.0014972159806638957, 0.003417503945529461, 0.004067743882536889, 0.0022874879445880653]
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.317
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.447
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.353
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.963
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.857
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.110
2023-05-15 20:35:13,631 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.051
2023-05-15 20:35:13,632 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.083
2023-05-15 20:35:13,632 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.431
2023-05-15 20:35:13,632 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.256
2023-05-15 20:35:13,632 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:13,632 - optimal_runtime.py[116] - INFO: avg ratio: 1.096235706710153
2023-05-15 20:35:13,632 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011761490308138358
2023-05-15 20:35:13,633 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00381326 0.00088662 0.0005724  0.00090052 0.00105853 0.00148997
 0.00189579 0.00573588 0.00589025 0.00228749]
2023-05-15 20:35:13,635 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:13,906 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:13,908 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:13,908 - gen_series_legodnn_models.py[28] - INFO: target model size: 38.054MB
2023-05-15 20:35:13,908 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 39902614.09090909B (38.054MB), try to adapt blocks
2023-05-15 20:35:13,912 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:14,038 - optimal_runtime.py[77] - INFO: infer time of current model: 0.10974674987792969
2023-05-15 20:35:14,038 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0016830399855971337, 0.0018086079917848108, 0.0014121279679238795, 0.001116384013555944, 0.0007860480099916458, 0.0010777919963002205, 0.0016895040050148964, 0.0036327360197901727, 0.004284511856734753, 0.0025320319682359694]
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.479
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.710
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.711
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.043
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.849
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.017
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.931
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.019
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.359
2023-05-15 20:35:14,039 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.135
2023-05-15 20:35:14,040 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:14,040 - optimal_runtime.py[116] - INFO: avg ratio: 0.9270311532452281
2023-05-15 20:35:14,040 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01390823339083188
2023-05-15 20:35:14,041 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00251917 0.00180861 0.00108858 0.00083097 0.0010684  0.00162607
 0.00213926 0.00609712 0.00620414 0.00253203]
2023-05-15 20:35:14,043 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:14,347 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:14,349 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:14,350 - gen_series_legodnn_models.py[28] - INFO: target model size: 38.553MB
2023-05-15 20:35:14,350 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 40426079.87878788B (38.553MB), try to adapt blocks
2023-05-15 20:35:14,355 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:14,451 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07536707305908204
2023-05-15 20:35:14,452 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0006681280052289366, 0.0008961599916219711, 0.0008535360023379325, 0.0008784000016748905, 0.0006093760021030902, 0.0009634560053236783, 0.0013191679827868937, 0.003425855990499258, 0.004352991975843906, 0.0022844480127096178]
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.208
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.432
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.177
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.326
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.096
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.138
2023-05-15 20:35:14,452 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.193
2023-05-15 20:35:14,453 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.081
2023-05-15 20:35:14,453 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.338
2023-05-15 20:35:14,453 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.258
2023-05-15 20:35:14,453 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 2, 3, 5, 6, 9]),)
2023-05-15 20:35:14,453 - optimal_runtime.py[116] - INFO: avg ratio: 1.2165250050965364
2023-05-15 20:35:14,453 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010598520857270437
2023-05-15 20:35:14,454 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00100005 0.00089616 0.00065797 0.00065383 0.00082827 0.00145357
 0.00167034 0.00574989 0.0063033  0.00228445]
2023-05-15 20:35:14,456 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:14,714 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:14,715 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:14,715 - gen_series_legodnn_models.py[28] - INFO: target model size: 39.053MB
2023-05-15 20:35:14,715 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 40949545.66666667B (39.053MB), try to adapt blocks
2023-05-15 20:35:14,717 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:14,787 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05368320083618164
2023-05-15 20:35:14,788 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.00109401598200202, 0.0012324800156056882, 0.0007276480160653591, 0.0007719360142946244, 0.0005977279990911484, 0.0008684480041265488, 0.0016041919589042666, 0.0034931519776582715, 0.004153920061886311, 0.002240224026143551]
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.738
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.041
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.381
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.509
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.117
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.263
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.981
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.060
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.402
2023-05-15 20:35:14,788 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.282
2023-05-15 20:35:14,789 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:14,789 - optimal_runtime.py[116] - INFO: avg ratio: 1.1607050766211218
2023-05-15 20:35:14,789 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011108218529930087
2023-05-15 20:35:14,789 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00163752 0.00123248 0.00056093 0.00057458 0.00081244 0.00131023
 0.00203124 0.00586284 0.00601504 0.00224022]
2023-05-15 20:35:14,791 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:15,172 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:15,174 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:15,174 - gen_series_legodnn_models.py[28] - INFO: target model size: 39.552MB
2023-05-15 20:35:15,175 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 41473011.45454545B (39.552MB), try to adapt blocks
2023-05-15 20:35:15,178 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:15,257 - optimal_runtime.py[77] - INFO: infer time of current model: 0.061610496520996094
2023-05-15 20:35:15,257 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0008366080122068524, 0.0008766080066561698, 0.0008853439949452876, 0.0009088640036061406, 0.0004967040023766458, 0.0006725119967013597, 0.0016792320050299165, 0.003812544036656618, 0.004158815942704677, 0.00243788805603981]
2023-05-15 20:35:15,257 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.965
2023-05-15 20:35:15,257 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.464
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.135
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.281
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.344
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.631
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.937
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.971
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.400
2023-05-15 20:35:15,258 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.178
2023-05-15 20:35:15,259 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 3, 4, 8, 9]),)
2023-05-15 20:35:15,259 - optimal_runtime.py[116] - INFO: avg ratio: 1.2677809768924575
2023-05-15 20:35:15,259 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01017002611248392
2023-05-15 20:35:15,260 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00125223 0.00087661 0.00068249 0.0006765  0.00067513 0.00101462
 0.00212626 0.0063989  0.00602213 0.00243789]
2023-05-15 20:35:15,261 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:15,486 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:15,487 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:15,487 - gen_series_legodnn_models.py[28] - INFO: target model size: 40.051MB
2023-05-15 20:35:15,487 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 41996477.24242424B (40.051MB), try to adapt blocks
2023-05-15 20:35:15,488 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:15,553 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049942657470703124
2023-05-15 20:35:15,553 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010287360027432441, 0.0011913279928267, 0.0006879360042512416, 0.0006069759987294673, 0.00045907200127840044, 0.000733375996351242, 0.0014578880183398724, 0.0033795519992709153, 0.00411708790063858, 0.0022530560195446014]
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.784
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.077
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.460
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.919
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.454
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.495
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.079
2023-05-15 20:35:15,553 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.096
2023-05-15 20:35:15,554 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.414
2023-05-15 20:35:15,554 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.275
2023-05-15 20:35:15,554 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:15,554 - optimal_runtime.py[116] - INFO: avg ratio: 1.293956002565701
2023-05-15 20:35:15,554 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009964299879084954
2023-05-15 20:35:15,555 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00153981 0.00119133 0.00053031 0.00045179 0.00062398 0.00110645
 0.00184599 0.00567218 0.0059617  0.00225306]
2023-05-15 20:35:15,556 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:15,862 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:15,863 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:15,863 - gen_series_legodnn_models.py[28] - INFO: target model size: 40.550MB
2023-05-15 20:35:15,864 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 42519943.03030303B (40.550MB), try to adapt blocks
2023-05-15 20:35:15,866 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:15,970 - optimal_runtime.py[77] - INFO: infer time of current model: 0.08957324981689453
2023-05-15 20:35:15,971 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001286336027085781, 0.0014214719980955124, 0.0008968000039458275, 0.0009442239925265312, 0.0007109439969062805, 0.0010656960159540177, 0.0016840320006012918, 0.0035997439622879033, 0.004265183851122857, 0.002502080008387566]
2023-05-15 20:35:15,971 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.627
2023-05-15 20:35:15,971 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.903
2023-05-15 20:35:15,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.120
2023-05-15 20:35:15,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.233
2023-05-15 20:35:15,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.939
2023-05-15 20:35:15,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.029
2023-05-15 20:35:15,972 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.934
2023-05-15 20:35:15,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.029
2023-05-15 20:35:15,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.365
2023-05-15 20:35:15,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.148
2023-05-15 20:35:15,974 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:15,974 - optimal_runtime.py[116] - INFO: avg ratio: 1.0146247362593932
2023-05-15 20:35:15,975 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01270752148961054
2023-05-15 20:35:15,976 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00192538 0.00142147 0.00069132 0.00070282 0.00096632 0.00160782
 0.00213233 0.00604174 0.00617615 0.00250208]
2023-05-15 20:35:15,979 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:16,301 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:16,302 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:16,302 - gen_series_legodnn_models.py[28] - INFO: target model size: 41.049MB
2023-05-15 20:35:16,302 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 43043408.81818182B (41.049MB), try to adapt blocks
2023-05-15 20:35:16,303 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:16,380 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06395251083374023
2023-05-15 20:35:16,381 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0006806080183014274, 0.0008873600102961062, 0.002871264103800059, 0.0005872320085763932, 0.0004552960097789764, 0.0007351360097527504, 0.0014209280088543891, 0.0033623359575867657, 0.00408911993354559, 0.002218431983143091]
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.186
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.446
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.350
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.983
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.467
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.492
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.107
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.101
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.424
2023-05-15 20:35:16,381 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.295
2023-05-15 20:35:16,382 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:16,382 - optimal_runtime.py[116] - INFO: avg ratio: 1.3147111820132156
2023-05-15 20:35:16,382 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009806994734891562
2023-05-15 20:35:16,383 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00101873 0.00088736 0.00221339 0.0004371  0.00061884 0.0011091
 0.00179919 0.00564328 0.0059212  0.00221843]
2023-05-15 20:35:16,384 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:16,654 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:16,656 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:16,656 - gen_series_legodnn_models.py[28] - INFO: target model size: 41.549MB
2023-05-15 20:35:16,656 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 43566874.60606061B (41.549MB), try to adapt blocks
2023-05-15 20:35:16,659 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:16,740 - optimal_runtime.py[77] - INFO: infer time of current model: 0.060334335327148436
2023-05-15 20:35:16,740 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010407040072605014, 0.0011837119944393636, 0.0012172479704022404, 0.0011362560298293827, 0.00037811199761927125, 0.0006104000080376864, 0.0014032959919422865, 0.003916703924536705, 0.004713504031300545, 0.002344287953339517]
2023-05-15 20:35:16,740 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.775
2023-05-15 20:35:16,740 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.084
2023-05-15 20:35:16,740 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.825
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.025
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.766
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.797
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.121
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.945
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.005 = 1.235
2023-05-15 20:35:16,741 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.225
2023-05-15 20:35:16,741 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 6, 7, 8, 9]),)
2023-05-15 20:35:16,741 - optimal_runtime.py[116] - INFO: avg ratio: 1.1060803885630974
2023-05-15 20:35:16,742 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011656807021645472
2023-05-15 20:35:16,742 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00155772 0.00118371 0.00093835 0.00084576 0.00051393 0.00092091
 0.00177686 0.00657372 0.00682534 0.00234429]
2023-05-15 20:35:16,744 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:17,040 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:17,041 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:17,041 - gen_series_legodnn_models.py[28] - INFO: target model size: 42.048MB
2023-05-15 20:35:17,041 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 44090340.3939394B (42.048MB), try to adapt blocks
2023-05-15 20:35:17,043 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:17,120 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05950352096557617
2023-05-15 20:35:17,120 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001124416008591652, 0.0009093440100550652, 0.0008635519929230213, 0.0014355200156569482, 0.000581504005473107, 0.0007890240005217492, 0.0014384320080280304, 0.003405120003968477, 0.004096352044492961, 0.002303423995152116]
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.718
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.411
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.163
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.811
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.148
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.390
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.094
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.087
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.421
2023-05-15 20:35:17,121 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.247
2023-05-15 20:35:17,121 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 4, 6, 7, 9]),)
2023-05-15 20:35:17,122 - optimal_runtime.py[116] - INFO: avg ratio: 1.1480163635731535
2023-05-15 20:35:17,122 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011230994652181261
2023-05-15 20:35:17,122 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00168302 0.00090934 0.00066569 0.00106851 0.00079039 0.00119041
 0.00182135 0.00571509 0.00593168 0.00230342]
2023-05-15 20:35:17,123 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:17,408 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:17,410 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:17,419 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 20:35:17,420 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 25797435392.0,
  'blocks_sparsity': [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.006477973807511066,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31724609.0,
  'update_swap_mem_cost': 123196.0,
  'update_swap_time_cost': 0.009596824645996094}
2023-05-15 20:35:17,510 - gen_series_legodnn_models.py[28] - INFO: target model size: 42.547MB
2023-05-15 20:35:17,514 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 44613806.18181819B (42.547MB), try to adapt blocks
2023-05-15 20:35:17,516 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:17,591 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06365606307983399
2023-05-15 20:35:17,592 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009041280150413513, 0.00151936000213027, 0.0007923200130462647, 0.000552319997921586, 0.0005852800067514181, 0.0007679680064320564, 0.001489568019285798, 0.003286880001425743, 0.004098911918699741, 0.004287392064929008]
2023-05-15 20:35:17,592 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.194
2023-05-15 20:35:17,592 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.845
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.268
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.109
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.141
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.428
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.056
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.127
2023-05-15 20:35:17,593 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.421
2023-05-15 20:35:17,594 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.004 = 0.670
2023-05-15 20:35:17,594 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 2, 4, 5, 6, 7, 8]),)
2023-05-15 20:35:17,594 - optimal_runtime.py[116] - INFO: avg ratio: 1.2333938000463824
2023-05-15 20:35:17,595 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010453567740831683
2023-05-15 20:35:17,595 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00101201 0.00151936 0.00061078 0.00041111 0.00079552 0.00115864
 0.0018861  0.00551664 0.00593538 0.00428739]
2023-05-15 20:35:17,597 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:17,882 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:17,884 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:17,885 - gen_series_legodnn_models.py[28] - INFO: target model size: 43.046MB
2023-05-15 20:35:17,885 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 45137271.96969697B (43.046MB), try to adapt blocks
2023-05-15 20:35:17,887 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:17,972 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07297196960449219
2023-05-15 20:35:17,973 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001421279978007078, 0.000875456001609564, 0.0006261759884655476, 0.0005405119992792607, 0.0003480640016496181, 0.0010079679712653162, 0.0013623679727315903, 0.003286304082721472, 0.004078912027180195, 0.002041119983419776]
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.759
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.466
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.604
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.155
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.918
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.088
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.155
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.127
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.428
2023-05-15 20:35:17,973 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.407
2023-05-15 20:35:17,974 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:17,974 - optimal_runtime.py[116] - INFO: avg ratio: 1.324986666753117
2023-05-15 20:35:17,974 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.00973093991315542
2023-05-15 20:35:17,974 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00159086 0.00087546 0.00048271 0.00040232 0.00047309 0.00152073
 0.00172504 0.00551567 0.00590642 0.00204112]
2023-05-15 20:35:17,976 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:18,248 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:18,250 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:18,251 - gen_series_legodnn_models.py[28] - INFO: target model size: 43.545MB
2023-05-15 20:35:18,252 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 45660737.75757576B (43.545MB), try to adapt blocks
2023-05-15 20:35:18,256 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:18,362 - optimal_runtime.py[77] - INFO: infer time of current model: 0.08473632049560546
2023-05-15 20:35:18,362 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012567359879612921, 0.0013128639981150627, 0.00068988798558712, 0.0006268799938261508, 0.0004836479984223843, 0.0007508159875869751, 0.0014637440219521522, 0.0033863999843597413, 0.004117696054279804, 0.0022405759915709498]
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.859
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.977
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.456
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.858
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.381
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.461
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.075
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.093
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.414
2023-05-15 20:35:18,363 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.282
2023-05-15 20:35:18,363 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:18,363 - optimal_runtime.py[116] - INFO: avg ratio: 1.3088626006195427
2023-05-15 20:35:18,364 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009850816757850414
2023-05-15 20:35:18,364 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00140669 0.00131286 0.00053182 0.00046661 0.00065738 0.00113276
 0.0018534  0.00568367 0.00596258 0.00224058]
2023-05-15 20:35:18,365 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:18,671 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:18,672 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:18,672 - gen_series_legodnn_models.py[28] - INFO: target model size: 44.045MB
2023-05-15 20:35:18,672 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 46184203.54545455B (44.045MB), try to adapt blocks
2023-05-15 20:35:18,674 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:18,728 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0425618896484375
2023-05-15 20:35:18,728 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012329599969089031, 0.00116873599588871, 0.0008085760176181794, 0.0011523839980363845, 0.000874208003282547, 0.0008472960144281387, 0.0014389119930565358, 0.003370560061186552, 0.00412761589884758, 0.002236415974795818]
2023-05-15 20:35:18,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.875
2023-05-15 20:35:18,728 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.098
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.242
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.011
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.764
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.294
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.093
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.099
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.411
2023-05-15 20:35:18,729 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.285
2023-05-15 20:35:18,729 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 3, 5, 6, 7, 9]),)
2023-05-15 20:35:18,729 - optimal_runtime.py[116] - INFO: avg ratio: 1.1602805753939023
2023-05-15 20:35:18,729 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01111228259210451
2023-05-15 20:35:18,730 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00138007 0.00116874 0.00062331 0.00085776 0.00118823 0.00127832
 0.00182196 0.00565709 0.00597695 0.00223642]
2023-05-15 20:35:18,731 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:18,954 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:18,955 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:18,956 - gen_series_legodnn_models.py[28] - INFO: target model size: 44.544MB
2023-05-15 20:35:18,956 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 46707669.333333336B (44.544MB), try to adapt blocks
2023-05-15 20:35:18,959 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:19,032 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05605382537841797
2023-05-15 20:35:19,032 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012951360009610653, 0.0011847040206193922, 0.0006823680102825164, 0.000650111999362707, 0.0004786240048706531, 0.0007516160048544407, 0.0015885120294988158, 0.0034520319551229477, 0.004293408095836639, 0.002636991996318102]
2023-05-15 20:35:19,032 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.833
2023-05-15 20:35:19,032 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.083
2023-05-15 20:35:19,032 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.472
2023-05-15 20:35:19,032 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.791
2023-05-15 20:35:19,032 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.395
2023-05-15 20:35:19,033 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.459
2023-05-15 20:35:19,033 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.990
2023-05-15 20:35:19,033 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.073
2023-05-15 20:35:19,033 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.356
2023-05-15 20:35:19,033 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.089
2023-05-15 20:35:19,033 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:19,033 - optimal_runtime.py[116] - INFO: avg ratio: 1.239800551061028
2023-05-15 20:35:19,034 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010399548240942831
2023-05-15 20:35:19,034 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00144967 0.0011847  0.00052602 0.0004839  0.00065055 0.00113397
 0.00201139 0.00579383 0.00621702 0.00263699]
2023-05-15 20:35:19,036 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:19,306 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:19,307 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:19,307 - gen_series_legodnn_models.py[28] - INFO: target model size: 45.043MB
2023-05-15 20:35:19,308 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 47231135.121212125B (45.043MB), try to adapt blocks
2023-05-15 20:35:19,312 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:19,379 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05070713424682617
2023-05-15 20:35:19,379 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001352768000215292, 0.00122198398783803, 0.0007195520028471946, 0.0006808959990739822, 0.0005140799880027771, 0.000800288014113903, 0.001467168003320694, 0.0034080960080027584, 0.004129503898322583, 0.0022313280105590817]
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.798
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.050
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.396
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.710
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.299
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.370
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.072
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.086
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.410
2023-05-15 20:35:19,379 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.287
2023-05-15 20:35:19,380 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:19,380 - optimal_runtime.py[116] - INFO: avg ratio: 1.2464953467135096
2023-05-15 20:35:19,380 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010343693359065572
2023-05-15 20:35:19,381 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151418 0.00122198 0.00055469 0.00050682 0.00069874 0.0012074
 0.00185774 0.00572009 0.00597968 0.00223133]
2023-05-15 20:35:19,382 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:19,719 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:19,721 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:19,721 - gen_series_legodnn_models.py[28] - INFO: target model size: 45.542MB
2023-05-15 20:35:19,722 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 47754600.909090914B (45.542MB), try to adapt blocks
2023-05-15 20:35:19,725 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:19,825 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07815756988525391
2023-05-15 20:35:19,826 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001892992027103901, 0.0009548799991607667, 0.0008793600089848041, 0.001287552021443844, 0.0011119039952754975, 0.0017540799789130688, 0.001469375992193818, 0.003350112024694681, 0.005033215887844563, 0.003153824035078287]
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.570
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.344
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.142
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.904
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.601
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.625
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.071
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.105
2023-05-15 20:35:19,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.005 = 1.157
2023-05-15 20:35:19,827 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 0.911
2023-05-15 20:35:19,827 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([2, 3, 6, 7, 8, 9]),)
2023-05-15 20:35:19,827 - optimal_runtime.py[116] - INFO: avg ratio: 1.048472143682771
2023-05-15 20:35:19,827 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012297289649125596
2023-05-15 20:35:19,828 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00211886 0.00095488 0.00067788 0.00095837 0.00151131 0.00264639
 0.00186054 0.00562277 0.00728829 0.00315382]
2023-05-15 20:35:19,830 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:20,047 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:20,047 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:20,048 - gen_series_legodnn_models.py[28] - INFO: target model size: 46.042MB
2023-05-15 20:35:20,048 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 48278066.696969695B (46.042MB), try to adapt blocks
2023-05-15 20:35:20,049 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:20,117 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05618415832519531
2023-05-15 20:35:20,117 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0015002879947423934, 0.0014035519957542421, 0.0008494399935007094, 0.0008363519981503488, 0.0006611200049519538, 0.0009892160072922707, 0.001752095974981785, 0.0038938878849148753, 0.004697951961308717, 0.0026516160015016793]
2023-05-15 20:35:20,117 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.719
2023-05-15 20:35:20,117 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.914
2023-05-15 20:35:20,117 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.392
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.010
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.109
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.898
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.951
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.005 = 1.239
2023-05-15 20:35:20,118 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.083
2023-05-15 20:35:20,118 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:20,119 - optimal_runtime.py[116] - INFO: avg ratio: 1.0211353830496248
2023-05-15 20:35:20,119 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012626499731505316
2023-05-15 20:35:20,119 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016793  0.00140355 0.00065481 0.00062253 0.0008986  0.00149244
 0.00221852 0.00653543 0.00680282 0.00265162]
2023-05-15 20:35:20,121 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:20,499 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:20,500 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:20,500 - gen_series_legodnn_models.py[28] - INFO: target model size: 46.541MB
2023-05-15 20:35:20,500 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 48801532.484848484B (46.541MB), try to adapt blocks
2023-05-15 20:35:20,502 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:20,596 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07249183654785156
2023-05-15 20:35:20,596 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014315520189702511, 0.0013039999827742577, 0.0007880640178918839, 0.0007583360001444817, 0.000586368016898632, 0.0009167039915919304, 0.0016238080002367497, 0.0035939520299434666, 0.004312287949025631, 0.0024701760075986384]
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.754
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.984
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.275
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.536
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.139
2023-05-15 20:35:20,596 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.196
2023-05-15 20:35:20,597 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.969
2023-05-15 20:35:20,597 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.030
2023-05-15 20:35:20,597 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.350
2023-05-15 20:35:20,597 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.163
2023-05-15 20:35:20,597 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:20,597 - optimal_runtime.py[116] - INFO: avg ratio: 1.1080275529126615
2023-05-15 20:35:20,597 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011636322225033122
2023-05-15 20:35:20,598 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00160236 0.001304   0.0006075  0.00056446 0.000797   0.00138304
 0.00205608 0.00603202 0.00624436 0.00247018]
2023-05-15 20:35:20,600 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:20,878 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:20,879 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:20,879 - gen_series_legodnn_models.py[28] - INFO: target model size: 47.040MB
2023-05-15 20:35:20,879 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 49324998.27272727B (47.040MB), try to adapt blocks
2023-05-15 20:35:20,882 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:20,961 - optimal_runtime.py[77] - INFO: infer time of current model: 0.056281791687011716
2023-05-15 20:35:20,962 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014185280092060568, 0.0013304959982633592, 0.0008134719952940942, 0.0010581440180540084, 0.0006384000107645989, 0.0009381759911775589, 0.0016402240246534347, 0.0036541759967803956, 0.004516608003526926, 0.0027835200298577546]
2023-05-15 20:35:20,962 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.761
2023-05-15 20:35:20,962 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.965
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.235
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.101
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.046
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.169
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.959
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.013
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.005 = 1.289
2023-05-15 20:35:20,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.003 = 1.032
2023-05-15 20:35:20,964 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 3, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:20,964 - optimal_runtime.py[116] - INFO: avg ratio: 1.0406529379210199
2023-05-15 20:35:20,964 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012389688406265956
2023-05-15 20:35:20,965 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158778 0.0013305  0.00062709 0.00078762 0.00086772 0.00141543
 0.00207686 0.0061331  0.00654022 0.00278352]
2023-05-15 20:35:20,968 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:21,326 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:21,326 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:21,327 - gen_series_legodnn_models.py[28] - INFO: target model size: 47.539MB
2023-05-15 20:35:21,327 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 49848464.06060606B (47.539MB), try to adapt blocks
2023-05-15 20:35:21,329 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:21,445 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09933401489257812
2023-05-15 20:35:21,445 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013752640075981616, 0.0012706240266561507, 0.0007561920024454595, 0.0007368960082530975, 0.0005594559982419014, 0.0008699520006775854, 0.0015570559836924076, 0.0034900798946619033, 0.004027039933949708, 0.004468576083891094]
2023-05-15 20:35:21,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.785
2023-05-15 20:35:21,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.010
2023-05-15 20:35:21,445 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.329
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.580
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.193
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.261
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.011
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.061
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.446
2023-05-15 20:35:21,446 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.004 = 0.643
2023-05-15 20:35:21,447 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7]),)
2023-05-15 20:35:21,447 - optimal_runtime.py[116] - INFO: avg ratio: 1.1440082633291955
2023-05-15 20:35:21,447 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01127034310257995
2023-05-15 20:35:21,447 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00153936 0.00127062 0.00058293 0.0005485  0.00076042 0.0013125
 0.00197156 0.00585769 0.00583131 0.00446858]
2023-05-15 20:35:21,449 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:21,733 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:21,734 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:21,734 - gen_series_legodnn_models.py[28] - INFO: target model size: 48.038MB
2023-05-15 20:35:21,735 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 50371929.84848485B (48.038MB), try to adapt blocks
2023-05-15 20:35:21,737 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:21,817 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05395894241333008
2023-05-15 20:35:21,817 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013808320090174676, 0.0012843519896268845, 0.0007620480135083199, 0.000761183999478817, 0.0005904639884829522, 0.0008997440040111542, 0.0015444800071418286, 0.003465088084340096, 0.004141087964177131, 0.0023315200470387936]
2023-05-15 20:35:21,817 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.782
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.999
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.318
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.530
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.131
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.219
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.019
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.069
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.406
2023-05-15 20:35:21,818 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.232
2023-05-15 20:35:21,819 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:21,819 - optimal_runtime.py[116] - INFO: avg ratio: 1.140952550189763
2023-05-15 20:35:21,819 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011300527473962211
2023-05-15 20:35:21,819 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00154559 0.00128435 0.00058745 0.00056658 0.00080256 0.00135745
 0.00195563 0.00581574 0.00599646 0.00233152]
2023-05-15 20:35:21,821 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:22,212 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:22,213 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:22,239 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 20:35:22,240 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 21940379648.0,
  'blocks_sparsity': [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.006197287609030359,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31488705.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.026196002960205078}
2023-05-15 20:35:22,287 - gen_series_legodnn_models.py[28] - INFO: target model size: 48.538MB
2023-05-15 20:35:22,287 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 50895395.63636364B (48.538MB), try to adapt blocks
2023-05-15 20:35:22,289 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:22,367 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06482514953613282
2023-05-15 20:35:22,368 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011157119944691658, 0.0009494400136172772, 0.0006848319917917251, 0.0005965760089457036, 0.00047779200971126553, 0.0007293439991772173, 0.0013968320060521366, 0.003278656028211116, 0.006245888009667396, 0.0021440319940447808]
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.967
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.330
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.467
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.952
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.397
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.504
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.126
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.129
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.006 = 0.932
2023-05-15 20:35:22,368 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.340
2023-05-15 20:35:22,369 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 20:35:22,369 - optimal_runtime.py[116] - INFO: avg ratio: 1.3276564269394133
2023-05-15 20:35:22,369 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009711372142888777
2023-05-15 20:35:22,369 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00124884 0.000965   0.00052792 0.00044405 0.00064942 0.00110037
 0.00176868 0.00550284 0.00904429 0.00214403]
2023-05-15 20:35:22,371 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:22,593 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:22,594 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:22,595 - gen_series_legodnn_models.py[28] - INFO: target model size: 49.037MB
2023-05-15 20:35:22,595 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 51418861.42424243B (49.037MB), try to adapt blocks
2023-05-15 20:35:22,598 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:22,667 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04783686447143555
2023-05-15 20:35:22,668 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014557439759373663, 0.0010464640073478222, 0.0006935360096395016, 0.0006340479888021945, 0.0005091199874877931, 0.0007706560045480728, 0.0014484159946441652, 0.0033671039491891853, 0.0041309441104531285, 0.0022435200028121474]
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.741
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.207
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.449
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.837
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.311
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.423
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.086
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.100
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.410
2023-05-15 20:35:22,668 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.280
2023-05-15 20:35:22,669 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:22,669 - optimal_runtime.py[116] - INFO: avg ratio: 1.2832086692218732
2023-05-15 20:35:22,669 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01004775446827763
2023-05-15 20:35:22,670 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00162944 0.00106362 0.00053463 0.00047195 0.000692   0.00116269
 0.001834   0.00565129 0.00598177 0.00224352]
2023-05-15 20:35:22,671 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:23,043 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:23,045 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:23,046 - gen_series_legodnn_models.py[28] - INFO: target model size: 49.536MB
2023-05-15 20:35:23,046 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 51942327.21212121B (49.536MB), try to adapt blocks
2023-05-15 20:35:23,049 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:23,137 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07160899353027343
2023-05-15 20:35:23,138 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013931199945509433, 0.0011034880056977271, 0.00059884799644351, 0.0005621440075337886, 0.0017107520084828141, 0.0026916159391403203, 0.0014251519721001388, 0.0035232959613204005, 0.0043378560654819005, 0.002318176015280187]
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.775
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.144
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.678
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 2.072
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.390
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.407
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.104
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 1.051
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.342
2023-05-15 20:35:23,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.239
2023-05-15 20:35:23,139 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 6, 7, 8, 9]),)
2023-05-15 20:35:23,139 - optimal_runtime.py[116] - INFO: avg ratio: 1.1092302419926348
2023-05-15 20:35:23,139 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011623705477723784
2023-05-15 20:35:23,140 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00155934 0.00112157 0.00046164 0.00041842 0.00232527 0.00406086
 0.00180454 0.00591344 0.00628138 0.00231818]
2023-05-15 20:35:23,141 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:23,381 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:23,383 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 20:35:23,383 - gen_series_legodnn_models.py[28] - INFO: target model size: 50.035MB
2023-05-15 20:35:23,384 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 52465793.0B (50.035MB), try to adapt blocks
2023-05-15 20:35:23,386 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 20:35:23,448 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047691009521484376
2023-05-15 20:35:23,449 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013260479830205442, 0.0010152959935367106, 0.0007334080189466476, 0.0006592959985136987, 0.0005102720074355603, 0.0007687039896845817, 0.0014542079903185367, 0.003376127976924181, 0.004196479968726635, 0.0024696000181138513]
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.814
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.244
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.370
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.766
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.309
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.427
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.082
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.003 = 1.097
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.006 / 0.004 = 1.388
2023-05-15 20:35:23,449 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.003 / 0.002 = 1.163
2023-05-15 20:35:23,450 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 20:35:23,450 - optimal_runtime.py[116] - INFO: avg ratio: 1.25976332147874
2023-05-15 20:35:23,450 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010234752369811917
2023-05-15 20:35:23,451 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148427 0.00103194 0.00056537 0.00049074 0.00069357 0.00115975
 0.00184133 0.00566643 0.00607667 0.0024696 ]
2023-05-15 20:35:23,452 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 20:35:23,834 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 20:35:23,835 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
