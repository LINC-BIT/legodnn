2023-05-15 21:54:11,365 - log.py[38] - DEBUG: entry file content: ---------------------------------
2023-05-15 21:54:11,365 - log.py[39] - DEBUG: 
import os
os.environ["CUDA_VISIBLE_DEVICES"] = "1"

import copy
import torch
import math
from cv_task.semantic_segmentation.mmseg_tools.test import test_segmentor
import sys
sys.path.insert(0, '../../')
sys.setrecursionlimit(100000)
from legodnn import BlockExtractor, BlockTrainer, ServerBlockProfiler, EdgeBlockProfiler, OptimalRuntime
from legodnn.gen_series_legodnn_models import gen_series_legodnn_models
from legodnn.utils.dl.common.env import set_random_seed
set_random_seed(0)
from legodnn.block_detection.model_topology_extraction import topology_extraction
from legodnn.presets.auto_block_manager import AutoBlockManager
from legodnn.presets.common_detection_manager_1204_new import CommonDetectionManager
from legodnn.model_manager.common_semantic_segmentation_model_manager_v2 import CommonSemanticSegmentationModelManager
from legodnn.utils.dl.common.model import get_module, set_module, get_model_size
from legodnn.utils.common.file import experiments_model_file_path

from cv_task.datasets.semantic_segmentation import mmseg_build_dataloader
from cv_task.semantic_segmentation.mmseg_models.legodnn_configs import get_fcn_r18_d8_512x512_b16_30k_voc2012_config
from cv_task.semantic_segmentation.mmseg_tools import mmseg_init_model
from mmcv.parallel import MMDataParallel

if __name__=='__main__':
    cv_task = 'semantic_segmentation'
    dataset_name = 'voc2012'
    model_name = 'fcn_r18_d8_512_512_b16'
    method = 'legodnn'
    sparsity = 's0'
    compress_layer_max_ratio = 0.125
    # compress_layer_max_ratio = 0.25
    # train_iter_num = 6000
    train_iter_num = 1000
    device = 'cuda' 
    model_input_size = (1, 3, 512, 512)
    block_sparsity = [0.0, 0.4, 0.8]
    teacher_pt_file = None
    checkpoint = None
    
    root_path = os.path.join('results/legodnn', cv_task, model_name+'_'+dataset_name + '_' + str(compress_layer_max_ratio).replace('.', '-'))
    
    compressed_blocks_dir_path = root_path + '/compressed'
    trained_blocks_dir_path = root_path + '/trained'
    descendant_models_dir_path = root_path + '/descendant'
    test_sample_num = 65
    model_config = get_fcn_r18_d8_512x512_b16_30k_voc2012_config()
    
    print('\033[1;36m-------------------------------->    BUILD LEGODNN GRAPH\033[0m')
    jit_detector = mmseg_init_model(model_config, None, mode='lego_jit', device=device)
    model_graph = topology_extraction(jit_detector, model_input_size, device=device, mode='unpack')
    model_graph.print_ordered_node()
    
    print('\033[1;36m-------------------------------->    START BLOCK DETECTION\033[0m')
    detection_manager = CommonDetectionManager(model_graph, max_ratio=compress_layer_max_ratio)
    detection_manager.detection_all_blocks()
    detection_manager.print_all_blocks()
    # exit(0)
    model_manager = CommonSemanticSegmentationModelManager()
    block_manager = AutoBlockManager(block_sparsity, detection_manager, model_manager)    
    # TODO
    if teacher_pt_file is not None:
        teacher_detector = mmseg_init_model(config=model_config, checkpoint=None, mode='mmseg_test', device=device)
        raw_teacher: torch.nn.Module = torch.load(teacher_pt_file).to(device)
        for name,param in raw_teacher.named_parameters():
            param.requires_grad = True
            
        for name, module in raw_teacher.named_modules():
            if len(list(module.children()))>0:
                continue
            else:
                set_module(teacher_detector, name, copy.deepcopy(module))
    else:
        teacher_detector = mmseg_init_model(config=model_config, checkpoint=checkpoint, mode='mmseg_test', device=device)
        
    print('\033[1;36m-------------------------------->    START BLOCK EXTRACTION\033[0m')
    block_extractor = BlockExtractor(teacher_detector, block_manager, compressed_blocks_dir_path, model_input_size, device)
    block_extractor.extract_all_blocks()
    # exit(0)
    print('\033[1;36m-------------------------------->    START BLOCK TRAIN\033[0m')
    train_loader, test_loader = mmseg_build_dataloader(cfg=model_config)
    epoch_num = math.ceil(float(train_iter_num)/len(train_loader))
    parallel_teacher_detector = MMDataParallel(teacher_detector.cuda(0), device_ids=[0])
    block_trainer = BlockTrainer(parallel_teacher_detector, block_manager, model_manager, compressed_blocks_dir_path,
                                 trained_blocks_dir_path, epoch_num, train_loader, device=device)
    block_trainer.train_all_blocks()
    
    server_block_profiler = ServerBlockProfiler(teacher_detector, block_manager, model_manager,
                                                trained_blocks_dir_path, test_loader, model_input_size, device)
    server_block_profiler.profile_all_blocks()

    edge_block_profiler = EdgeBlockProfiler(block_manager, model_manager, trained_blocks_dir_path, 
                                            test_sample_num, model_input_size, device)
    edge_block_profiler.profile_all_blocks()

    optimal_runtime = OptimalRuntime(trained_blocks_dir_path, model_input_size,
                                     block_manager, model_manager, device)
    
    model_size_min = get_model_size(torch.load(os.path.join(compressed_blocks_dir_path, 'model_frame.pt')))/1024**2
    model_size_max = get_model_size(teacher_detector)/1024**2 + 1
    gen_series_legodnn_models(deadline=100, model_size_search_range=[model_size_min, model_size_max], target_model_num=100, optimal_runtime=optimal_runtime, descendant_models_save_path=descendant_models_dir_path, device=device)
2023-05-15 21:54:11,365 - log.py[40] - DEBUG: entry file content: ---------------------------------
2023-05-15 21:54:25,272 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-0.pt
2023-05-15 21:54:25,272 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(32, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:26,182 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-4.pt
2023-05-15 21:54:26,183 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 20, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(20, 20, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(20, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(20, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:27,116 - block_extractor.py[28] - INFO: save pruned block block-0 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-0-8.pt
2023-05-15 21:54:27,117 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (0): Conv2d(3, 7, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (1): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (2): ReLU()
      (3): Conv2d(7, 7, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (4): BatchNorm2d(7, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (5): ReLU()
      (6): Conv2d(7, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:27,158 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-0.pt
2023-05-15 21:54:27,158 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:28,559 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-4.pt
2023-05-15 21:54:28,559 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(39, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:30,044 - block_extractor.py[28] - INFO: save pruned block block-1 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-1-8.pt
2023-05-15 21:54:30,044 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (stem): ModuleDict(
      (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (8): ReLU()
    )
    (maxpool): MaxPool2d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
    (layer1): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(13, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:30,080 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-0.pt
2023-05-15 21:54:30,080 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:30,736 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-4.pt
2023-05-15 21:54:30,737 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 39, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(39, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(39, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:31,381 - block_extractor.py[28] - INFO: save pruned block block-2 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-2-8.pt
2023-05-15 21:54:31,381 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(64, 13, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(13, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(13, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:31,424 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-0.pt
2023-05-15 21:54:31,425 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:32,228 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-4.pt
2023-05-15 21:54:32,229 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 77, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(77, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:32,957 - block_extractor.py[28] - INFO: save pruned block block-3 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-3-8.pt
2023-05-15 21:54:32,957 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer1): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer2): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(64, 26, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(26, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(64, 128, kernel_size=(1, 1), stride=(2, 2), bias=False)
          (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:32,996 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-0.pt
2023-05-15 21:54:32,996 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:33,496 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-4.pt
2023-05-15 21:54:33,496 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(77, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:34,161 - block_extractor.py[28] - INFO: save pruned block block-4 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-4-8.pt
2023-05-15 21:54:34,161 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(128, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(26, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:34,220 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-0.pt
2023-05-15 21:54:34,220 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:35,019 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-4.pt
2023-05-15 21:54:35,019 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 154, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(154, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(154, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:35,789 - block_extractor.py[28] - INFO: save pruned block block-5 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-5-8.pt
2023-05-15 21:54:35,789 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer2): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer3): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(128, 52, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(52, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:35,830 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-0.pt
2023-05-15 21:54:35,831 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:36,675 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-4.pt
2023-05-15 21:54:36,675 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 154, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(154, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(154, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:37,558 - block_extractor.py[28] - INFO: save pruned block block-6 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-6-8.pt
2023-05-15 21:54:37,558 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(256, 52, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(52, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(52, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:37,615 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-0.pt
2023-05-15 21:54:37,615 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:39,114 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-4.pt
2023-05-15 21:54:39,115 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 308, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(308, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(308, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:40,686 - block_extractor.py[28] - INFO: save pruned block block-7 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-7-8.pt
2023-05-15 21:54:40,686 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer3): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
    (layer4): ModuleDict(
      (0): ModuleDict(
        (conv1): Conv2d(256, 103, kernel_size=(3, 3), stride=(1, 1), padding=(2, 2), dilation=(2, 2), bias=False)
        (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(103, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (downsample): ModuleDict(
          (0): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
      )
    )
  )
)
2023-05-15 21:54:40,761 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-0.pt
2023-05-15 21:54:40,761 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:42,537 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-4.pt
2023-05-15 21:54:42,537 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 308, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(308, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(308, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:44,283 - block_extractor.py[28] - INFO: save pruned block block-8 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-8-8.pt
2023-05-15 21:54:44,283 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (0): ModuleDict(
        (relu): ReLU()
      )
      (1): ModuleDict(
        (conv1): Conv2d(512, 103, kernel_size=(3, 3), stride=(1, 1), padding=(4, 4), dilation=(4, 4), bias=False)
        (bn1): BatchNorm2d(103, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (relu): ReLU()
        (conv2): Conv2d(103, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
  )
)
2023-05-15 21:54:44,330 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.0) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-0.pt
2023-05-15 21:54:44,330 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(640, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:45,709 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.4) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-4.pt
2023-05-15 21:54:45,709 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(77, 77, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(77, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(589, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:47,057 - block_extractor.py[28] - INFO: save pruned block block-9 (sparsity 0.8) in results/legodnn/semantic_segmentation/fcn_r18_d8_512_512_b16_voc2012_0-125/compressed/block-9-8.pt
2023-05-15 21:54:47,057 - block_extractor.py[29] - DEBUG: LegoDNNBlock(
  (backbone): ModuleDict(
    (layer4): ModuleDict(
      (1): ModuleDict(
        (relu): ReLU()
      )
    )
  )
  (decode_head): ModuleDict(
    (convs): ModuleDict(
      (0): ModuleDict(
        (conv): Conv2d(512, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
      (1): ModuleDict(
        (conv): Conv2d(26, 26, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (bn): BatchNorm2d(26, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        (activate): ReLU()
      )
    )
    (conv_cat): ModuleDict(
      (conv): Conv2d(538, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
  )
)
2023-05-15 21:54:47,386 - block_trainer.py[183] - INFO: start block training...
2023-05-15 21:57:12,390 - block_trainer.py[357] - INFO: epoch 0 (145.004404s, 30 blocks still need training), blocks loss: 
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-0 | 0.01252937 | 0.01088646 | 0.00904936 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-1 | 0.61330434 | 0.65394976 | 0.76786741 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-2 | 0.94385660 | 0.94495838 | 0.94305017 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-3 | 0.19739157 | 0.22494652 | 0.27767228 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-4 | 0.96261524 | 0.96302585 | 0.95362860 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-5 | 0.15091934 | 0.16658342 | 0.20295550 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-6 | 0.96882934 | 0.96929160 | 0.96585563 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-7 | 0.11091766 | 0.11838427 | 0.13957027 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-8 | 0.97140039 | 0.97171548 | 0.97038764 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+
+---------+------------+------------+------------+
|         |    0.0     |    0.4     |    0.8     |
+---------+------------+------------+------------+
| block-9 | 0.07222224 | 0.05243900 | 0.02315278 |
|         |    (-)     |    (-)     |    (-)     |
+---------+------------+------------+------------+

2023-05-15 21:59:39,395 - block_trainer.py[357] - INFO: epoch 1 (147.004755s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00200334   |   0.00203301   |   0.00214128   |
|         | (↓ 0.01052603) | (↓ 0.00885344) | (↓ 0.00690807) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.41760505   |   0.43435161   |   0.49155842   |
|         | (↓ 0.19569929) | (↓ 0.21959815) | (↓ 0.27630899) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.89172951   |   0.89216572   |   0.78782940   |
|         | (↓ 0.05212709) | (↓ 0.05279265) | (↓ 0.15522077) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.04527216   |   0.05138490   |   0.06504568   |
|         | (↓ 0.15211940) | (↓ 0.17356162) | (↓ 0.21262660) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.91027290   |   0.91044505   |   0.91272588   |
|         | (↓ 0.05234234) | (↓ 0.05258080) | (↓ 0.04090272) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.02890180   |   0.03304111   |   0.04235641   |
|         | (↓ 0.12201754) | (↓ 0.13354231) | (↓ 0.16059909) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.91692414   |   0.91761514   |   0.91859608   |
|         | (↓ 0.05190520) | (↓ 0.05167646) | (↓ 0.04725955) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.01935391   |   0.02119429   |   0.02486484   |
|         | (↓ 0.09156374) | (↓ 0.09718998) | (↓ 0.11470542) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.91913409   |   0.91952967   |   0.92035139   |
|         | (↓ 0.05226630) | (↓ 0.05218582) | (↓ 0.05003625) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00439953   |   0.00389249   |   0.00191976   |
|         | (↓ 0.06782271) | (↓ 0.04854652) | (↓ 0.02123302) |
+---------+----------------+----------------+----------------+

2023-05-15 22:02:06,880 - block_trainer.py[357] - INFO: epoch 2 (147.480796s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00134475   |   0.00144131   |   0.00176011   |
|         | (↓ 0.00065859) | (↓ 0.00059171) | (↓ 0.00038117) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.34874926   |   0.36183904   |   0.40387729   |
|         | (↓ 0.06885578) | (↓ 0.07251257) | (↓ 0.08768113) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.84209397   |   0.84220326   |   0.64835201   |
|         | (↓ 0.04963553) | (↓ 0.04996246) | (↓ 0.13947739) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.02635646   |   0.03000560   |   0.03939975   |
|         | (↓ 0.01891570) | (↓ 0.02137930) | (↓ 0.02564594) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.86014074   |   0.86191735   |   0.86595719   |
|         | (↓ 0.05013216) | (↓ 0.04852770) | (↓ 0.04676869) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.01715361   |   0.01946696   |   0.02568864   |
|         | (↓ 0.01174819) | (↓ 0.01357415) | (↓ 0.01666777) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.86687426   |   0.86715225   |   0.86863296   |
|         | (↓ 0.05004988) | (↓ 0.05046289) | (↓ 0.04996312) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.01091998   |   0.01200567   |   0.01412017   |
|         | (↓ 0.00843394) | (↓ 0.00918862) | (↓ 0.01074467) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.86878260   |   0.86901156   |   0.86998681   |
|         | (↓ 0.05035148) | (↓ 0.05051811) | (↓ 0.05036458) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00215291   |   0.00184148   |   0.00088623   |
|         | (↓ 0.00224662) | (↓ 0.00205101) | (↓ 0.00103353) |
+---------+----------------+----------------+----------------+

2023-05-15 22:04:34,038 - block_trainer.py[357] - INFO: epoch 3 (147.156618s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00125323   |   0.00132830   |   0.00164213   |
|         | (↓ 0.00009152) | (↓ 0.00011301) | (↓ 0.00011798) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.29846832   |   0.30960042   |   0.34580993   |
|         | (↓ 0.05028094) | (↓ 0.05223862) | (↓ 0.05806736) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.79435706   |   0.79613851   |   0.56483528   |
|         | (↓ 0.04773691) | (↓ 0.04606475) | (↓ 0.08351673) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01848323   |   0.02076828   |   0.02733421   |
|         | (↓ 0.00787323) | (↓ 0.00923733) | (↓ 0.01206554) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.81262138   |   0.81410764   |   0.81771417   |
|         | (↓ 0.04751937) | (↓ 0.04780971) | (↓ 0.04824302) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.01214373   |   0.01378627   |   0.01821411   |
|         | (↓ 0.00500988) | (↓ 0.00568070) | (↓ 0.00747452) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.81855878   |   0.81885544   |   0.82025108   |
|         | (↓ 0.04831548) | (↓ 0.04829681) | (↓ 0.04838187) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00770509   |   0.00839918   |   0.00982656   |
|         | (↓ 0.00321489) | (↓ 0.00360649) | (↓ 0.00429362) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.82047276   |   0.82068662   |   0.82162825   |
|         | (↓ 0.04830984) | (↓ 0.04832494) | (↓ 0.04835856) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00144588   |   0.00117041   |   0.00054634   |
|         | (↓ 0.00070703) | (↓ 0.00067108) | (↓ 0.00033990) |
+---------+----------------+----------------+----------------+

2023-05-15 22:07:01,481 - block_trainer.py[357] - INFO: epoch 4 (147.443400s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00092585   |   0.00104159   |   0.00145366   |
|         | (↓ 0.00032738) | (↓ 0.00028671) | (↓ 0.00018847) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.25417556   |   0.26432082   |   0.29707103   |
|         | (↓ 0.04429276) | (↓ 0.04527960) | (↓ 0.04873890) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.74855097   |   0.75282768   |   0.47305464   |
|         | (↓ 0.04580609) | (↓ 0.04331083) | (↓ 0.09178064) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01350529   |   0.01504022   |   0.01956247   |
|         | (↓ 0.00497793) | (↓ 0.00572806) | (↓ 0.00777174) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.76730226   |   0.76794506   |   0.77224916   |
|         | (↓ 0.04531912) | (↓ 0.04616258) | (↓ 0.04546501) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00882091   |   0.00998788   |   0.01335261   |
|         | (↓ 0.00332282) | (↓ 0.00379839) | (↓ 0.00486150) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.77223125   |   0.77266615   |   0.77407533   |
|         | (↓ 0.04632753) | (↓ 0.04618929) | (↓ 0.04617575) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00552412   |   0.00606873   |   0.00707659   |
|         | (↓ 0.00218097) | (↓ 0.00233045) | (↓ 0.00274996) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.77416773   |   0.77439159   |   0.77527366   |
|         | (↓ 0.04630503) | (↓ 0.04629503) | (↓ 0.04635459) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00102495   |   0.00081760   |   0.00037425   |
|         | (↓ 0.00042093) | (↓ 0.00035280) | (↓ 0.00017209) |
+---------+----------------+----------------+----------------+

2023-05-15 22:09:28,980 - block_trainer.py[357] - INFO: epoch 5 (147.498173s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+----------------+
|         |       0.0       |       0.4       |      0.8       |
+---------+-----------------+-----------------+----------------+
| block-0 |    0.00111709   |    0.00111287   |   0.00138395   |
|         | (↓ -0.00019124) | (↓ -0.00007127) | (↓ 0.00006971) |
+---------+-----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.21944146   |   0.22897725   |   0.25977464   |
|         | (↓ 0.03473411) | (↓ 0.03534358) | (↓ 0.03729639) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.70511679   |   0.70896573   |   0.42925050   |
|         | (↓ 0.04343418) | (↓ 0.04386195) | (↓ 0.04380415) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.01076781   |   0.01183498   |   0.01516662   |
|         | (↓ 0.00273748) | (↓ 0.00320524) | (↓ 0.00439585) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.72311718   |   0.72401622   |   0.72758160   |
|         | (↓ 0.04418508) | (↓ 0.04392883) | (↓ 0.04466757) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00710036   |   0.00800140   |   0.01076190   |
|         | (↓ 0.00172055) | (↓ 0.00198648) | (↓ 0.00259071) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.72794831   |   0.72824558   |   0.72961269   |
|         | (↓ 0.04428294) | (↓ 0.04442056) | (↓ 0.04446264) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00440951   |   0.00480224   |   0.00556450   |
|         | (↓ 0.00111461) | (↓ 0.00126648) | (↓ 0.00151209) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.72979261   |   0.72993482   |   0.73088689   |
|         | (↓ 0.04437513) | (↓ 0.04445677) | (↓ 0.04438676) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00079740   |   0.00062559   |   0.00028367   |
|         | (↓ 0.00022755) | (↓ 0.00019201) | (↓ 0.00009058) |
+---------+----------------+----------------+----------------+

2023-05-15 22:11:56,529 - block_trainer.py[357] - INFO: epoch 6 (147.548096s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00091385   |   0.00096328   |   0.00128411   |
|         | (↓ 0.00020324) | (↓ 0.00014958) | (↓ 0.00009984) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.19079179   |   0.20021959   |   0.22960943   |
|         | (↓ 0.02864966) | (↓ 0.02875766) | (↓ 0.03016521) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.66337901   |   0.66698830   |   0.39536554   |
|         | (↓ 0.04173778) | (↓ 0.04197743) | (↓ 0.03388496) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00926499   |   0.01013263   |   0.01272438   |
|         | (↓ 0.00150281) | (↓ 0.00170235) | (↓ 0.00244224) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.68101159   |   0.68153581   |   0.68469604   |
|         | (↓ 0.04210559) | (↓ 0.04248041) | (↓ 0.04288555) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00608517   |   0.00686993   |   0.00931809   |
|         | (↓ 0.00101520) | (↓ 0.00113147) | (↓ 0.00144380) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.68559762   |   0.68579136   |   0.68687383   |
|         | (↓ 0.04235068) | (↓ 0.04245422) | (↓ 0.04273885) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00382088   |   0.00413491   |   0.00476545   |
|         | (↓ 0.00058863) | (↓ 0.00066734) | (↓ 0.00079906) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.68734811   |   0.68741603   |   0.68838941   |
|         | (↓ 0.04244450) | (↓ 0.04251879) | (↓ 0.04249748) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00066186   |   0.00051911   |   0.00023640   |
|         | (↓ 0.00013555) | (↓ 0.00010648) | (↓ 0.00004727) |
+---------+----------------+----------------+----------------+

2023-05-15 22:14:23,810 - block_trainer.py[357] - INFO: epoch 7 (147.281137s, 30 blocks still need training), blocks loss: 
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-0 |   0.00079729   |   0.00087044   |   0.00118850   |
|         | (↓ 0.00011656) | (↓ 0.00009284) | (↓ 0.00009561) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.16288231   |   0.17190019   |   0.19957676   |
|         | (↓ 0.02790948) | (↓ 0.02831940) | (↓ 0.03003267) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.62383384   |   0.62751032   |   0.36583107   |
|         | (↓ 0.03954517) | (↓ 0.03947798) | (↓ 0.02953447) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00767783   |   0.00838644   |   0.01045569   |
|         | (↓ 0.00158717) | (↓ 0.00174619) | (↓ 0.00226869) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.64069991   |   0.64111620   |   0.64401755   |
|         | (↓ 0.04031168) | (↓ 0.04041961) | (↓ 0.04067850) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00502658   |   0.00563839   |   0.00764393   |
|         | (↓ 0.00105859) | (↓ 0.00123153) | (↓ 0.00167416) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.64494399   |   0.64519093   |   0.64604788   |
|         | (↓ 0.04065363) | (↓ 0.04060043) | (↓ 0.04082595) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00318004   |   0.00344883   |   0.00395157   |
|         | (↓ 0.00064084) | (↓ 0.00068607) | (↓ 0.00081387) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.64666377   |   0.64679328   |   0.64767395   |
|         | (↓ 0.04068434) | (↓ 0.04062275) | (↓ 0.04071545) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00054036   |   0.00042026   |   0.00019321   |
|         | (↓ 0.00012150) | (↓ 0.00009886) | (↓ 0.00004319) |
+---------+----------------+----------------+----------------+

2023-05-15 22:16:51,025 - block_trainer.py[357] - INFO: epoch 8 (147.214067s, 30 blocks still need training), blocks loss: 
+---------+----------------+-----------------+----------------+
|         |      0.0       |       0.4       |      0.8       |
+---------+----------------+-----------------+----------------+
| block-0 |   0.00077895   |    0.00087055   |   0.00118076   |
|         | (↓ 0.00001833) | (↓ -0.00000011) | (↓ 0.00000774) |
+---------+----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.14062537   |   0.14939814   |   0.17607302   |
|         | (↓ 0.02225694) | (↓ 0.02250206) | (↓ 0.02350374) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.58572069   |   0.58944544   |   0.31916975   |
|         | (↓ 0.03811315) | (↓ 0.03806489) | (↓ 0.04666132) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00657291   |   0.00716450   |   0.00884466   |
|         | (↓ 0.00110492) | (↓ 0.00122193) | (↓ 0.00161103) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.60205739   |   0.60218980   |   0.60506198   |
|         | (↓ 0.03864252) | (↓ 0.03892641) | (↓ 0.03895556) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00429894   |   0.00482414   |   0.00648885   |
|         | (↓ 0.00072765) | (↓ 0.00081425) | (↓ 0.00115508) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.60611233   |   0.60628881   |   0.60735129   |
|         | (↓ 0.03883166) | (↓ 0.03890212) | (↓ 0.03869659) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00271364   |   0.00292971   |   0.00336858   |
|         | (↓ 0.00046640) | (↓ 0.00051912) | (↓ 0.00058299) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.60780266   |   0.60797778   |   0.60874162   |
|         | (↓ 0.03886111) | (↓ 0.03881551) | (↓ 0.03893234) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00046131   |   0.00035915   |   0.00016838   |
|         | (↓ 0.00007904) | (↓ 0.00006110) | (↓ 0.00002483) |
+---------+----------------+----------------+----------------+

2023-05-15 22:19:18,272 - block_trainer.py[357] - INFO: epoch 9 (147.247394s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+-----------------+
|         |       0.0       |       0.4       |       0.8       |
+---------+-----------------+-----------------+-----------------+
| block-0 |    0.00082208   |    0.00090158   |    0.00119786   |
|         | (↓ -0.00004312) | (↓ -0.00003103) | (↓ -0.00001709) |
+---------+-----------------+-----------------+-----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.12101712   |   0.12958543   |   0.15527136   |
|         | (↓ 0.01960825) | (↓ 0.01981271) | (↓ 0.02080166) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.54983511   |   0.55164781   |   0.27692337   |
|         | (↓ 0.03588558) | (↓ 0.03779763) | (↓ 0.04224638) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00569662   |   0.00618772   |   0.00759212   |
|         | (↓ 0.00087628) | (↓ 0.00097678) | (↓ 0.00125254) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.56475934   |   0.56530789   |   0.56795133   |
|         | (↓ 0.03729805) | (↓ 0.03688190) | (↓ 0.03711066) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00375493   |   0.00419387   |   0.00558349   |
|         | (↓ 0.00054401) | (↓ 0.00063028) | (↓ 0.00090535) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.56895460   |   0.56909435   |   0.57029020   |
|         | (↓ 0.03715773) | (↓ 0.03719446) | (↓ 0.03706109) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00237763   |   0.00256027   |   0.00293447   |
|         | (↓ 0.00033601) | (↓ 0.00036944) | (↓ 0.00043411) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.57059173   |   0.57083800   |   0.57150388   |
|         | (↓ 0.03721093) | (↓ 0.03713978) | (↓ 0.03723774) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00040396   |   0.00031380   |   0.00014668   |
|         | (↓ 0.00005736) | (↓ 0.00004535) | (↓ 0.00002170) |
+---------+----------------+----------------+----------------+

2023-05-15 22:21:45,569 - block_trainer.py[357] - INFO: epoch 10 (147.296097s, 30 blocks still need training), blocks loss: 
+---------+-----------------+-----------------+----------------+
|         |       0.0       |       0.4       |      0.8       |
+---------+-----------------+-----------------+----------------+
| block-0 |    0.00092131   |    0.00095233   |   0.00118297   |
|         | (↓ -0.00009923) | (↓ -0.00005075) | (↓ 0.00001488) |
+---------+-----------------+-----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-1 |   0.10359513   |   0.11210641   |   0.13760881   |
|         | (↓ 0.01742199) | (↓ 0.01747903) | (↓ 0.01766255) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-2 |   0.51612485   |   0.51780363   |   0.26535880   |
|         | (↓ 0.03371026) | (↓ 0.03384417) | (↓ 0.01156457) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-3 |   0.00527820   |   0.00574812   |   0.00698423   |
|         | (↓ 0.00041842) | (↓ 0.00043961) | (↓ 0.00060789) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-4 |   0.52971971   |   0.53021505   |   0.53206012   |
|         | (↓ 0.03503964) | (↓ 0.03509284) | (↓ 0.03589121) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-5 |   0.00346066   |   0.00387016   |   0.00514312   |
|         | (↓ 0.00029427) | (↓ 0.00032371) | (↓ 0.00044037) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-6 |   0.53355682   |   0.53373215   |   0.53478638   |
|         | (↓ 0.03539777) | (↓ 0.03536220) | (↓ 0.03550382) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-7 |   0.00218342   |   0.00234784   |   0.00269454   |
|         | (↓ 0.00019421) | (↓ 0.00021243) | (↓ 0.00023993) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-8 |   0.53510288   |   0.53519331   |   0.53584063   |
|         | (↓ 0.03548885) | (↓ 0.03564469) | (↓ 0.03566325) |
+---------+----------------+----------------+----------------+
+---------+----------------+----------------+----------------+
|         |      0.0       |      0.4       |      0.8       |
+---------+----------------+----------------+----------------+
| block-9 |   0.00035470   |   0.00027240   |   0.00012829   |
|         | (↓ 0.00004926) | (↓ 0.00004140) | (↓ 0.00001838) |
+---------+----------------+----------------+----------------+

2023-05-15 22:21:45,665 - server_block_profiler.py[193] - INFO: raw block info: {"index": 0, "id": "block-0", "size": 135422, "FLOPs": 7507804160.0, "param": 28640.0, "input_size": [3, 512, 1024], "output_size": [64, 256, 512]}
2023-05-15 22:21:45,753 - server_block_profiler.py[193] - INFO: raw block info: {"index": 1, "id": "block-1", "size": 320114, "FLOPs": 4882169856.0, "param": 74112.0, "input_size": [64, 256, 512], "output_size": [64, 128, 256]}
2023-05-15 22:21:45,787 - server_block_profiler.py[193] - INFO: raw block info: {"index": 2, "id": "block-2", "size": 317185, "FLOPs": 4848615424.0, "param": 73984.0, "input_size": [64, 128, 256], "output_size": [64, 128, 256]}
2023-05-15 22:21:45,821 - server_block_profiler.py[193] - INFO: raw block info: {"index": 3, "id": "block-3", "size": 946351, "FLOPs": 3770679296.0, "param": 230144.0, "input_size": [64, 128, 256], "output_size": [128, 64, 128]}
2023-05-15 22:21:45,848 - server_block_profiler.py[193] - INFO: raw block info: {"index": 4, "id": "block-4", "size": 1203969, "FLOPs": 4840226816.0, "param": 295424.0, "input_size": [128, 64, 128], "output_size": [128, 64, 128]}
2023-05-15 22:21:45,879 - server_block_profiler.py[193] - INFO: raw block info: {"index": 5, "id": "block-5", "size": 3705071, "FLOPs": 15057551360.0, "param": 919040.0, "input_size": [128, 64, 128], "output_size": [256, 64, 128]}
2023-05-15 22:21:45,918 - server_block_profiler.py[193] - INFO: raw block info: {"index": 6, "id": "block-6", "size": 4747009, "FLOPs": 19344130048.0, "param": 1180672.0, "input_size": [256, 64, 128], "output_size": [256, 64, 128]}
2023-05-15 22:21:45,973 - server_block_profiler.py[193] - INFO: raw block info: {"index": 7, "id": "block-7", "size": 14727407, "FLOPs": 60179873792.0, "param": 3673088.0, "input_size": [256, 64, 128], "output_size": [512, 64, 128]}
2023-05-15 22:21:46,050 - server_block_profiler.py[193] - INFO: raw block info: {"index": 8, "id": "block-8", "size": 18910977, "FLOPs": 77342965760.0, "param": 4720640.0, "input_size": [512, 64, 128], "output_size": [512, 64, 128]}
2023-05-15 22:21:46,106 - server_block_profiler.py[193] - INFO: raw block info: {"index": 9, "id": "block-9", "size": 5923838, "FLOPs": 24167579648.0, "param": 1475072.0, "input_size": [512, 64, 128], "output_size": [128, 64, 128]}
2023-05-15 22:22:25,959 - server_block_profiler.py[264] - INFO: profile blocks acc drop
2023-05-15 22:25:35,790 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:26:11,960 - server_block_profiler.py[70] - INFO: get -1-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:26:48,379 - server_block_profiler.py[70] - INFO: get -1-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:27:11,287 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:27:47,375 - server_block_profiler.py[70] - INFO: get -1-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:28:22,564 - server_block_profiler.py[70] - INFO: get -1-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:28:45,257 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:29:58,219 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:30:45,304 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:31:21,814 - server_block_profiler.py[70] - INFO: get 0--1-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:31:57,470 - server_block_profiler.py[70] - INFO: get 8--1-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:32:20,756 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:32:57,863 - server_block_profiler.py[70] - INFO: get 0--1-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:33:38,403 - server_block_profiler.py[70] - INFO: get 8--1-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:33:38,403 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:33:38,403 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:35:32,075 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:36:59,362 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:37:50,585 - server_block_profiler.py[70] - INFO: get 0-0--1-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:38:45,480 - server_block_profiler.py[70] - INFO: get 8-8--1-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:39:22,068 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:40:22,452 - server_block_profiler.py[70] - INFO: get 0-0--1-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:41:17,143 - server_block_profiler.py[70] - INFO: get 8-8--1-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:41:17,144 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:41:17,145 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:43:21,510 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:44:42,527 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:45:38,112 - server_block_profiler.py[70] - INFO: get 0-0-0--1-0-0-0-0-0-0 metrics in cache
2023-05-15 22:46:28,424 - server_block_profiler.py[70] - INFO: get 8-8-8--1-8-8-8-8-8-8 metrics in cache
2023-05-15 22:47:14,139 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:48:11,303 - server_block_profiler.py[70] - INFO: get 0-0-0--1-0-0-0-0-0-0 metrics in cache
2023-05-15 22:49:06,896 - server_block_profiler.py[70] - INFO: get 8-8-8--1-8-8-8-8-8-8 metrics in cache
2023-05-15 22:49:06,896 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:49:06,897 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:51:08,280 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 22:52:42,035 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:53:42,575 - server_block_profiler.py[70] - INFO: get 0-0-0-0--1-0-0-0-0-0 metrics in cache
2023-05-15 22:54:42,045 - server_block_profiler.py[70] - INFO: get 8-8-8-8--1-8-8-8-8-8 metrics in cache
2023-05-15 22:55:33,463 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:56:31,149 - server_block_profiler.py[70] - INFO: get 0-0-0-0--1-0-0-0-0-0 metrics in cache
2023-05-15 22:57:33,012 - server_block_profiler.py[70] - INFO: get 8-8-8-8--1-8-8-8-8-8 metrics in cache
2023-05-15 22:57:33,013 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 22:57:33,013 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 22:59:35,431 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 23:01:06,805 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:02:01,500 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0--1-0-0-0-0 metrics in cache
2023-05-15 23:03:00,563 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8--1-8-8-8-8 metrics in cache
2023-05-15 23:03:38,147 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:04:35,591 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0--1-0-0-0-0 metrics in cache
2023-05-15 23:05:32,407 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8--1-8-8-8-8 metrics in cache
2023-05-15 23:05:32,407 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 23:05:32,407 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:07:30,460 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 23:09:05,548 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:10:10,774 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0--1-0-0-0 metrics in cache
2023-05-15 23:11:09,812 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8--1-8-8-8 metrics in cache
2023-05-15 23:11:59,816 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:12:58,504 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0--1-0-0-0 metrics in cache
2023-05-15 23:13:55,642 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8--1-8-8-8 metrics in cache
2023-05-15 23:13:55,642 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 23:13:55,643 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:15:52,355 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 23:17:21,407 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:18:21,445 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0--1-0-0 metrics in cache
2023-05-15 23:19:20,342 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8--1-8-8 metrics in cache
2023-05-15 23:20:06,897 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:20:59,065 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0--1-0-0 metrics in cache
2023-05-15 23:21:51,320 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8--1-8-8 metrics in cache
2023-05-15 23:21:51,321 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 23:21:51,321 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:23:49,335 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 23:25:26,460 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:26:24,018 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0--1-0 metrics in cache
2023-05-15 23:27:21,124 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8--1-8 metrics in cache
2023-05-15 23:28:06,886 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:28:59,644 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0--1-0 metrics in cache
2023-05-15 23:29:51,501 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8--1-8 metrics in cache
2023-05-15 23:29:51,502 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 23:29:51,502 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:31:42,720 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0-0 metrics in cache
2023-05-15 23:33:13,013 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:34:10,861 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0--1 metrics in cache
2023-05-15 23:35:07,239 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8--1 metrics in cache
2023-05-15 23:35:45,427 - server_block_profiler.py[70] - INFO: get -1--1--1--1--1--1--1--1--1--1 metrics in cache
2023-05-15 23:36:42,446 - server_block_profiler.py[70] - INFO: get 0-0-0-0-0-0-0-0-0--1 metrics in cache
2023-05-15 23:37:39,326 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8--1 metrics in cache
2023-05-15 23:37:39,327 - server_block_profiler.py[70] - INFO: get 8-8-8-8-8-8-8-8-8-8 metrics in cache
2023-05-15 23:37:39,355 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.0) acc drop: -7.228014483236696e-20
2023-05-15 23:37:39,364 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,364 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.4) acc drop: -6.66666666666667e-05
2023-05-15 23:37:39,371 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.4) size drop: 51584B (0.049MB), FLOPs drop: 3381.658M, param drop: 0.013M
2023-05-15 23:37:39,371 - server_block_profiler.py[307] - INFO: block block-0 (sparsity 0.8) acc drop: -6.666666666666663e-05
2023-05-15 23:37:39,377 - server_block_profiler.py[335] - INFO: block block-0 (sparsity 0.8) size drop: 96064B (0.092MB), FLOPs drop: 6278.349M, param drop: 0.024M
2023-05-15 23:37:39,439 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.0) acc drop: 0.00036666666666666683
2023-05-15 23:37:39,447 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,447 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.4) acc drop: 0.00036666666666666683
2023-05-15 23:37:39,455 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.4) size drop: 115520B (0.110MB), FLOPs drop: 1890.714M, param drop: 0.029M
2023-05-15 23:37:39,455 - server_block_profiler.py[307] - INFO: block block-1 (sparsity 0.8) acc drop: 0.00036666666666666683
2023-05-15 23:37:39,463 - server_block_profiler.py[335] - INFO: block block-1 (sparsity 0.8) size drop: 235904B (0.225MB), FLOPs drop: 3857.056M, param drop: 0.059M
2023-05-15 23:37:39,477 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.0) acc drop: 0.0002000000000000001
2023-05-15 23:37:39,484 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,484 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.4) acc drop: 6.666666666666676e-05
2023-05-15 23:37:39,495 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.4) size drop: 115520B (0.110MB), FLOPs drop: 1890.714M, param drop: 0.029M
2023-05-15 23:37:39,495 - server_block_profiler.py[307] - INFO: block block-2 (sparsity 0.8) acc drop: 0.0002
2023-05-15 23:37:39,504 - server_block_profiler.py[335] - INFO: block block-2 (sparsity 0.8) size drop: 235840B (0.225MB), FLOPs drop: 3857.056M, param drop: 0.059M
2023-05-15 23:37:39,522 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.0) acc drop: -0.00020000000000000017
2023-05-15 23:37:39,533 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,533 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.4) acc drop: -0.0003
2023-05-15 23:37:39,542 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.4) size drop: 353344B (0.337MB), FLOPs drop: 1445.560M, param drop: 0.088M
2023-05-15 23:37:39,542 - server_block_profiler.py[307] - INFO: block block-3 (sparsity 0.8) acc drop: -0.0003333333333333333
2023-05-15 23:37:39,554 - server_block_profiler.py[335] - INFO: block block-3 (sparsity 0.8) size drop: 706624B (0.674MB), FLOPs drop: 2891.121M, param drop: 0.176M
2023-05-15 23:37:39,569 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.0) acc drop: 0.0003333333333333333
2023-05-15 23:37:39,583 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,584 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.4) acc drop: 0.00046666666666666666
2023-05-15 23:37:39,598 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.4) size drop: 470848B (0.449MB), FLOPs drop: 1926.857M, param drop: 0.118M
2023-05-15 23:37:39,599 - server_block_profiler.py[307] - INFO: block block-4 (sparsity 0.8) acc drop: 0.0003000000000000001
2023-05-15 23:37:39,611 - server_block_profiler.py[335] - INFO: block block-4 (sparsity 0.8) size drop: 941632B (0.898MB), FLOPs drop: 3853.713M, param drop: 0.235M
2023-05-15 23:37:39,626 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.0) acc drop: -0.00010000000000000005
2023-05-15 23:37:39,651 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,652 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.4) acc drop: -0.0007666666666666664
2023-05-15 23:37:39,674 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.4) size drop: 1411712B (1.346MB), FLOPs drop: 5778.899M, param drop: 0.353M
2023-05-15 23:37:39,675 - server_block_profiler.py[307] - INFO: block block-5 (sparsity 0.8) acc drop: -0.0007999999999999998
2023-05-15 23:37:39,691 - server_block_profiler.py[335] - INFO: block block-5 (sparsity 0.8) size drop: 2823296B (2.693MB), FLOPs drop: 11557.798M, param drop: 0.705M
2023-05-15 23:37:39,706 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.0) acc drop: 0.0006666666666666665
2023-05-15 23:37:39,721 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,722 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.4) acc drop: -0.0002
2023-05-15 23:37:39,733 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.4) size drop: 1881664B (1.794MB), FLOPs drop: 7704.084M, param drop: 0.470M
2023-05-15 23:37:39,734 - server_block_profiler.py[307] - INFO: block block-6 (sparsity 0.8) acc drop: -0.00016666666666666666
2023-05-15 23:37:39,743 - server_block_profiler.py[335] - INFO: block block-6 (sparsity 0.8) size drop: 3763264B (3.589MB), FLOPs drop: 15408.169M, param drop: 0.940M
2023-05-15 23:37:39,758 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.0) acc drop: -0.0016
2023-05-15 23:37:39,796 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,796 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.4) acc drop: -0.002466666666666667
2023-05-15 23:37:39,825 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.4) size drop: 5643328B (5.382MB), FLOPs drop: 23108.911M, param drop: 1.410M
2023-05-15 23:37:39,825 - server_block_profiler.py[307] - INFO: block block-7 (sparsity 0.8) acc drop: -0.0013999999999999996
2023-05-15 23:37:39,841 - server_block_profiler.py[335] - INFO: block block-7 (sparsity 0.8) size drop: 11314560B (10.790MB), FLOPs drop: 46331.101M, param drop: 2.828M
2023-05-15 23:37:39,870 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.0) acc drop: -0.0004333333333333335
2023-05-15 23:37:39,916 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:39,917 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.4) acc drop: -0.0014000000000000002
2023-05-15 23:37:39,958 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.4) size drop: 7523392B (7.175MB), FLOPs drop: 30809.653M, param drop: 1.880M
2023-05-15 23:37:39,958 - server_block_profiler.py[307] - INFO: block block-8 (sparsity 0.8) acc drop: -0.0005333333333333335
2023-05-15 23:37:39,979 - server_block_profiler.py[335] - INFO: block block-8 (sparsity 0.8) size drop: 15083840B (14.385MB), FLOPs drop: 61770.334M, param drop: 3.770M
2023-05-15 23:37:40,036 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.0) acc drop: -0.001
2023-05-15 23:37:40,063 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.0) size drop: 0B (0.000MB), FLOPs drop: 0.000M, param drop: 0.000M
2023-05-15 23:37:40,063 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.4) acc drop: -0.0008666666666666667
2023-05-15 23:37:40,084 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.4) size drop: 1553088B (1.481MB), FLOPs drop: 6357.959M, param drop: 0.388M
2023-05-15 23:37:40,084 - server_block_profiler.py[307] - INFO: block block-9 (sparsity 0.8) acc drop: -0.0003
2023-05-15 23:37:40,097 - server_block_profiler.py[335] - INFO: block block-9 (sparsity 0.8) size drop: 2918784B (2.784MB), FLOPs drop: 11948.851M, param drop: 0.729M
2023-05-15 23:37:40,290 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 0, "id": "block-0", "latency": 0.0013518454166559072}
2023-05-15 23:37:40,524 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 1, "id": "block-1", "latency": 0.0010723785913907564}
2023-05-15 23:37:40,646 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 2, "id": "block-2", "latency": 0.0008115283709305985}
2023-05-15 23:37:40,810 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 3, "id": "block-3", "latency": 0.0012049068304208607}
2023-05-15 23:37:40,948 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 4, "id": "block-4", "latency": 0.0008660435694914596}
2023-05-15 23:37:41,149 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 5, "id": "block-5", "latency": 0.001541418334153982}
2023-05-15 23:37:41,432 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 6, "id": "block-6", "latency": 0.0021190656075110808}
2023-05-15 23:37:42,154 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 7, "id": "block-7", "latency": 0.005446661398960994}
2023-05-15 23:37:43,075 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 8, "id": "block-8", "latency": 0.006738945931654711}
2023-05-15 23:37:43,418 - edge_block_profiler.py[64] - INFO: raw block info: {"index": 9, "id": "block-9", "latency": 0.002433482845012958}
2023-05-15 23:37:43,428 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
2023-05-15 23:37:43,434 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.0) from file
2023-05-15 23:37:43,440 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 23:37:43,445 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.0) from file
2023-05-15 23:37:43,452 - pure_runtime.py[42] - DEBUG: load 3th block (block-3) (sparsity 0.0) from file
2023-05-15 23:37:43,457 - pure_runtime.py[42] - DEBUG: load 4th block (block-4) (sparsity 0.0) from file
2023-05-15 23:37:43,466 - pure_runtime.py[42] - DEBUG: load 5th block (block-5) (sparsity 0.0) from file
2023-05-15 23:37:43,473 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.0) from file
2023-05-15 23:37:43,490 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.0) from file
2023-05-15 23:37:43,503 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.0) from file
2023-05-15 23:37:43,513 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 23:37:44,949 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 23:37:45,070 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.4) latency rel drop: 22.361% (0.001s -> 0.001s)
2023-05-15 23:37:45,181 - edge_block_profiler.py[126] - INFO: block block-0 (sparsity 0.8) latency rel drop: 28.841% (0.001s -> 0.001s)
2023-05-15 23:37:45,549 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 23:37:45,715 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.4) latency rel drop: -24.930% (0.001s -> 0.001s)
2023-05-15 23:37:45,853 - edge_block_profiler.py[126] - INFO: block block-1 (sparsity 0.8) latency rel drop: 6.232% (0.001s -> 0.001s)
2023-05-15 23:37:46,113 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 23:37:46,217 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.4) latency rel drop: 17.552% (0.001s -> 0.001s)
2023-05-15 23:37:46,362 - edge_block_profiler.py[126] - INFO: block block-2 (sparsity 0.8) latency rel drop: -1.015% (0.001s -> 0.001s)
2023-05-15 23:37:46,647 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 23:37:46,810 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.4) latency rel drop: -34.377% (0.001s -> 0.001s)
2023-05-15 23:37:47,000 - edge_block_profiler.py[126] - INFO: block block-3 (sparsity 0.8) latency rel drop: -39.648% (0.001s -> 0.001s)
2023-05-15 23:37:47,264 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.0) latency rel drop: 0.000% (0.001s -> 0.001s)
2023-05-15 23:37:47,368 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.4) latency rel drop: 19.665% (0.001s -> 0.001s)
2023-05-15 23:37:47,505 - edge_block_profiler.py[126] - INFO: block block-4 (sparsity 0.8) latency rel drop: -1.130% (0.001s -> 0.001s)
2023-05-15 23:37:47,931 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.0) latency rel drop: 0.000% (0.002s -> 0.002s)
2023-05-15 23:37:48,148 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.4) latency rel drop: -23.606% (0.002s -> 0.002s)
2023-05-15 23:37:48,288 - edge_block_profiler.py[126] - INFO: block block-5 (sparsity 0.8) latency rel drop: 35.285% (0.002s -> 0.001s)
2023-05-15 23:37:48,842 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.0) latency rel drop: 0.000% (0.002s -> 0.002s)
2023-05-15 23:37:49,041 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.4) latency rel drop: 26.857% (0.002s -> 0.002s)
2023-05-15 23:37:49,202 - edge_block_profiler.py[126] - INFO: block block-6 (sparsity 0.8) latency rel drop: 38.990% (0.002s -> 0.001s)
2023-05-15 23:37:50,649 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.0) latency rel drop: 0.000% (0.005s -> 0.005s)
2023-05-15 23:37:51,145 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.4) latency rel drop: 30.971% (0.005s -> 0.004s)
2023-05-15 23:37:51,382 - edge_block_profiler.py[126] - INFO: block block-7 (sparsity 0.8) latency rel drop: 66.280% (0.005s -> 0.002s)
2023-05-15 23:37:53,202 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.0) latency rel drop: 0.000% (0.007s -> 0.007s)
2023-05-15 23:37:53,813 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.4) latency rel drop: 32.928% (0.007s -> 0.005s)
2023-05-15 23:37:54,099 - edge_block_profiler.py[126] - INFO: block block-8 (sparsity 0.8) latency rel drop: 67.571% (0.007s -> 0.002s)
2023-05-15 23:37:54,770 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.0) latency rel drop: 0.000% (0.002s -> 0.002s)
2023-05-15 23:37:55,073 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.4) latency rel drop: 7.905% (0.002s -> 0.002s)
2023-05-15 23:37:55,293 - edge_block_profiler.py[126] - INFO: block block-9 (sparsity 0.8) latency rel drop: 27.270% (0.002s -> 0.002s)
2023-05-15 23:37:55,294 - optimal_runtime.py[21] - INFO: init adaptive model runtime
2023-05-15 23:37:55,306 - optimal_runtime.py[147] - INFO: load blocks metrics
2023-05-15 23:37:55,322 - optimal_runtime.py[176] - INFO: load model metrics
2023-05-15 23:37:55,327 - optimal_runtime.py[187] - INFO: load sparest blocks for initializing model
2023-05-15 23:37:55,327 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:55,331 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 23:37:55,336 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 23:37:55,340 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 23:37:55,347 - pure_runtime.py[42] - DEBUG: load 3th block (block-3) (sparsity 0.8) from file
2023-05-15 23:37:55,351 - pure_runtime.py[42] - DEBUG: load 4th block (block-4) (sparsity 0.8) from file
2023-05-15 23:37:55,356 - pure_runtime.py[42] - DEBUG: load 5th block (block-5) (sparsity 0.8) from file
2023-05-15 23:37:55,360 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 23:37:55,367 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.8) from file
2023-05-15 23:37:55,372 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.8) from file
2023-05-15 23:37:55,380 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 23:37:55,536 - gen_series_legodnn_models.py[17] - INFO: min model size: 0.613MB, max model size: 50.035MB
2023-05-15 23:37:55,538 - gen_series_legodnn_models.py[28] - INFO: target model size: 0.613MB
2023-05-15 23:37:55,538 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 642680.0B (0.613MB), try to adapt blocks
2023-05-15 23:37:55,541 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:55,620 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06730547332763671
2023-05-15 23:37:55,620 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009172800034284591, 0.001203552007675171, 0.0005865279883146286, 0.0007168960049748421, 0.004551967911422252, 0.001246431991457939, 0.0010396479964256287, 0.0019063040390610696, 0.0027324480414390563, 0.006053472198545934]
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.049
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.835
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.398
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.347
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.005 = 0.192
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.800
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.244
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.963
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.800
2023-05-15 23:37:55,621 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.006 = 0.292
2023-05-15 23:37:55,622 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8]),)
2023-05-15 23:37:55,623 - optimal_runtime.py[116] - INFO: avg ratio: 1.0127043468236827
2023-05-15 23:37:55,623 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010526101398002963
2023-05-15 23:37:55,624 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00128906 0.00128355 0.00058063 0.00051336 0.00450112 0.00192603
 0.00170406 0.00565328 0.00842601 0.00832325]
2023-05-15 23:37:55,629 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:55,955 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:55,955 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:37:55,959 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00128906 0.00128355 0.00058063 0.00051336 0.00450112 0.00192603
 0.00170406 0.00565328 0.00842601 0.00832325]
2023-05-15 23:37:55,962 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:56,351 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:56,353 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:56,354 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -56758460416.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.0027197230246225595,
  'esti_test_accuracy': 0.005033333333333332,
  'is_relaxed': True,
  'model_size': 13291841.0,
  'update_swap_mem_cost': 0,
  'update_swap_time_cost': 0.0003769397735595703}
2023-05-15 23:37:56,382 - gen_series_legodnn_models.py[28] - INFO: target model size: 1.112MB
2023-05-15 23:37:56,382 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 1166143.202020202B (1.112MB), try to adapt blocks
2023-05-15 23:37:56,384 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:56,601 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06645346832275391
2023-05-15 23:37:56,602 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009841279946267605, 0.0010120319947600365, 0.0005806719958782196, 0.0007232639938592911, 0.0005707520022988319, 0.0008434560000896454, 0.0009629119932651521, 0.0018894079402089119, 0.0020941759645938876, 0.0017042880281805993]
2023-05-15 23:37:56,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.977
2023-05-15 23:37:56,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.994
2023-05-15 23:37:56,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.412
2023-05-15 23:37:56,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.326
2023-05-15 23:37:56,602 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.535
2023-05-15 23:37:56,603 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 23:37:56,603 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.343
2023-05-15 23:37:56,603 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.972
2023-05-15 23:37:56,603 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.044
2023-05-15 23:37:56,603 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 1.038
2023-05-15 23:37:56,603 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:37:56,604 - optimal_runtime.py[116] - INFO: avg ratio: 1.166303075791492
2023-05-15 23:37:56,604 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009139844404191707
2023-05-15 23:37:56,605 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.001383   0.0010793  0.00057484 0.00051792 0.00056438 0.00130334
 0.00157828 0.00560318 0.00645778 0.00234332]
2023-05-15 23:37:56,607 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:56,951 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:56,951 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:37:56,955 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.001383   0.0010793  0.00057484 0.00051792 0.00056438 0.00130334
 0.00157828 0.00560318 0.00645778 0.00234332]
2023-05-15 23:37:56,958 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:57,241 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:57,242 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:57,242 - gen_series_legodnn_models.py[28] - INFO: target model size: 1.611MB
2023-05-15 23:37:57,243 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 1689606.4040404041B (1.611MB), try to adapt blocks
2023-05-15 23:37:57,245 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:57,320 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05396857452392578
2023-05-15 23:37:57,321 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009878720082342623, 0.001014464009553194, 0.0005382719971239566, 0.0006406399905681611, 0.0005139839984476566, 0.0008367679938673973, 0.0009975680001080036, 0.0021105920597910884, 0.002450527999550104, 0.0019751679860055445]
2023-05-15 23:37:57,321 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.974
2023-05-15 23:37:57,322 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.991
2023-05-15 23:37:57,322 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.523
2023-05-15 23:37:57,322 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.626
2023-05-15 23:37:57,322 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.704
2023-05-15 23:37:57,323 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.192
2023-05-15 23:37:57,323 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.296
2023-05-15 23:37:57,323 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.870
2023-05-15 23:37:57,323 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.892
2023-05-15 23:37:57,323 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.896
2023-05-15 23:37:57,324 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:37:57,324 - optimal_runtime.py[116] - INFO: avg ratio: 1.1486775457581941
2023-05-15 23:37:57,324 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009280087941327638
2023-05-15 23:37:57,325 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00138826 0.00108189 0.00053286 0.00045875 0.00050824 0.001293
 0.00163508 0.00625912 0.00755666 0.00271577]
2023-05-15 23:37:57,327 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:57,597 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:57,597 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:37:57,600 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00138826 0.00108189 0.00053286 0.00045875 0.00050824 0.001293
 0.00163508 0.00625912 0.00755666 0.00271577]
2023-05-15 23:37:57,601 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:57,996 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:57,996 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:57,997 - gen_series_legodnn_models.py[28] - INFO: target model size: 2.111MB
2023-05-15 23:37:57,997 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 2213069.606060606B (2.111MB), try to adapt blocks
2023-05-15 23:37:57,999 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:58,134 - optimal_runtime.py[77] - INFO: infer time of current model: 0.12113865661621094
2023-05-15 23:37:58,135 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001063424002379179, 0.0010535680018365383, 0.000631264004856348, 0.000726591993123293, 0.0005975039973855019, 0.0008907200060784817, 0.0010517120324075222, 0.002223200015723705, 0.0025022079795598983, 0.0019760320037603375]
2023-05-15 23:37:58,136 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.905
2023-05-15 23:37:58,136 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.954
2023-05-15 23:37:58,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.299
2023-05-15 23:37:58,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.316
2023-05-15 23:37:58,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.466
2023-05-15 23:37:58,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.120
2023-05-15 23:37:58,139 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.229
2023-05-15 23:37:58,139 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.826
2023-05-15 23:37:58,140 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.873
2023-05-15 23:37:58,140 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.896
2023-05-15 23:37:58,141 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:37:58,142 - optimal_runtime.py[116] - INFO: avg ratio: 1.063086044640562
2023-05-15 23:37:58,142 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010027249153165791
2023-05-15 23:37:58,144 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149443 0.0011236  0.00062492 0.0005203  0.00059083 0.00137637
 0.00172383 0.00659306 0.00771603 0.00271695]
2023-05-15 23:37:58,147 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:58,405 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:58,406 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:37:58,410 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149443 0.0011236  0.00062492 0.0005203  0.00059083 0.00137637
 0.00172383 0.00659306 0.00771603 0.00271695]
2023-05-15 23:37:58,412 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:58,755 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:58,756 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:58,757 - gen_series_legodnn_models.py[28] - INFO: target model size: 2.610MB
2023-05-15 23:37:58,757 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 2736532.8080808083B (2.610MB), try to adapt blocks
2023-05-15 23:37:58,759 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:58,855 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06341958236694335
2023-05-15 23:37:58,855 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011813119910657403, 0.0010799040049314498, 0.0005917119979858398, 0.000728992011398077, 0.000575775995850563, 0.0008902719952166081, 0.001071552012115717, 0.002191807985305786, 0.00248550396412611, 0.0019669759757816796]
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.814
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.931
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.385
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.308
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.521
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.120
2023-05-15 23:37:58,855 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.207
2023-05-15 23:37:58,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.838
2023-05-15 23:37:58,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.879
2023-05-15 23:37:58,856 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.900
2023-05-15 23:37:58,856 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:37:58,856 - optimal_runtime.py[116] - INFO: avg ratio: 1.066219268430416
2023-05-15 23:37:58,856 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009997782779293423
2023-05-15 23:37:58,857 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016601  0.00115168 0.00058576 0.00052202 0.00056934 0.00137568
 0.00175635 0.00649997 0.00766452 0.0027045 ]
2023-05-15 23:37:58,859 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:59,302 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:59,303 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:37:59,305 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016601  0.00115168 0.00058576 0.00052202 0.00056934 0.00137568
 0.00175635 0.00649997 0.00766452 0.0027045 ]
2023-05-15 23:37:59,307 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:37:59,618 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:37:59,621 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:37:59,622 - gen_series_legodnn_models.py[28] - INFO: target model size: 3.109MB
2023-05-15 23:37:59,623 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 3259996.01010101B (3.109MB), try to adapt blocks
2023-05-15 23:37:59,625 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:37:59,699 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05306531143188477
2023-05-15 23:37:59,701 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010378880016505719, 0.0010191040150821207, 0.0005686720013618469, 0.0006524159982800484, 0.0005182400010526181, 0.000845536008477211, 0.0009980480037629605, 0.0021257600374519825, 0.003347423978149891, 0.0020671680234372616]
2023-05-15 23:37:59,701 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.927
2023-05-15 23:37:59,702 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.987
2023-05-15 23:37:59,702 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.442
2023-05-15 23:37:59,703 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.579
2023-05-15 23:37:59,704 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.690
2023-05-15 23:37:59,706 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.180
2023-05-15 23:37:59,708 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.295
2023-05-15 23:37:59,708 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.864
2023-05-15 23:37:59,709 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.653
2023-05-15 23:37:59,710 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.856
2023-05-15 23:37:59,711 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 23:37:59,712 - optimal_runtime.py[116] - INFO: avg ratio: 1.1550484949152862
2023-05-15 23:37:59,712 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009228901373224387
2023-05-15 23:37:59,714 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145855 0.00108684 0.00056296 0.00046719 0.00051245 0.00130655
 0.00163587 0.0063041  0.01032241 0.00284226]
2023-05-15 23:37:59,716 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:00,033 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:00,033 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:00,035 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145855 0.00108684 0.00056296 0.00046719 0.00051245 0.00130655
 0.00163587 0.0063041  0.01032241 0.00284226]
2023-05-15 23:38:00,037 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:00,342 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:00,343 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:00,343 - gen_series_legodnn_models.py[28] - INFO: target model size: 3.608MB
2023-05-15 23:38:00,344 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 3783459.212121212B (3.608MB), try to adapt blocks
2023-05-15 23:38:00,347 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:00,415 - optimal_runtime.py[77] - INFO: infer time of current model: 0.053937599182128905
2023-05-15 23:38:00,416 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010586880072951318, 0.0010406720153987407, 0.0005935680009424687, 0.0007017919905483723, 0.0005726400092244148, 0.0008867199942469597, 0.0010603519678115843, 0.0021302400045096876, 0.002475647959858179, 0.0019213440343737603]
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.966
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.381
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.398
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.529
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.125
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.219
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.862
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.883
2023-05-15 23:38:00,416 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.921
2023-05-15 23:38:00,417 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:00,417 - optimal_runtime.py[116] - INFO: avg ratio: 1.088412754644694
2023-05-15 23:38:00,417 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009793921097832305
2023-05-15 23:38:00,417 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148778 0.00110984 0.0005876  0.00050254 0.00056624 0.00137019
 0.00173799 0.00631738 0.00763412 0.00264176]
2023-05-15 23:38:00,419 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:00,718 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:00,719 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:00,722 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148778 0.00110984 0.0005876  0.00050254 0.00056624 0.00137019
 0.00173799 0.00631738 0.00763412 0.00264176]
2023-05-15 23:38:00,725 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:00,989 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:00,989 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:00,990 - gen_series_legodnn_models.py[28] - INFO: target model size: 4.107MB
2023-05-15 23:38:00,990 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 4306922.414141415B (4.107MB), try to adapt blocks
2023-05-15 23:38:00,991 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:01,063 - optimal_runtime.py[77] - INFO: infer time of current model: 0.051084671020507816
2023-05-15 23:38:01,064 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010559360012412072, 0.0010392960123717786, 0.0005761920027434826, 0.0006508159786462785, 0.0005039359964430333, 0.00082736000046134, 0.001001599993556738, 0.002112480033189058, 0.0024461759626865386, 0.0019358399212360384]
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.911
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.968
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.423
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.585
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.738
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.206
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.291
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.869
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.893
2023-05-15 23:38:01,064 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.914
2023-05-15 23:38:01,065 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:01,065 - optimal_runtime.py[116] - INFO: avg ratio: 1.1347496263578316
2023-05-15 23:38:01,065 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009393991761053886
2023-05-15 23:38:01,066 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148391 0.00110837 0.0005704  0.00046604 0.00049831 0.00127847
 0.00164169 0.00626471 0.00754324 0.00266169]
2023-05-15 23:38:01,067 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:01,339 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:01,339 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:01,341 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148391 0.00110837 0.0005704  0.00046604 0.00049831 0.00127847
 0.00164169 0.00626471 0.00754324 0.00266169]
2023-05-15 23:38:01,342 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:01,542 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:01,544 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:01,545 - gen_series_legodnn_models.py[28] - INFO: target model size: 4.607MB
2023-05-15 23:38:01,545 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 4830385.6161616165B (4.607MB), try to adapt blocks
2023-05-15 23:38:01,549 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:01,642 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07542963409423828
2023-05-15 23:38:01,643 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011253439970314505, 0.0010924159809947015, 0.0006347199901938439, 0.0007792640030384063, 0.0006341760084033012, 0.0009703999906778335, 0.001113440006971359, 0.0022439679801464084, 0.0025125759467482566, 0.0020447680503129957]
2023-05-15 23:38:01,643 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.855
2023-05-15 23:38:01,643 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.920
2023-05-15 23:38:01,643 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.292
2023-05-15 23:38:01,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.159
2023-05-15 23:38:01,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.381
2023-05-15 23:38:01,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.028
2023-05-15 23:38:01,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.161
2023-05-15 23:38:01,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.818
2023-05-15 23:38:01,646 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.870
2023-05-15 23:38:01,646 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.866
2023-05-15 23:38:01,647 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:01,647 - optimal_runtime.py[116] - INFO: avg ratio: 1.0211958913778538
2023-05-15 23:38:01,648 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010438573765197601
2023-05-15 23:38:01,649 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158145 0.00116503 0.00062834 0.00055802 0.00062709 0.0014995
 0.00182501 0.00665465 0.007748   0.00281146]
2023-05-15 23:38:01,651 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:01,884 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:01,885 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:01,886 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158145 0.00116503 0.00062834 0.00055802 0.00062709 0.0014995
 0.00182501 0.00665465 0.007748   0.00281146]
2023-05-15 23:38:01,888 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:02,209 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:02,210 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:02,210 - gen_series_legodnn_models.py[28] - INFO: target model size: 5.106MB
2023-05-15 23:38:02,212 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 5353848.818181818B (5.106MB), try to adapt blocks
2023-05-15 23:38:02,214 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:02,276 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04462886428833008
2023-05-15 23:38:02,277 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001033055990934372, 0.0010104319900274277, 0.0005514559969305992, 0.0006584320068359376, 0.0005408320054411888, 0.000852960005402565, 0.0010380159802734852, 0.0021960960030555725, 0.0024833599925041198, 0.0019766719825565814]
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.931
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.995
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.487
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.556
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.619
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.169
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.245
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.836
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.880
2023-05-15 23:38:02,277 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.895
2023-05-15 23:38:02,278 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:02,278 - optimal_runtime.py[116] - INFO: avg ratio: 1.1176642531981693
2023-05-15 23:38:02,278 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.00953759468495266
2023-05-15 23:38:02,279 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145176 0.00107759 0.00054591 0.00047149 0.00053479 0.00131802
 0.00170138 0.00651268 0.00765791 0.00271783]
2023-05-15 23:38:02,280 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:02,570 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:02,571 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:02,572 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145176 0.00107759 0.00054591 0.00047149 0.00053479 0.00131802
 0.00170138 0.00651268 0.00765791 0.00271783]
2023-05-15 23:38:02,573 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:02,923 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:02,926 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:02,927 - gen_series_legodnn_models.py[28] - INFO: target model size: 5.605MB
2023-05-15 23:38:02,929 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 5877312.02020202B (5.605MB), try to adapt blocks
2023-05-15 23:38:02,932 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:03,017 - optimal_runtime.py[77] - INFO: infer time of current model: 0.052591007232666014
2023-05-15 23:38:03,017 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001368319995701313, 0.0012269120179116727, 0.0005815359987318516, 0.000682559996843338, 0.0005381760001182557, 0.0008510080054402351, 0.0010018239803612234, 0.002158240009099245, 0.002472831971943378, 0.0019784959778189662]
2023-05-15 23:38:03,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.703
2023-05-15 23:38:03,017 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.820
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.410
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.465
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.627
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.172
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.290
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.851
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.884
2023-05-15 23:38:03,018 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.895
2023-05-15 23:38:03,019 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:03,019 - optimal_runtime.py[116] - INFO: avg ratio: 1.1185721835217213
2023-05-15 23:38:03,019 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009529853144839484
2023-05-15 23:38:03,019 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0019229  0.00130846 0.00057569 0.00048877 0.00053216 0.00131501
 0.00164206 0.00640042 0.00762544 0.00272034]
2023-05-15 23:38:03,021 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:03,409 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:03,409 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:03,411 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0019229  0.00130846 0.00057569 0.00048877 0.00053216 0.00131501
 0.00164206 0.00640042 0.00762544 0.00272034]
2023-05-15 23:38:03,412 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:03,740 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:03,741 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:03,741 - gen_series_legodnn_models.py[28] - INFO: target model size: 6.104MB
2023-05-15 23:38:03,742 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 6400775.222222222B (6.104MB), try to adapt blocks
2023-05-15 23:38:03,744 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:03,824 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06193382263183594
2023-05-15 23:38:03,825 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010733759999275209, 0.0010507839880883694, 0.0005806400030851364, 0.0006864960044622422, 0.0005489599965512752, 0.0009201599992811679, 0.0010300479643046854, 0.002172576002776623, 0.002483551949262619, 0.0019584639370441434]
2023-05-15 23:38:03,825 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.896
2023-05-15 23:38:03,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.957
2023-05-15 23:38:03,826 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.412
2023-05-15 23:38:03,827 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.451
2023-05-15 23:38:03,827 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.595
2023-05-15 23:38:03,828 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.084
2023-05-15 23:38:03,828 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.255
2023-05-15 23:38:03,828 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.845
2023-05-15 23:38:03,829 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.880
2023-05-15 23:38:03,829 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.904
2023-05-15 23:38:03,830 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:03,830 - optimal_runtime.py[116] - INFO: avg ratio: 1.0920695304576031
2023-05-15 23:38:03,831 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009761126323520558
2023-05-15 23:38:03,832 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150842 0.00112063 0.0005748  0.00049159 0.00054283 0.00142186
 0.00168832 0.00644293 0.0076585  0.0026928 ]
2023-05-15 23:38:03,834 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:04,097 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:04,097 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:04,099 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150842 0.00112063 0.0005748  0.00049159 0.00054283 0.00142186
 0.00168832 0.00644293 0.0076585  0.0026928 ]
2023-05-15 23:38:04,101 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:04,471 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:04,472 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:04,473 - gen_series_legodnn_models.py[28] - INFO: target model size: 6.603MB
2023-05-15 23:38:04,473 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 6924238.424242424B (6.603MB), try to adapt blocks
2023-05-15 23:38:04,476 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:04,546 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05311164855957031
2023-05-15 23:38:04,547 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010374400056898593, 0.0010464639775455, 0.0006872639954090119, 0.0009215040057897567, 0.0007333439961075783, 0.001120896004140377, 0.0012122239992022512, 0.0023376640006899834, 0.002507968008518219, 0.001923584070056677]
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.927
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.961
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.193
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.826
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.194
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.890
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.067
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.786
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.871
2023-05-15 23:38:04,547 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.920
2023-05-15 23:38:04,548 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:04,548 - optimal_runtime.py[116] - INFO: avg ratio: 0.9787553659493339
2023-05-15 23:38:04,548 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010891208377207773
2023-05-15 23:38:04,548 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145792 0.00111602 0.00068036 0.00065988 0.00072515 0.00173205
 0.00198692 0.00693251 0.00773379 0.00264484]
2023-05-15 23:38:04,550 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:04,903 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:04,904 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:04,906 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145792 0.00111602 0.00068036 0.00065988 0.00072515 0.00173205
 0.00198692 0.00693251 0.00773379 0.00264484]
2023-05-15 23:38:04,907 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:05,158 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:05,159 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:05,160 - gen_series_legodnn_models.py[28] - INFO: target model size: 7.103MB
2023-05-15 23:38:05,160 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 7447701.626262626B (7.103MB), try to adapt blocks
2023-05-15 23:38:05,164 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:05,233 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05338943862915039
2023-05-15 23:38:05,234 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001085664004087448, 0.0010299840010702611, 0.0005668800026178359, 0.0006575040109455585, 0.0005381439961493015, 0.0008395840041339398, 0.0010227199830114843, 0.002133824001997709, 0.0024521600231528283, 0.0019152640253305437]
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.886
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.976
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.446
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.559
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.627
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.188
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.264
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.861
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.891
2023-05-15 23:38:05,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.924
2023-05-15 23:38:05,235 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:05,235 - optimal_runtime.py[116] - INFO: avg ratio: 1.1182419917840083
2023-05-15 23:38:05,235 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009532667096375166
2023-05-15 23:38:05,235 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00152569 0.00109844 0.00056118 0.00047083 0.00053213 0.00129736
 0.00167631 0.00632801 0.00756169 0.0026334 ]
2023-05-15 23:38:05,237 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:05,599 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:05,599 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:05,607 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00152569 0.00109844 0.00056118 0.00047083 0.00053213 0.00129736
 0.00167631 0.00632801 0.00756169 0.0026334 ]
2023-05-15 23:38:05,609 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:05,955 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:05,958 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:05,960 - gen_series_legodnn_models.py[28] - INFO: target model size: 7.602MB
2023-05-15 23:38:05,960 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 7971164.828282828B (7.602MB), try to adapt blocks
2023-05-15 23:38:05,964 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:06,124 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1005805435180664
2023-05-15 23:38:06,124 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001068960003554821, 0.0010283520072698594, 0.001219808004796505, 0.0007221439927816391, 0.000569664005190134, 0.0008808639980852606, 0.0010708800069987774, 0.0021621759980916975, 0.002480415970087051, 0.0019855679497122764]
2023-05-15 23:38:06,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.900
2023-05-15 23:38:06,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.978
2023-05-15 23:38:06,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.672
2023-05-15 23:38:06,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.330
2023-05-15 23:38:06,124 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.537
2023-05-15 23:38:06,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.132
2023-05-15 23:38:06,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.207
2023-05-15 23:38:06,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.849
2023-05-15 23:38:06,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.881
2023-05-15 23:38:06,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.891
2023-05-15 23:38:06,125 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:06,125 - optimal_runtime.py[116] - INFO: avg ratio: 1.0470913055205966
2023-05-15 23:38:06,125 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010180419400545546
2023-05-15 23:38:06,126 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150221 0.0010967  0.00120755 0.00051712 0.0005633  0.00136114
 0.00175525 0.00641209 0.00764883 0.00273007]
2023-05-15 23:38:06,127 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:06,359 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:06,359 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:06,361 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150221 0.0010967  0.00120755 0.00051712 0.0005633  0.00136114
 0.00175525 0.00641209 0.00764883 0.00273007]
2023-05-15 23:38:06,362 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:06,665 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:06,666 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:06,667 - gen_series_legodnn_models.py[28] - INFO: target model size: 8.101MB
2023-05-15 23:38:06,667 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 8494628.030303031B (8.101MB), try to adapt blocks
2023-05-15 23:38:06,669 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:06,735 - optimal_runtime.py[77] - INFO: infer time of current model: 0.050952030181884767
2023-05-15 23:38:06,736 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010420799851417542, 0.0011586880013346674, 0.000709696002304554, 0.000919840008020401, 0.0006934400051832199, 0.0010606080144643783, 0.0011846720203757286, 0.002310847967863083, 0.0024898240193724636, 0.0019183679670095445]
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.923
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.868
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.155
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.829
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.263
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.941
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.091
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.795
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.878
2023-05-15 23:38:06,736 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.923
2023-05-15 23:38:06,737 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:06,737 - optimal_runtime.py[116] - INFO: avg ratio: 0.9817761815522332
2023-05-15 23:38:06,737 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010857697346059838
2023-05-15 23:38:06,737 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146444 0.0012357  0.00070256 0.00065868 0.00068569 0.00163889
 0.00194176 0.00685299 0.00767784 0.00263767]
2023-05-15 23:38:06,738 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:07,050 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:07,051 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:07,052 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146444 0.0012357  0.00070256 0.00065868 0.00068569 0.00163889
 0.00194176 0.00685299 0.00767784 0.00263767]
2023-05-15 23:38:07,054 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:07,423 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:07,424 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:07,425 - gen_series_legodnn_models.py[28] - INFO: target model size: 8.600MB
2023-05-15 23:38:07,425 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 9018091.232323233B (8.600MB), try to adapt blocks
2023-05-15 23:38:07,427 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:07,536 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09227321624755859
2023-05-15 23:38:07,537 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010603520050644875, 0.0010405760072171688, 0.0006317119970917702, 0.0007329919934272766, 0.000593119990080595, 0.0008902400135993957, 0.0010632320232689379, 0.0021674240082502367, 0.0024778880253434185, 0.0019900160394608975]
2023-05-15 23:38:07,537 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.907
2023-05-15 23:38:07,537 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.966
2023-05-15 23:38:07,538 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.298
2023-05-15 23:38:07,538 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.296
2023-05-15 23:38:07,538 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.477
2023-05-15 23:38:07,539 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.121
2023-05-15 23:38:07,539 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.216
2023-05-15 23:38:07,539 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.847
2023-05-15 23:38:07,540 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.882
2023-05-15 23:38:07,540 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.889
2023-05-15 23:38:07,541 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:07,541 - optimal_runtime.py[116] - INFO: avg ratio: 1.0670052044905192
2023-05-15 23:38:07,541 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009990418599649073
2023-05-15 23:38:07,542 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149012 0.00110974 0.00062536 0.00052489 0.00058649 0.00137563
 0.00174271 0.00642765 0.00764103 0.00273618]
2023-05-15 23:38:07,544 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:07,786 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:07,787 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:07,793 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149012 0.00110974 0.00062536 0.00052489 0.00058649 0.00137563
 0.00174271 0.00642765 0.00764103 0.00273618]
2023-05-15 23:38:07,797 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:08,122 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:08,124 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:08,124 - gen_series_legodnn_models.py[28] - INFO: target model size: 9.100MB
2023-05-15 23:38:08,124 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 9541554.434343435B (9.100MB), try to adapt blocks
2023-05-15 23:38:08,128 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:08,186 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0424890251159668
2023-05-15 23:38:08,187 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010648320205509662, 0.00103686398640275, 0.0005862719938158989, 0.000656959991902113, 0.000528096005320549, 0.0008430399931967258, 0.0010054720267653465, 0.0021150719821453096, 0.0024466560184955594, 0.0019093439728021622]
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.903
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.970
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.398
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.561
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.658
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.183
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.286
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.868
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.893
2023-05-15 23:38:08,187 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.927
2023-05-15 23:38:08,188 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:08,188 - optimal_runtime.py[116] - INFO: avg ratio: 1.120831498525646
2023-05-15 23:38:08,188 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009510643352623922
2023-05-15 23:38:08,188 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149641 0.00110578 0.00058038 0.00047044 0.0005222  0.0013027
 0.00164804 0.0062724  0.00754472 0.00262526]
2023-05-15 23:38:08,190 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:08,504 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:08,505 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:08,506 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149641 0.00110578 0.00058038 0.00047044 0.0005222  0.0013027
 0.00164804 0.0062724  0.00754472 0.00262526]
2023-05-15 23:38:08,508 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:08,848 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:08,849 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:08,850 - gen_series_legodnn_models.py[28] - INFO: target model size: 9.599MB
2023-05-15 23:38:08,850 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 10065017.636363637B (9.599MB), try to adapt blocks
2023-05-15 23:38:08,852 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:08,931 - optimal_runtime.py[77] - INFO: infer time of current model: 0.061575584411621094
2023-05-15 23:38:08,931 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.00107711997628212, 0.0010372479930520057, 0.0005735040083527565, 0.0006572479940950871, 0.0005322559922933579, 0.0008511680029332638, 0.0010617920123040677, 0.002175936035811901, 0.0024858879372477534, 0.00197136002779007]
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.893
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.969
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.429
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.560
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.645
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.172
2023-05-15 23:38:08,931 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.218
2023-05-15 23:38:08,932 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.844
2023-05-15 23:38:08,932 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.879
2023-05-15 23:38:08,932 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.898
2023-05-15 23:38:08,932 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:08,932 - optimal_runtime.py[116] - INFO: avg ratio: 1.105326517308231
2023-05-15 23:38:08,932 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009644054018376407
2023-05-15 23:38:08,933 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151368 0.00110619 0.00056774 0.00047065 0.00052631 0.00131526
 0.00174035 0.0064529  0.0076657  0.00271053]
2023-05-15 23:38:08,934 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:09,156 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:09,156 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:09,159 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151368 0.00110619 0.00056774 0.00047065 0.00052631 0.00131526
 0.00174035 0.0064529  0.0076657  0.00271053]
2023-05-15 23:38:09,160 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:09,472 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:09,474 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:09,475 - gen_series_legodnn_models.py[28] - INFO: target model size: 10.098MB
2023-05-15 23:38:09,475 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 10588480.838383839B (10.098MB), try to adapt blocks
2023-05-15 23:38:09,478 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:09,542 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05313833618164063
2023-05-15 23:38:09,544 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010576960146427153, 0.0010157439894974232, 0.0005529600046575069, 0.0006641600057482719, 0.0005209920033812523, 0.0008385599926114081, 0.0010128959752619268, 0.0021241280399262904, 0.002448320019990206, 0.0019258559346199036]
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.990
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.483
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.533
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.681
2023-05-15 23:38:09,544 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.190
2023-05-15 23:38:09,545 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.276
2023-05-15 23:38:09,545 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.865
2023-05-15 23:38:09,545 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.893
2023-05-15 23:38:09,545 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.919
2023-05-15 23:38:09,545 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:09,546 - optimal_runtime.py[116] - INFO: avg ratio: 1.1339148512589707
2023-05-15 23:38:09,546 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.00940090750996777
2023-05-15 23:38:09,547 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148638 0.00108326 0.0005474  0.0004756  0.00051517 0.00129577
 0.00166021 0.00629926 0.00754985 0.00264796]
2023-05-15 23:38:09,549 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:09,890 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:09,891 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:09,893 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148638 0.00108326 0.0005474  0.0004756  0.00051517 0.00129577
 0.00166021 0.00629926 0.00754985 0.00264796]
2023-05-15 23:38:09,896 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:10,220 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:10,222 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:10,223 - gen_series_legodnn_models.py[28] - INFO: target model size: 10.597MB
2023-05-15 23:38:10,225 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 11111944.04040404B (10.597MB), try to adapt blocks
2023-05-15 23:38:10,228 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:10,318 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06661507415771484
2023-05-15 23:38:10,319 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010919359922409056, 0.0010279359929263592, 0.0005748159997165203, 0.0006991040147840976, 0.0005608960017561912, 0.0008811520002782345, 0.001040063999593258, 0.002111040025949478, 0.0024498239383101464, 0.0018808959946036339]
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.881
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.978
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.426
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.407
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.561
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.132
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.243
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.870
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.892
2023-05-15 23:38:10,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.941
2023-05-15 23:38:10,320 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:10,320 - optimal_runtime.py[116] - INFO: avg ratio: 1.1027717680298212
2023-05-15 23:38:10,320 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.00966639603034903
2023-05-15 23:38:10,320 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0015345  0.00109626 0.00056904 0.00050062 0.00055463 0.00136159
 0.00170474 0.00626044 0.00755449 0.00258615]
2023-05-15 23:38:10,322 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:10,595 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:10,595 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:10,599 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0015345  0.00109626 0.00056904 0.00050062 0.00055463 0.00136159
 0.00170474 0.00626044 0.00755449 0.00258615]
2023-05-15 23:38:10,603 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:10,945 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:10,947 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:10,947 - gen_series_legodnn_models.py[28] - INFO: target model size: 11.096MB
2023-05-15 23:38:10,948 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 11635407.242424242B (11.096MB), try to adapt blocks
2023-05-15 23:38:10,951 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:11,013 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047394622802734376
2023-05-15 23:38:11,013 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012135679870843889, 0.0011448959931731225, 0.0006900479942560196, 0.0008030719831585884, 0.0006323840022087097, 0.000980672001838684, 0.0011147520095109939, 0.0021957439929246904, 0.002446783971041441, 0.0019141759239137174]
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.793
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.878
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.188
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.095
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.385
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.017
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.160
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.836
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.893
2023-05-15 23:38:11,013 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.925
2023-05-15 23:38:11,014 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:11,014 - optimal_runtime.py[116] - INFO: avg ratio: 1.0083405651255086
2023-05-15 23:38:11,014 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010571655063324375
2023-05-15 23:38:11,015 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00170543 0.00122099 0.00068311 0.00057507 0.00062532 0.00151537
 0.00182716 0.00651164 0.00754512 0.00263191]
2023-05-15 23:38:11,016 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:11,365 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:11,365 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:11,367 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00170543 0.00122099 0.00068311 0.00057507 0.00062532 0.00151537
 0.00182716 0.00651164 0.00754512 0.00263191]
2023-05-15 23:38:11,368 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:11,702 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:11,704 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:11,706 - gen_series_legodnn_models.py[28] - INFO: target model size: 11.596MB
2023-05-15 23:38:11,707 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 12158870.444444444B (11.596MB), try to adapt blocks
2023-05-15 23:38:11,709 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:11,801 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06341551971435547
2023-05-15 23:38:11,801 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014343359917402265, 0.0011080960072577, 0.0005718080066144467, 0.0006912000067532063, 0.0005470400042831897, 0.0008494080007076263, 0.0010017920024693013, 0.002115488022565841, 0.002451679963618517, 0.0019143039844930175]
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.671
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.907
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.434
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.434
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.601
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.174
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.291
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.868
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.891
2023-05-15 23:38:11,801 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.925
2023-05-15 23:38:11,802 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:11,802 - optimal_runtime.py[116] - INFO: avg ratio: 1.1363921193896094
2023-05-15 23:38:11,802 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009380414083292096
2023-05-15 23:38:11,803 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00201568 0.00118175 0.00056606 0.00049496 0.00054093 0.00131254
 0.00164201 0.00627363 0.00756021 0.00263208]
2023-05-15 23:38:11,804 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:12,068 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:12,069 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:12,070 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00201568 0.00118175 0.00056606 0.00049496 0.00054093 0.00131254
 0.00164201 0.00627363 0.00756021 0.00263208]
2023-05-15 23:38:12,072 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:12,418 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:12,418 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:12,419 - gen_series_legodnn_models.py[28] - INFO: target model size: 12.095MB
2023-05-15 23:38:12,419 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 12682333.646464646B (12.095MB), try to adapt blocks
2023-05-15 23:38:12,420 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:12,489 - optimal_runtime.py[77] - INFO: infer time of current model: 0.050996414184570314
2023-05-15 23:38:12,490 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010389759987592697, 0.0010327999889850616, 0.0005742399953305721, 0.0006838080026209354, 0.0005590399950742721, 0.000891520008444786, 0.001052031971514225, 0.002168064013123512, 0.0024802239835262302, 0.0019547200128436086]
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.926
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.974
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.428
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.461
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.567
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.119
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.229
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.847
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.881
2023-05-15 23:38:12,490 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.905
2023-05-15 23:38:12,491 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:12,491 - optimal_runtime.py[116] - INFO: avg ratio: 1.097244291378525
2023-05-15 23:38:12,491 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009715091456499582
2023-05-15 23:38:12,492 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146008 0.00110145 0.00056847 0.00048967 0.0005528  0.00137761
 0.00172435 0.00642955 0.00764823 0.00268765]
2023-05-15 23:38:12,494 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:12,725 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:12,726 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13291969B (12.676MB) and continue finding solution
2023-05-15 23:38:12,727 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146008 0.00110145 0.00056847 0.00048967 0.0005528  0.00137761
 0.00172435 0.00642955 0.00764823 0.00268765]
2023-05-15 23:38:12,729 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:13,093 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:13,094 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:13,094 - gen_series_legodnn_models.py[28] - INFO: target model size: 12.594MB
2023-05-15 23:38:13,094 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 13205796.848484848B (12.594MB), try to adapt blocks
2023-05-15 23:38:13,095 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:13,168 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06141702270507812
2023-05-15 23:38:13,169 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001070847988128662, 0.0010293759815394878, 0.0005503679998219013, 0.0006586240008473397, 0.0006513919979333878, 0.0008537280149757862, 0.001010527979582548, 0.0021226559877395627, 0.002464831985533237, 0.001925824049860239]
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.898
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.977
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.489
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.555
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.345
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.168
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.279
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.865
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.887
2023-05-15 23:38:13,169 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.919
2023-05-15 23:38:13,171 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:13,171 - optimal_runtime.py[116] - INFO: avg ratio: 1.0919886635132787
2023-05-15 23:38:13,172 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009761849181261963
2023-05-15 23:38:13,173 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150487 0.0010978  0.00054484 0.00047163 0.00064412 0.00131921
 0.00165633 0.00629489 0.00760077 0.00264792]
2023-05-15 23:38:13,175 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:13,579 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:13,579 - optimal_runtime.py[312] - INFO: no solution found, relax the memory constraint to 13310654.448484847B (12.694MB) and continue finding solution
2023-05-15 23:38:13,581 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00150487 0.0010978  0.00054484 0.00047163 0.00064412 0.00131921
 0.00165633 0.00629489 0.00760077 0.00264792]
2023-05-15 23:38:13,583 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:13,988 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:13,990 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:13,992 - gen_series_legodnn_models.py[28] - INFO: target model size: 13.093MB
2023-05-15 23:38:13,993 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 13729260.05050505B (13.093MB), try to adapt blocks
2023-05-15 23:38:13,996 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:14,068 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04990345764160156
2023-05-15 23:38:14,069 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0015258559808135031, 0.0014067199900746345, 0.0008889919966459275, 0.00098556799441576, 0.0006931520029902457, 0.0010543359965085985, 0.0011827519610524179, 0.0023098879754543306, 0.0025575360357761386, 0.0020092160552740096]
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.630
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.715
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.922
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.707
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.264
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.946
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.093
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.795
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.854
2023-05-15 23:38:14,069 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.881
2023-05-15 23:38:14,070 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:14,070 - optimal_runtime.py[116] - INFO: avg ratio: 0.9337697385360919
2023-05-15 23:38:14,070 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011415907156700413
2023-05-15 23:38:14,070 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00214429 0.00150022 0.00088006 0.00070575 0.00068541 0.0016292
 0.00193861 0.00685014 0.00788664 0.00276258]
2023-05-15 23:38:14,071 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:14,382 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:14,383 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:14,390 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 23:38:14,391 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -54792118272.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.0011163852693103337,
  'esti_test_accuracy': 0.005166666666666665,
  'is_relaxed': False,
  'model_size': 13412161.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.00717616081237793}
2023-05-15 23:38:14,427 - gen_series_legodnn_models.py[28] - INFO: target model size: 13.592MB
2023-05-15 23:38:14,427 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 14252723.252525251B (13.592MB), try to adapt blocks
2023-05-15 23:38:14,428 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:14,478 - optimal_runtime.py[77] - INFO: infer time of current model: 0.03962588882446289
2023-05-15 23:38:14,479 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009367999956011772, 0.0009829759933054447, 0.0007652480117976665, 0.0006413119956851004, 0.000556288007646799, 0.0008671360053122044, 0.001047136005014181, 0.002157440036535263, 0.002472160004079342, 0.0019597440399229528]
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.027
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.023
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.874
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.624
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.574
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.150
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.235
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.851
2023-05-15 23:38:14,479 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.884
2023-05-15 23:38:14,480 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.903
2023-05-15 23:38:14,480 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:14,480 - optimal_runtime.py[116] - INFO: avg ratio: 1.0579983775719293
2023-05-15 23:38:14,480 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010075467852160977
2023-05-15 23:38:14,481 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00131649 0.00104831 0.00092816 0.00045923 0.00055007 0.00133993
 0.00171633 0.00639805 0.00762337 0.00269456]
2023-05-15 23:38:14,482 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:14,750 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:14,750 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8]
2023-05-15 23:38:14,757 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 23:38:14,758 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -50935062528.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8],
  'esti_latency': -0.0015474594060587397,
  'esti_test_accuracy': 0.005166666666666665,
  'is_relaxed': False,
  'model_size': 13648065.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.006668806076049805}
2023-05-15 23:38:14,808 - gen_series_legodnn_models.py[28] - INFO: target model size: 14.092MB
2023-05-15 23:38:14,809 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 14776186.454545455B (14.092MB), try to adapt blocks
2023-05-15 23:38:14,811 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:14,928 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09634390258789062
2023-05-15 23:38:14,928 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010464960001409054, 0.001328159973025322, 0.0007994880042970179, 0.0006496639996767045, 0.0005106879957020283, 0.00089775999635458, 0.0010285119861364366, 0.002118144039064646, 0.0024514239318668843, 0.0019371199831366539]
2023-05-15 23:38:14,928 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.919
2023-05-15 23:38:14,928 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.807
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.837
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.590
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.715
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.111
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.257
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.867
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.891
2023-05-15 23:38:14,929 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.914
2023-05-15 23:38:14,930 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:14,930 - optimal_runtime.py[116] - INFO: avg ratio: 1.0354307360208748
2023-05-15 23:38:14,930 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010295066845156447
2023-05-15 23:38:14,930 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00147064 0.00132816 0.00096969 0.00046522 0.00050498 0.00138725
 0.0016858  0.00628151 0.00755942 0.00266345]
2023-05-15 23:38:14,932 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:15,307 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:15,308 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 23:38:15,321 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 23:38:15,329 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 23:38:15,341 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 23:38:15,341 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -51167567872.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4],
  'esti_latency': -0.0006405569633677177,
  'esti_test_accuracy': 0.005599999999999999,
  'is_relaxed': False,
  'model_size': 14657537.0,
  'update_swap_mem_cost': 8063138.0,
  'update_swap_time_cost': 0.03281354904174805}
2023-05-15 23:38:15,367 - gen_series_legodnn_models.py[28] - INFO: target model size: 14.591MB
2023-05-15 23:38:15,368 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 15299649.656565657B (14.591MB), try to adapt blocks
2023-05-15 23:38:15,369 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:15,485 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09805020904541016
2023-05-15 23:38:15,488 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010092159919440748, 0.001017215996980667, 0.0005640960074961186, 0.000686111994087696, 0.011604223892092704, 0.0009799039885401727, 0.0011261760145425796, 0.0022069760113954543, 0.002474112033843994, 0.0026832958906888964]
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.953
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.989
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.453
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.452
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.012 = 0.075
2023-05-15 23:38:15,488 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.018
2023-05-15 23:38:15,489 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.148
2023-05-15 23:38:15,489 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.832
2023-05-15 23:38:15,489 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.883
2023-05-15 23:38:15,489 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.835
2023-05-15 23:38:15,489 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:15,490 - optimal_runtime.py[116] - INFO: avg ratio: 1.0139520077434212
2023-05-15 23:38:15,490 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010513149103169285
2023-05-15 23:38:15,490 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00141825 0.00108483 0.00055843 0.00049132 0.0114746  0.00151418
 0.00184588 0.00654495 0.00762939 0.00291362]
2023-05-15 23:38:15,492 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:15,744 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:15,745 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 23:38:15,756 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 23:38:15,757 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -49201225728.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4],
  'esti_latency': -0.0007146518834698391,
  'esti_test_accuracy': 0.0057333333333333325,
  'is_relaxed': False,
  'model_size': 14777857.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.011027336120605469}
2023-05-15 23:38:15,801 - gen_series_legodnn_models.py[28] - INFO: target model size: 15.090MB
2023-05-15 23:38:15,801 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 15823112.858585859B (15.090MB), try to adapt blocks
2023-05-15 23:38:15,805 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:15,925 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05881139373779297
2023-05-15 23:38:15,925 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011265279799699784, 0.0011407039761543274, 0.0007994559817016125, 0.0006762560047209263, 0.0005547519959509372, 0.0008735360093414784, 0.0010505919978022577, 0.002123007982969284, 0.0024490239620208742, 0.0026476479694247245]
2023-05-15 23:38:15,925 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.854
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.882
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.837
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.488
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.579
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.142
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.231
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.865
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.892
2023-05-15 23:38:15,926 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.846
2023-05-15 23:38:15,926 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:15,926 - optimal_runtime.py[116] - INFO: avg ratio: 1.0141729989197201
2023-05-15 23:38:15,926 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010510858258126683
2023-05-15 23:38:15,927 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158311 0.00121652 0.00096965 0.00048426 0.00054856 0.00134982
 0.00172199 0.00629594 0.00755202 0.00287491]
2023-05-15 23:38:15,929 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:16,285 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:16,288 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4]
2023-05-15 23:38:16,289 - gen_series_legodnn_models.py[28] - INFO: target model size: 15.589MB
2023-05-15 23:38:16,291 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 16346576.06060606B (15.589MB), try to adapt blocks
2023-05-15 23:38:16,293 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:16,416 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07970950317382812
2023-05-15 23:38:16,418 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011650880090892314, 0.001105728007853031, 0.0008569600135087967, 0.0007922559902071954, 0.000634335994720459, 0.0009860479757189751, 0.001137568011879921, 0.0022261119708418846, 0.002529663980007172, 0.0027538880072534083]
2023-05-15 23:38:16,418 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.826
2023-05-15 23:38:16,419 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:16,419 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.781
2023-05-15 23:38:16,419 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.124
2023-05-15 23:38:16,424 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.381
2023-05-15 23:38:16,424 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.012
2023-05-15 23:38:16,425 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.137
2023-05-15 23:38:16,425 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.825
2023-05-15 23:38:16,425 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.864
2023-05-15 23:38:16,425 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.814
2023-05-15 23:38:16,426 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:16,426 - optimal_runtime.py[116] - INFO: avg ratio: 0.9497099152402364
2023-05-15 23:38:16,426 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011224299620129751
2023-05-15 23:38:16,427 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016373  0.00117922 0.0010394  0.00056732 0.00062725 0.00152368
 0.00186455 0.0066017  0.00780069 0.00299027]
2023-05-15 23:38:16,429 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:16,707 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:16,709 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 23:38:16,722 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 23:38:16,722 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -42843267072.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0],
  'esti_latency': -0.0001830579479918954,
  'esti_test_accuracy': 0.005866666666666666,
  'is_relaxed': False,
  'model_size': 16330945.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.01281595230102539}
2023-05-15 23:38:16,750 - gen_series_legodnn_models.py[28] - INFO: target model size: 16.089MB
2023-05-15 23:38:16,751 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 16870039.26262626B (16.089MB), try to adapt blocks
2023-05-15 23:38:16,752 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:16,811 - optimal_runtime.py[77] - INFO: infer time of current model: 0.045163105010986325
2023-05-15 23:38:16,812 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.000992192007601261, 0.0010114559940993786, 0.0008022400178015232, 0.000625984001904726, 0.0005217600092291832, 0.0008269440159201622, 0.0010026559829711915, 0.0021084160022437574, 0.0024306560158729555, 0.0027028159871697426]
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.970
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.994
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.834
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.688
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.679
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.206
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.289
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.871
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:16,812 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.900
2023-05-15 23:38:16,813 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:16,813 - optimal_runtime.py[116] - INFO: avg ratio: 1.0713932059139741
2023-05-15 23:38:16,813 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009949501809441527
2023-05-15 23:38:16,813 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00139433 0.00107868 0.00097303 0.00044826 0.00051593 0.00127782
 0.00164342 0.00625266 0.00749538 0.00270282]
2023-05-15 23:38:16,814 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:17,133 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:17,134 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 23:38:17,134 - gen_series_legodnn_models.py[28] - INFO: target model size: 16.588MB
2023-05-15 23:38:17,134 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 17393502.464646466B (16.588MB), try to adapt blocks
2023-05-15 23:38:17,137 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:17,230 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07234166717529297
2023-05-15 23:38:17,230 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001057855997234583, 0.0010330559872090816, 0.0008022079914808273, 0.0006997759938240052, 0.0005667199939489364, 0.0008922560028731822, 0.00105478398501873, 0.002205280028283596, 0.0024666239842772485, 0.0027788799926638606]
2023-05-15 23:38:17,230 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:17,231 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.973
2023-05-15 23:38:17,231 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.834
2023-05-15 23:38:17,231 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.405
2023-05-15 23:38:17,231 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.545
2023-05-15 23:38:17,232 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.118
2023-05-15 23:38:17,232 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.226
2023-05-15 23:38:17,232 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.833
2023-05-15 23:38:17,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.886
2023-05-15 23:38:17,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.876
2023-05-15 23:38:17,234 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:17,234 - optimal_runtime.py[116] - INFO: avg ratio: 1.022266182833638
2023-05-15 23:38:17,234 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010427644795327451
2023-05-15 23:38:17,235 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148661 0.00110172 0.00097299 0.0005011  0.00056039 0.00137875
 0.00172886 0.00653992 0.0076063  0.00277888]
2023-05-15 23:38:17,237 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:17,571 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:17,573 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 23:38:17,574 - gen_series_legodnn_models.py[28] - INFO: target model size: 17.087MB
2023-05-15 23:38:17,575 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 17916965.666666668B (17.087MB), try to adapt blocks
2023-05-15 23:38:17,579 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:17,667 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06552317047119141
2023-05-15 23:38:17,669 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011712000072002411, 0.0011026560068130493, 0.0008629439920186996, 0.0007995519936084747, 0.0006351680010557174, 0.00098089599609375, 0.0011275840178132058, 0.0022381760254502297, 0.0025123839676380157, 0.002860703989863396]
2023-05-15 23:38:17,670 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.821
2023-05-15 23:38:17,670 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.912
2023-05-15 23:38:17,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.775
2023-05-15 23:38:17,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.104
2023-05-15 23:38:17,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.379
2023-05-15 23:38:17,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.017
2023-05-15 23:38:17,673 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.147
2023-05-15 23:38:17,674 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.821
2023-05-15 23:38:17,675 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.870
2023-05-15 23:38:17,685 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.851
2023-05-15 23:38:17,686 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:17,686 - optimal_runtime.py[116] - INFO: avg ratio: 0.9546801304689166
2023-05-15 23:38:17,687 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011165864147218173
2023-05-15 23:38:17,687 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00164589 0.00117595 0.00104666 0.00057255 0.00062807 0.00151572
 0.00184819 0.00663748 0.00774741 0.0028607 ]
2023-05-15 23:38:17,689 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:18,028 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:18,029 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0]
2023-05-15 23:38:18,035 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 23:38:18,035 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -38986211328.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.0],
  'esti_latency': -0.0001481865243452042,
  'esti_test_accuracy': 0.005866666666666666,
  'is_relaxed': False,
  'model_size': 16566849.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.006543874740600586}
2023-05-15 23:38:18,066 - gen_series_legodnn_models.py[28] - INFO: target model size: 17.586MB
2023-05-15 23:38:18,067 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 18440428.86868687B (17.586MB), try to adapt blocks
2023-05-15 23:38:18,068 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:18,131 - optimal_runtime.py[77] - INFO: infer time of current model: 0.052776863098144534
2023-05-15 23:38:18,132 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014400320202112198, 0.0015127679854631424, 0.0009222720190882682, 0.0008762879967689515, 0.0006759679913520813, 0.0010079039968550205, 0.0011336000263690946, 0.0023994879946112628, 0.0026020160019397734, 0.0034241919778287416]
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.668
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.709
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.725
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.920
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.296
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.990
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.140
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.765
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.840
2023-05-15 23:38:18,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.711
2023-05-15 23:38:18,133 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:18,133 - optimal_runtime.py[116] - INFO: avg ratio: 0.8715767859157345
2023-05-15 23:38:18,133 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012230510051578007
2023-05-15 23:38:18,134 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00202368 0.00151277 0.00111862 0.0006275  0.00066842 0.00155745
 0.00185805 0.00711586 0.0080238  0.00342419]
2023-05-15 23:38:18,135 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:18,541 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:18,543 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.0]
2023-05-15 23:38:18,555 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 23:38:18,562 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 23:38:18,563 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -35139182592.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8, 0.0],
  'esti_latency': 0.0004258593639093547,
  'esti_test_accuracy': 0.005899999999999999,
  'is_relaxed': False,
  'model_size': 18212545.0,
  'update_swap_mem_cost': 4253414.0,
  'update_swap_time_cost': 0.019922971725463867}
2023-05-15 23:38:18,591 - gen_series_legodnn_models.py[28] - INFO: target model size: 18.085MB
2023-05-15 23:38:18,591 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 18963892.07070707B (18.085MB), try to adapt blocks
2023-05-15 23:38:18,593 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:18,654 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05078224182128906
2023-05-15 23:38:18,655 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.00099923200532794, 0.0010038720071315764, 0.0008808320015668868, 0.0008288319930434226, 0.0005888000056147576, 0.0011131200194358826, 0.0018707520142197608, 0.002165343999862671, 0.002458304040133953, 0.0027273279801011087]
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.963
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.002
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.760
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.030
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.487
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.896
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.829
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.848
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.889
2023-05-15 23:38:18,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.892
2023-05-15 23:38:18,656 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:18,656 - optimal_runtime.py[116] - INFO: avg ratio: 0.8847580545846021
2023-05-15 23:38:18,656 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012048297933686834
2023-05-15 23:38:18,656 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00140422 0.0010706  0.00106835 0.00059352 0.00058222 0.00172003
 0.00255766 0.00642149 0.00758064 0.00272733]
2023-05-15 23:38:18,658 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:19,014 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:19,016 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 23:38:19,023 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.8) from file
2023-05-15 23:38:19,031 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 23:38:19,043 - pure_runtime.py[42] - DEBUG: load 7th block (block-7) (sparsity 0.4) from file
2023-05-15 23:38:19,049 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 23:38:19,050 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -33536270336.0,
  'blocks_sparsity': [0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8],
  'esti_latency': 0.0023702986418540056,
  'esti_test_accuracy': 0.0061,
  'is_relaxed': False,
  'model_size': 18963073.0,
  'update_swap_mem_cost': 25557918.0,
  'update_swap_time_cost': 0.03396892547607422}
2023-05-15 23:38:19,078 - gen_series_legodnn_models.py[28] - INFO: target model size: 18.585MB
2023-05-15 23:38:19,079 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 19487355.272727273B (18.585MB), try to adapt blocks
2023-05-15 23:38:19,080 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:19,204 - optimal_runtime.py[77] - INFO: infer time of current model: 0.11325619506835938
2023-05-15 23:38:19,205 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010437439940869809, 0.0010226879976689817, 0.0005823680013418198, 0.0007806079983711243, 0.0006529919952154161, 0.0009041280001401902, 0.0010561600141227245, 0.0041196480095386494, 0.002467391960322857, 0.0019680639468133447]
2023-05-15 23:38:19,206 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.922
2023-05-15 23:38:19,207 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.983
2023-05-15 23:38:19,207 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.408
2023-05-15 23:38:19,207 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.156
2023-05-15 23:38:19,207 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.341
2023-05-15 23:38:19,214 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.103
2023-05-15 23:38:19,214 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.224
2023-05-15 23:38:19,215 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.913
2023-05-15 23:38:19,215 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.886
2023-05-15 23:38:19,216 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:19,216 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:19,217 - optimal_runtime.py[116] - INFO: avg ratio: 1.0754238100942972
2023-05-15 23:38:19,217 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009912211856207415
2023-05-15 23:38:19,218 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146678 0.00109066 0.00057651 0.00055898 0.0006457  0.00139709
 0.00173112 0.00596799 0.00760866 0.002706  ]
2023-05-15 23:38:19,227 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:19,617 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:19,618 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 23:38:19,624 - pure_runtime.py[42] - DEBUG: load 2th block (block-2) (sparsity 0.4) from file
2023-05-15 23:38:19,625 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -31569928192.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8],
  'esti_latency': 0.000653455268142639,
  'esti_test_accuracy': 0.006233333333333334,
  'is_relaxed': False,
  'model_size': 19083393.0,
  'update_swap_mem_cost': 283010.0,
  'update_swap_time_cost': 0.006332874298095703}
2023-05-15 23:38:19,654 - gen_series_legodnn_models.py[28] - INFO: target model size: 19.084MB
2023-05-15 23:38:19,654 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 20010818.474747475B (19.084MB), try to adapt blocks
2023-05-15 23:38:19,655 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:19,718 - optimal_runtime.py[77] - INFO: infer time of current model: 0.050491584777832034
2023-05-15 23:38:19,718 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001039039995521307, 0.0011066239997744559, 0.0008447360023856162, 0.0007536959946155547, 0.0006008000001311302, 0.0009101439863443376, 0.0010790719836950302, 0.0041630079299211495, 0.0024944319874048233, 0.0019738880321383476]
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.926
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.792
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.233
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.458
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.096
2023-05-15 23:38:19,718 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.198
2023-05-15 23:38:19,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.903
2023-05-15 23:38:19,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.876
2023-05-15 23:38:19,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.897
2023-05-15 23:38:19,719 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:19,719 - optimal_runtime.py[116] - INFO: avg ratio: 1.006033401544323
2023-05-15 23:38:19,719 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010595899325510418
2023-05-15 23:38:19,720 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146017 0.00118018 0.00102457 0.00053971 0.00059409 0.00140639
 0.00176867 0.00603081 0.00769205 0.00271401]
2023-05-15 23:38:19,722 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:20,105 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:20,107 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.8]
2023-05-15 23:38:20,108 - gen_series_legodnn_models.py[28] - INFO: target model size: 19.583MB
2023-05-15 23:38:20,110 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 20534281.676767677B (19.583MB), try to adapt blocks
2023-05-15 23:38:20,113 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:20,233 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09757759857177735
2023-05-15 23:38:20,233 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010432319976389408, 0.001019231989979744, 0.0007815999947488308, 0.0006390719935297967, 0.0005131520032882691, 0.0008403840027749539, 0.001007167998701334, 0.00408512007817626, 0.0024421439729630946, 0.001912831958383322]
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.922
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.987
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.856
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.633
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.707
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.187
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.284
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.920
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.895
2023-05-15 23:38:20,234 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.925
2023-05-15 23:38:20,235 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:20,235 - optimal_runtime.py[116] - INFO: avg ratio: 1.0758418712609794
2023-05-15 23:38:20,235 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009908360071885105
2023-05-15 23:38:20,235 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00146606 0.00108698 0.000948   0.00045763 0.00050742 0.00129859
 0.00165082 0.00591798 0.00753081 0.00263006]
2023-05-15 23:38:20,237 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:20,496 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:20,497 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 23:38:20,511 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 23:38:20,512 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -25979035648.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4],
  'esti_latency': 0.0012072825841626736,
  'esti_test_accuracy': 0.0068000000000000005,
  'is_relaxed': False,
  'model_size': 20449089.0,
  'update_swap_mem_cost': 7375804.0,
  'update_swap_time_cost': 0.014449119567871094}
2023-05-15 23:38:20,542 - gen_series_legodnn_models.py[28] - INFO: target model size: 20.082MB
2023-05-15 23:38:20,542 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 21057744.87878788B (20.082MB), try to adapt blocks
2023-05-15 23:38:20,543 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:20,600 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04691567993164063
2023-05-15 23:38:20,601 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010773440152406694, 0.0010658880025148391, 0.0008188159950077534, 0.000628927994519472, 0.0005200319960713386, 0.0010159039944410324, 0.0011914879679679872, 0.004256288096308709, 0.002482112020254135, 0.0028590399399399755]
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.893
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.943
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.817
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.675
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.684
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.982
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.085
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.883
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.880
2023-05-15 23:38:20,601 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.784
2023-05-15 23:38:20,602 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:20,602 - optimal_runtime.py[116] - INFO: avg ratio: 0.9946934716373685
2023-05-15 23:38:20,602 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010716697097968545
2023-05-15 23:38:20,603 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151399 0.00113673 0.00099314 0.00045037 0.00051422 0.00156981
 0.00195293 0.00616594 0.00765406 0.00310445]
2023-05-15 23:38:20,604 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:20,927 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:20,928 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 23:38:20,935 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 23:38:20,943 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.4) from file
2023-05-15 23:38:20,944 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -21116002304.0,
  'blocks_sparsity': [0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4],
  'esti_latency': 0.002029225953180001,
  'esti_test_accuracy': 0.0068000000000000005,
  'is_relaxed': False,
  'model_size': 20613953.0,
  'update_swap_mem_cost': 412000.0,
  'update_swap_time_cost': 0.015315055847167969}
2023-05-15 23:38:20,992 - gen_series_legodnn_models.py[28] - INFO: target model size: 20.581MB
2023-05-15 23:38:20,993 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 21581208.08080808B (20.581MB), try to adapt blocks
2023-05-15 23:38:20,995 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:21,105 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09405632019042968
2023-05-15 23:38:21,106 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014181759916245935, 0.001328000009059906, 0.000842303991317749, 0.0007749120071530341, 0.0006412480100989341, 0.0009532800018787384, 0.0011163520067930222, 0.0041662719920277595, 0.0024553599357604976, 0.002674399998039007]
2023-05-15 23:38:21,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.740
2023-05-15 23:38:21,107 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.009
2023-05-15 23:38:21,108 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.794
2023-05-15 23:38:21,108 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.171
2023-05-15 23:38:21,108 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.366
2023-05-15 23:38:21,109 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.046
2023-05-15 23:38:21,109 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.158
2023-05-15 23:38:21,110 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.902
2023-05-15 23:38:21,110 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.890
2023-05-15 23:38:21,110 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.838
2023-05-15 23:38:21,111 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:21,112 - optimal_runtime.py[116] - INFO: avg ratio: 0.9715596787576241
2023-05-15 23:38:21,112 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010971872211180721
2023-05-15 23:38:21,113 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00182663 0.001063   0.00102162 0.0005549  0.00063408 0.00147304
 0.00182978 0.00603554 0.00757156 0.00290396]
2023-05-15 23:38:21,114 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:21,419 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:21,420 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.4]
2023-05-15 23:38:21,427 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 23:38:21,435 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 23:38:21,435 - gen_series_legodnn_models.py[28] - INFO: target model size: 21.081MB
2023-05-15 23:38:21,435 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 22104671.282828283B (21.081MB), try to adapt blocks
2023-05-15 23:38:21,437 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:21,572 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1226561279296875
2023-05-15 23:38:21,573 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010328639894723892, 0.0010295039974153042, 0.006823423877358437, 0.0007812160030007363, 0.010627455584704876, 0.0009690559804439543, 0.001117247998714447, 0.004176352024078369, 0.0025135040283203124, 0.0027316800467669967]
2023-05-15 23:38:21,574 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.931
2023-05-15 23:38:21,574 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.977
2023-05-15 23:38:21,574 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.007 = 0.098
2023-05-15 23:38:21,575 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.154
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.011 = 0.082
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.029
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.157
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.900
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.869
2023-05-15 23:38:21,584 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.820
2023-05-15 23:38:21,585 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:21,585 - optimal_runtime.py[116] - INFO: avg ratio: 0.9549637753880574
2023-05-15 23:38:21,585 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011162547643791761
2023-05-15 23:38:21,585 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145149 0.00109793 0.00827607 0.00055942 0.01050874 0.00149742
 0.00183125 0.00605014 0.00775086 0.00296616]
2023-05-15 23:38:21,587 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:21,831 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:21,832 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 23:38:21,846 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 23:38:21,846 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -19621076992.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0],
  'esti_latency': 0.0012098511990368457,
  'esti_test_accuracy': 0.006933333333333333,
  'is_relaxed': False,
  'model_size': 22002177.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.014277219772338867}
2023-05-15 23:38:21,879 - gen_series_legodnn_models.py[28] - INFO: target model size: 21.580MB
2023-05-15 23:38:21,879 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 22628134.484848484B (21.580MB), try to adapt blocks
2023-05-15 23:38:21,880 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:22,002 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1109994888305664
2023-05-15 23:38:22,004 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001120448000729084, 0.001120384007692337, 0.0008551359996199608, 0.0007898560017347336, 0.0006357759907841681, 0.0009726720005273819, 0.0011223679780960085, 0.004189215987920761, 0.002513504058122635, 0.0028605440333485605]
2023-05-15 23:38:22,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.859
2023-05-15 23:38:22,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.897
2023-05-15 23:38:22,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.782
2023-05-15 23:38:22,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.130
2023-05-15 23:38:22,006 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.378
2023-05-15 23:38:22,006 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.026
2023-05-15 23:38:22,007 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.152
2023-05-15 23:38:22,007 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.897
2023-05-15 23:38:22,007 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.869
2023-05-15 23:38:22,008 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.851
2023-05-15 23:38:22,009 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:22,009 - optimal_runtime.py[116] - INFO: avg ratio: 0.9679044667275011
2023-05-15 23:38:22,010 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011013306588929668
2023-05-15 23:38:22,025 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00157457 0.00119485 0.00103719 0.0005656  0.00062867 0.00150301
 0.00183964 0.00606878 0.00775086 0.00286054]
2023-05-15 23:38:22,027 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:22,343 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:22,344 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 23:38:22,344 - gen_series_legodnn_models.py[28] - INFO: target model size: 22.079MB
2023-05-15 23:38:22,344 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 23151597.686868686B (22.079MB), try to adapt blocks
2023-05-15 23:38:22,345 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:22,408 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04605462265014648
2023-05-15 23:38:22,408 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013759039863944053, 0.001038943998515606, 0.0007679360024631024, 0.0006453760080039501, 0.0005258560031652451, 0.0008422400020062923, 0.001011520002037287, 0.004080576036125422, 0.0024760319590568544, 0.002747936010360718]
2023-05-15 23:38:22,408 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.699
2023-05-15 23:38:22,408 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.968
2023-05-15 23:38:22,408 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.871
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.607
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.666
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.184
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.278
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.883
2023-05-15 23:38:22,409 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.886
2023-05-15 23:38:22,409 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:22,409 - optimal_runtime.py[116] - INFO: avg ratio: 1.0395396445858556
2023-05-15 23:38:22,409 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010254374324618698
2023-05-15 23:38:22,410 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00193356 0.001108   0.00093142 0.00046214 0.00051998 0.00130146
 0.00165795 0.00591139 0.00763531 0.00274794]
2023-05-15 23:38:22,411 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:22,883 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:22,884 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 23:38:22,885 - gen_series_legodnn_models.py[28] - INFO: target model size: 22.578MB
2023-05-15 23:38:22,885 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 23675060.888888888B (22.578MB), try to adapt blocks
2023-05-15 23:38:22,886 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:22,942 - optimal_runtime.py[77] - INFO: infer time of current model: 0.044694206237792966
2023-05-15 23:38:22,943 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009953600019216538, 0.0010104000084102155, 0.0007737599946558475, 0.0006453760005533695, 0.0005281920023262501, 0.0008503360040485858, 0.0010216320157051086, 0.004100224107503891, 0.0024497599713504317, 0.002724544025957585]
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.966
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.995
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.865
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.607
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.658
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.173
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.265
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.917
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.892
2023-05-15 23:38:22,943 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.893
2023-05-15 23:38:22,944 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:22,944 - optimal_runtime.py[116] - INFO: avg ratio: 1.069477524000269
2023-05-15 23:38:22,944 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009967323671274987
2023-05-15 23:38:22,945 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00139878 0.00107756 0.00093849 0.00046214 0.00052229 0.00131397
 0.00167453 0.00593986 0.00755429 0.00272454]
2023-05-15 23:38:22,946 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:23,220 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:23,222 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.8, 0.0]
2023-05-15 23:38:23,223 - gen_series_legodnn_models.py[28] - INFO: target model size: 23.078MB
2023-05-15 23:38:23,223 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 24198524.09090909B (23.078MB), try to adapt blocks
2023-05-15 23:38:23,227 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:23,290 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0468724479675293
2023-05-15 23:38:23,291 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009913919791579248, 0.000999328002333641, 0.0007748160101473332, 0.0006422719918191432, 0.000512192003428936, 0.0008248319961130619, 0.001002271994948387, 0.004066976074129343, 0.0024422720037400726, 0.0027157439962029453]
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.970
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.006
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.864
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.620
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.710
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.209
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.290
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.924
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.895
2023-05-15 23:38:23,291 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.896
2023-05-15 23:38:23,292 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:23,292 - optimal_runtime.py[116] - INFO: avg ratio: 1.084961533341619
2023-05-15 23:38:23,292 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009825075187719133
2023-05-15 23:38:23,292 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00139321 0.00106575 0.00093977 0.00045992 0.00050647 0.00127456
 0.00164279 0.00589169 0.0075312  0.00271574]
2023-05-15 23:38:23,294 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:23,549 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:23,551 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 23:38:23,561 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 23:38:23,562 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -11916992512.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0],
  'esti_latency': 0.0015753820681474844,
  'esti_test_accuracy': 0.006966666666666667,
  'is_relaxed': False,
  'model_size': 23883777.0,
  'update_swap_mem_cost': 3849090.0,
  'update_swap_time_cost': 0.010728597640991211}
2023-05-15 23:38:23,606 - gen_series_legodnn_models.py[28] - INFO: target model size: 23.577MB
2023-05-15 23:38:23,606 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 24721987.29292929B (23.577MB), try to adapt blocks
2023-05-15 23:38:23,609 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:23,671 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04336124801635742
2023-05-15 23:38:23,671 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.000938560001552105, 0.0009953600019216538, 0.0007665280215442181, 0.0006334720067679882, 0.0005177920013666153, 0.00083737600967288, 0.0017386240027844908, 0.004081792071461678, 0.0024423679783940316, 0.002698560032993555]
2023-05-15 23:38:23,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.025
2023-05-15 23:38:23,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.010
2023-05-15 23:38:23,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.873
2023-05-15 23:38:23,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.656
2023-05-15 23:38:23,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.691
2023-05-15 23:38:23,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.191
2023-05-15 23:38:23,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.891
2023-05-15 23:38:23,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:23,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.895
2023-05-15 23:38:23,672 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.902
2023-05-15 23:38:23,672 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:23,672 - optimal_runtime.py[116] - INFO: avg ratio: 1.044432428276152
2023-05-15 23:38:23,672 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010206336333752695
2023-05-15 23:38:23,673 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00131896 0.00106152 0.00092972 0.00045362 0.00051201 0.00129394
 0.00237702 0.00591315 0.0075315  0.00269856]
2023-05-15 23:38:23,674 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:23,905 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:23,905 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 23:38:23,911 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 23:38:23,911 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -9020301312.0,
  'blocks_sparsity': [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0],
  'esti_latency': 0.001852236059220632,
  'esti_test_accuracy': 0.006966666666666667,
  'is_relaxed': False,
  'model_size': 23928257.0,
  'update_swap_mem_cost': 123196.0,
  'update_swap_time_cost': 0.00573420524597168}
2023-05-15 23:38:23,942 - gen_series_legodnn_models.py[28] - INFO: target model size: 24.076MB
2023-05-15 23:38:23,942 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 25245450.494949494B (24.076MB), try to adapt blocks
2023-05-15 23:38:23,944 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:23,998 - optimal_runtime.py[77] - INFO: infer time of current model: 0.043970046997070314
2023-05-15 23:38:23,999 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012724800147116185, 0.000981216002255678, 0.0007606399841606617, 0.0006163520067930221, 0.0004999999962747096, 0.0008118720091879368, 0.0017150720469653602, 0.004058655928820371, 0.002566016010940075, 0.003034880012273788]
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.825
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.025
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.880
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.730
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.000 = 1.752
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.229
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.904
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.926
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.852
2023-05-15 23:38:23,999 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.802
2023-05-15 23:38:24,000 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:24,000 - optimal_runtime.py[116] - INFO: avg ratio: 1.0214605425707708
2023-05-15 23:38:24,000 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010435869225096268
2023-05-15 23:38:24,001 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00163898 0.00104643 0.00092257 0.00044136 0.00049441 0.00125453
 0.00234482 0.00587964 0.00791279 0.00303488]
2023-05-15 23:38:24,002 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:24,379 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:24,380 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 23:38:24,392 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 23:38:24,392 - gen_series_legodnn_models.py[28] - INFO: target model size: 24.575MB
2023-05-15 23:38:24,392 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 25768913.696969695B (24.575MB), try to adapt blocks
2023-05-15 23:38:24,393 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:24,506 - optimal_runtime.py[77] - INFO: infer time of current model: 0.08760358428955078
2023-05-15 23:38:24,507 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012233919948339462, 0.0012026559934020043, 0.0009594240114092828, 0.0009167999923229217, 0.0007258879914879799, 0.001123007990419865, 0.0019423040002584458, 0.004294880084693431, 0.00261017607152462, 0.0029836159646511075]
2023-05-15 23:38:24,508 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.786
2023-05-15 23:38:24,508 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.836
2023-05-15 23:38:24,508 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.697
2023-05-15 23:38:24,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.835
2023-05-15 23:38:24,509 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.207
2023-05-15 23:38:24,510 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.888
2023-05-15 23:38:24,510 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.798
2023-05-15 23:38:24,510 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.875
2023-05-15 23:38:24,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.837
2023-05-15 23:38:24,511 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.816
2023-05-15 23:38:24,512 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:24,513 - optimal_runtime.py[116] - INFO: avg ratio: 0.8600977174589368
2023-05-15 23:38:24,513 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012393741344132065
2023-05-15 23:38:24,515 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00171924 0.00128259 0.00116368 0.00065651 0.00071778 0.00173531
 0.00265549 0.00622185 0.00804897 0.00298362]
2023-05-15 23:38:24,517 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:24,871 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:24,872 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 23:38:24,880 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 23:38:24,881 - gen_series_legodnn_models.py[28] - INFO: target model size: 25.074MB
2023-05-15 23:38:24,881 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 26292376.898989897B (25.074MB), try to adapt blocks
2023-05-15 23:38:24,882 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:24,946 - optimal_runtime.py[77] - INFO: infer time of current model: 0.051646270751953126
2023-05-15 23:38:24,946 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0016888960152864453, 0.0010084159933030604, 0.0007584959976375102, 0.0006419520042836665, 0.0005255040004849433, 0.000830463994294405, 0.0017334400005638599, 0.004083136033266784, 0.0024261760637164114, 0.0027830079868435857]
2023-05-15 23:38:24,946 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.621
2023-05-15 23:38:24,946 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.997
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.882
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.621
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.667
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.201
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.894
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.901
2023-05-15 23:38:24,947 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.874
2023-05-15 23:38:24,947 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:24,948 - optimal_runtime.py[116] - INFO: avg ratio: 0.9954034378203169
2023-05-15 23:38:24,948 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010709053471029583
2023-05-15 23:38:24,948 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00217533 0.00107544 0.00091997 0.00045969 0.00051963 0.00128326
 0.00236993 0.0059151  0.00748157 0.00278301]
2023-05-15 23:38:24,950 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:25,391 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:25,391 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8, 0.0]
2023-05-15 23:38:25,399 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.8) from file
2023-05-15 23:38:25,400 - gen_series_legodnn_models.py[28] - INFO: target model size: 25.574MB
2023-05-15 23:38:25,400 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 26815840.1010101B (25.574MB), try to adapt blocks
2023-05-15 23:38:25,401 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:25,461 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04760953521728516
2023-05-15 23:38:25,461 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013958400040864944, 0.0011888320073485375, 0.0009438719898462296, 0.0009042560085654259, 0.0007327359989285469, 0.0010988480076193807, 0.0019414400011301038, 0.0041716799214482295, 0.0024784640222787857, 0.0027830400168895727]
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.689
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.846
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.709
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.861
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.195
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.908
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.798
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.901
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.882
2023-05-15 23:38:25,462 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.874
2023-05-15 23:38:25,463 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:25,463 - optimal_runtime.py[116] - INFO: avg ratio: 0.8669651266102103
2023-05-15 23:38:25,463 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012295567968856872
2023-05-15 23:38:25,463 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00196158 0.00126785 0.00114481 0.00064753 0.00072455 0.00169798
 0.0026543  0.00604337 0.00764281 0.00278304]
2023-05-15 23:38:25,465 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:25,781 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:25,782 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 23:38:25,790 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.8) from file
2023-05-15 23:38:25,804 - pure_runtime.py[42] - DEBUG: load 8th block (block-8) (sparsity 0.4) from file
2023-05-15 23:38:25,835 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.8) from file
2023-05-15 23:38:25,836 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': -609247232.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8],
  'esti_latency': 0.004933524024518437,
  'esti_test_accuracy': 0.0071,
  'is_relaxed': False,
  'model_size': 26643841.0,
  'update_swap_mem_cost': 27992704.0,
  'update_swap_time_cost': 0.05409836769104004}
2023-05-15 23:38:25,878 - gen_series_legodnn_models.py[28] - INFO: target model size: 26.073MB
2023-05-15 23:38:25,878 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 27339303.3030303B (26.073MB), try to adapt blocks
2023-05-15 23:38:25,880 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:25,937 - optimal_runtime.py[77] - INFO: infer time of current model: 0.046222816467285155
2023-05-15 23:38:25,937 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009659519903361796, 0.0010197439976036549, 0.0007865599989891051, 0.0006691520065069199, 0.0005670080035924911, 0.0008557440042495728, 0.001012864001095295, 0.004099712111055851, 0.00500700818002224, 0.0019684159718453883]
2023-05-15 23:38:25,937 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.996
2023-05-15 23:38:25,937 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.986
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.851
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.515
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.545
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.166
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.276
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.917
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.903
2023-05-15 23:38:25,938 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:25,938 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:25,939 - optimal_runtime.py[116] - INFO: avg ratio: 1.0598104652606688
2023-05-15 23:38:25,939 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010058240591389683
2023-05-15 23:38:25,939 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00135745 0.00108752 0.00095401 0.00047917 0.00056067 0.00132233
 0.00166016 0.00593911 0.00746507 0.00270648]
2023-05-15 23:38:25,941 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:26,260 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:26,261 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 23:38:26,262 - gen_series_legodnn_models.py[28] - INFO: target model size: 26.572MB
2023-05-15 23:38:26,262 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 27862766.505050503B (26.572MB), try to adapt blocks
2023-05-15 23:38:26,265 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:26,391 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09781654357910156
2023-05-15 23:38:26,392 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010652800053358078, 0.0010481599867343903, 0.0008220160007476806, 0.0007935039922595024, 0.0006413439959287644, 0.0009656959995627403, 0.0011219200119376182, 0.0041794880032539365, 0.0050484478697180755, 0.0020523840226233008]
2023-05-15 23:38:26,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.903
2023-05-15 23:38:26,393 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.959
2023-05-15 23:38:26,393 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.814
2023-05-15 23:38:26,393 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.121
2023-05-15 23:38:26,393 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.366
2023-05-15 23:38:26,394 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.033
2023-05-15 23:38:26,394 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.152
2023-05-15 23:38:26,394 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.900
2023-05-15 23:38:26,394 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.895
2023-05-15 23:38:26,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.862
2023-05-15 23:38:26,395 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:26,396 - optimal_runtime.py[116] - INFO: avg ratio: 0.9871646687778218
2023-05-15 23:38:26,396 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010798430067459818
2023-05-15 23:38:26,397 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149704 0.00111783 0.00099702 0.00056822 0.00063418 0.00149223
 0.00183891 0.00605468 0.00752685 0.00282193]
2023-05-15 23:38:26,399 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:26,693 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:26,693 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.8]
2023-05-15 23:38:26,694 - gen_series_legodnn_models.py[28] - INFO: target model size: 27.071MB
2023-05-15 23:38:26,694 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 28386229.707070705B (27.071MB), try to adapt blocks
2023-05-15 23:38:26,695 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:26,769 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06195193481445312
2023-05-15 23:38:26,770 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001053248018026352, 0.001242336004972458, 0.0008599999994039535, 0.0007993919998407363, 0.0006538879945874215, 0.000976832002401352, 0.0011211840063333513, 0.004357344016432762, 0.005228191897273064, 0.0021078399159014227]
2023-05-15 23:38:26,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.913
2023-05-15 23:38:26,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.809
2023-05-15 23:38:26,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.778
2023-05-15 23:38:26,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.105
2023-05-15 23:38:26,770 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.339
2023-05-15 23:38:26,771 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.021
2023-05-15 23:38:26,771 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.153
2023-05-15 23:38:26,771 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.863
2023-05-15 23:38:26,771 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.865
2023-05-15 23:38:26,771 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.840
2023-05-15 23:38:26,772 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:26,772 - optimal_runtime.py[116] - INFO: avg ratio: 0.9534998884046115
2023-05-15 23:38:26,772 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01117968525271711
2023-05-15 23:38:26,773 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148013 0.00132491 0.00104309 0.00057243 0.00064658 0.00150944
 0.0018377  0.00631234 0.00779484 0.00289818]
2023-05-15 23:38:26,775 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:27,120 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:27,121 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 23:38:27,133 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.4) from file
2023-05-15 23:38:27,134 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 4981645312.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4],
  'esti_latency': 0.004721539924557698,
  'esti_test_accuracy': 0.007666666666666667,
  'is_relaxed': False,
  'model_size': 28009537.0,
  'update_swap_mem_cost': 7375804.0,
  'update_swap_time_cost': 0.012138843536376953}
2023-05-15 23:38:27,169 - gen_series_legodnn_models.py[28] - INFO: target model size: 27.570MB
2023-05-15 23:38:27,169 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 28909692.90909091B (27.570MB), try to adapt blocks
2023-05-15 23:38:27,170 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:27,232 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05003142547607422
2023-05-15 23:38:27,232 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012297599762678144, 0.0012896960079669952, 0.0009759359955787657, 0.0007770560011267663, 0.0005779839977622032, 0.0008975359909236431, 0.0010896639972925186, 0.004235104039311409, 0.00501481582224369, 0.0026415679529309274]
2023-05-15 23:38:27,232 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.782
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.780
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.686
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.165
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.515
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.111
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.186
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.888
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.901
2023-05-15 23:38:27,233 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.848
2023-05-15 23:38:27,233 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:27,233 - optimal_runtime.py[116] - INFO: avg ratio: 0.8978571714054373
2023-05-15 23:38:27,233 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011872521577322104
2023-05-15 23:38:27,234 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00172818 0.00137542 0.0011837  0.00055644 0.00057153 0.0013869
 0.00178604 0.00613525 0.00747671 0.00286831]
2023-05-15 23:38:27,235 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:27,529 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:27,531 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 23:38:27,531 - gen_series_legodnn_models.py[28] - INFO: target model size: 28.070MB
2023-05-15 23:38:27,532 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 29433156.111111112B (28.070MB), try to adapt blocks
2023-05-15 23:38:27,534 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:27,598 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04713014221191406
2023-05-15 23:38:27,599 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010544639900326729, 0.0010497600063681602, 0.0007836159989237785, 0.0008448320105671882, 0.0006652799881994724, 0.0008815039955079555, 0.001023999981582165, 0.004100319959223271, 0.005014687962830067, 0.0026368319429457185]
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.912
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.958
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.854
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.992
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.316
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.132
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.263
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.917
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.901
2023-05-15 23:38:27,599 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.850
2023-05-15 23:38:27,600 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:27,600 - optimal_runtime.py[116] - INFO: avg ratio: 1.01142947483488
2023-05-15 23:38:27,600 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010539369185977802
2023-05-15 23:38:27,601 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148184 0.00111953 0.00095044 0.00060497 0.00065785 0.00136213
 0.00167841 0.00593999 0.00747652 0.00286317]
2023-05-15 23:38:27,602 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:27,817 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:27,819 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4]
2023-05-15 23:38:27,819 - gen_series_legodnn_models.py[28] - INFO: target model size: 28.569MB
2023-05-15 23:38:27,819 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 29956619.313131314B (28.569MB), try to adapt blocks
2023-05-15 23:38:27,823 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:27,912 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07148105621337891
2023-05-15 23:38:27,913 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001156480010598898, 0.0011139200031757355, 0.0008493440002202989, 0.0007840640023350716, 0.0006525439992547035, 0.0009646720066666604, 0.0011208959966897965, 0.0042785280570387845, 0.005066079966723919, 0.002771071963012218]
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.832
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.903
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.788
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.146
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.342
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.034
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.153
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.879
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.892
2023-05-15 23:38:27,913 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.809
2023-05-15 23:38:27,914 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:27,914 - optimal_runtime.py[116] - INFO: avg ratio: 0.9590694876582355
2023-05-15 23:38:27,914 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01111476152462383
2023-05-15 23:38:27,915 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0016252  0.00118796 0.00103016 0.00056146 0.00064525 0.00149065
 0.00183723 0.00619816 0.00755314 0.00300893]
2023-05-15 23:38:27,917 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:28,166 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:28,167 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 23:38:28,188 - pure_runtime.py[42] - DEBUG: load 9th block (block-9) (sparsity 0.0) from file
2023-05-15 23:38:28,188 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 11339603968.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0],
  'esti_latency': 0.004972077669789478,
  'esti_test_accuracy': 0.0078000000000000005,
  'is_relaxed': False,
  'model_size': 29562625.0,
  'update_swap_mem_cost': 10294588.0,
  'update_swap_time_cost': 0.020822525024414062}
2023-05-15 23:38:28,222 - gen_series_legodnn_models.py[28] - INFO: target model size: 29.068MB
2023-05-15 23:38:28,222 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 30480082.515151516B (29.068MB), try to adapt blocks
2023-05-15 23:38:28,223 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:28,279 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04502256011962891
2023-05-15 23:38:28,280 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009492799937725067, 0.0009833280071616171, 0.0007663040049374103, 0.0006547520011663437, 0.0005164159871637821, 0.0008065599985420703, 0.0009954879693686962, 0.0040637761168181895, 0.00500838402658701, 0.0027220479510724543]
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.013
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.023
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.873
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.570
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.696
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.237
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.299
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.925
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.902
2023-05-15 23:38:28,280 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.894
2023-05-15 23:38:28,281 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:28,281 - optimal_runtime.py[116] - INFO: avg ratio: 1.0957996086403345
2023-05-15 23:38:28,281 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.009727899660496442
2023-05-15 23:38:28,281 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00133403 0.00104869 0.00092944 0.00046886 0.00051065 0.00124633
 0.00163167 0.00588705 0.00746712 0.00272205]
2023-05-15 23:38:28,283 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:28,567 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:28,568 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 23:38:28,569 - gen_series_legodnn_models.py[28] - INFO: target model size: 29.567MB
2023-05-15 23:38:28,569 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 31003545.717171717B (29.567MB), try to adapt blocks
2023-05-15 23:38:28,572 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:28,644 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05534988784790039
2023-05-15 23:38:28,644 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011506559923291208, 0.0010504960007965563, 0.0008042559809982778, 0.0007058880031108856, 0.0005850239992141724, 0.0009034559950232506, 0.0010587199926376343, 0.004145216025412083, 0.005086015850305557, 0.002785664021968842]
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.836
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.957
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.832
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.384
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.497
2023-05-15 23:38:28,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.104
2023-05-15 23:38:28,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.221
2023-05-15 23:38:28,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.907
2023-05-15 23:38:28,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.889
2023-05-15 23:38:28,645 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.874
2023-05-15 23:38:28,645 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:28,645 - optimal_runtime.py[116] - INFO: avg ratio: 1.012976910780373
2023-05-15 23:38:28,645 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010523269116422772
2023-05-15 23:38:28,646 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00161702 0.00112032 0.00097548 0.00050548 0.00057849 0.00139605
 0.00173532 0.00600503 0.00758287 0.00278566]
2023-05-15 23:38:28,647 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:29,012 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:29,014 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.0]
2023-05-15 23:38:29,015 - gen_series_legodnn_models.py[28] - INFO: target model size: 30.066MB
2023-05-15 23:38:29,017 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 31527008.91919192B (30.066MB), try to adapt blocks
2023-05-15 23:38:29,020 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:29,136 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09300927734375
2023-05-15 23:38:29,137 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011703039929270745, 0.0011255359947681428, 0.0008592959903180599, 0.0007491520121693611, 0.0006068480014801024, 0.0009251199811697006, 0.0010843839831650257, 0.004171072110533715, 0.005015584163367748, 0.0027620159797370433]
2023-05-15 23:38:29,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.822
2023-05-15 23:38:29,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.893
2023-05-15 23:38:29,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.779
2023-05-15 23:38:29,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.246
2023-05-15 23:38:29,137 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.443
2023-05-15 23:38:29,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.078
2023-05-15 23:38:29,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.192
2023-05-15 23:38:29,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.901
2023-05-15 23:38:29,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.901
2023-05-15 23:38:29,138 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.881
2023-05-15 23:38:29,138 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:29,139 - optimal_runtime.py[116] - INFO: avg ratio: 0.9879325329467653
2023-05-15 23:38:29,139 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010790037057559728
2023-05-15 23:38:29,139 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00164463 0.00120035 0.00104223 0.00053646 0.00060007 0.00142953
 0.00177738 0.00604249 0.00747786 0.00276202]
2023-05-15 23:38:29,141 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:29,462 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:29,463 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:29,473 - pure_runtime.py[42] - DEBUG: load 6th block (block-6) (sparsity 0.4) from file
2023-05-15 23:38:29,474 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 19043688448.0,
  'blocks_sparsity': [0.8, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.004961985076211351,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31444225.0,
  'update_swap_mem_cost': 3849090.0,
  'update_swap_time_cost': 0.010595083236694336}
2023-05-15 23:38:29,527 - gen_series_legodnn_models.py[28] - INFO: target model size: 30.566MB
2023-05-15 23:38:29,528 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 32050472.12121212B (30.566MB), try to adapt blocks
2023-05-15 23:38:29,532 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:29,609 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06175328063964844
2023-05-15 23:38:29,610 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001182944007217884, 0.001174784004688263, 0.0009386239871382712, 0.0009147519990801813, 0.0007181759998202325, 0.0010529919788241386, 0.0018515839539468286, 0.004081823933869601, 0.004988480031490326, 0.01123907235264778]
2023-05-15 23:38:29,618 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.813
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.856
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.713
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.839
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.220
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.947
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.837
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.906
2023-05-15 23:38:29,619 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.011 = 0.217
2023-05-15 23:38:29,620 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8]),)
2023-05-15 23:38:29,620 - optimal_runtime.py[116] - INFO: avg ratio: 0.9016364184198729
2023-05-15 23:38:29,620 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01182275740319574
2023-05-15 23:38:29,621 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00166239 0.00125287 0.00113845 0.00065504 0.00071015 0.00162712
 0.00253145 0.0059132  0.00743745 0.01123907]
2023-05-15 23:38:29,623 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:29,982 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:29,984 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:29,993 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.0) from file
2023-05-15 23:38:29,994 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 22900744192.0,
  'blocks_sparsity': [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.005876872483402392,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31680129.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.009899616241455078}
2023-05-15 23:38:30,039 - gen_series_legodnn_models.py[28] - INFO: target model size: 31.065MB
2023-05-15 23:38:30,040 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 32573935.323232323B (31.065MB), try to adapt blocks
2023-05-15 23:38:30,043 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:30,130 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06986697387695312
2023-05-15 23:38:30,131 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0009560319855809211, 0.0012698239907622338, 0.0007559360042214394, 0.0006161280013620854, 0.000506656002253294, 0.000820576012134552, 0.0017723839506506918, 0.004129983961582183, 0.005022688031196594, 0.002783103961497545]
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.006
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.845
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.885
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.731
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.729
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.216
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.875
2023-05-15 23:38:30,131 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.910
2023-05-15 23:38:30,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:30,132 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.874
2023-05-15 23:38:30,132 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:30,132 - optimal_runtime.py[116] - INFO: avg ratio: 1.0265842330255672
2023-05-15 23:38:30,132 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010383783714900442
2023-05-15 23:38:30,133 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00134351 0.00126982 0.00091687 0.0004412  0.000501   0.00126798
 0.00242317 0.00598297 0.00748845 0.0027831 ]
2023-05-15 23:38:30,135 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:30,542 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:30,543 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:30,543 - gen_series_legodnn_models.py[28] - INFO: target model size: 31.564MB
2023-05-15 23:38:30,543 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 33097398.525252525B (31.564MB), try to adapt blocks
2023-05-15 23:38:30,545 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:30,615 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05491072082519531
2023-05-15 23:38:30,615 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001226687990128994, 0.0015304320380091668, 0.000880927972495556, 0.0007079040072858335, 0.0005596480034291743, 0.0008897919952869415, 0.0017611520141363145, 0.004125663973391057, 0.005021375998854638, 0.002785184025764465]
2023-05-15 23:38:30,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.784
2023-05-15 23:38:30,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.701
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.760
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.377
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.565
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.121
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.880
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.911
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:30,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.874
2023-05-15 23:38:30,616 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:30,617 - optimal_runtime.py[116] - INFO: avg ratio: 0.9439695077058725
2023-05-15 23:38:30,617 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011292556119499038
2023-05-15 23:38:30,617 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00172387 0.00153043 0.00106847 0.00050692 0.0005534  0.00137494
 0.00240782 0.00597671 0.00748649 0.00278518]
2023-05-15 23:38:30,619 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:30,966 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:30,967 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:30,967 - gen_series_legodnn_models.py[28] - INFO: target model size: 32.063MB
2023-05-15 23:38:30,967 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 33620861.72727273B (32.063MB), try to adapt blocks
2023-05-15 23:38:30,969 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:31,124 - optimal_runtime.py[77] - INFO: infer time of current model: 0.134053955078125
2023-05-15 23:38:31,125 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001128799982368946, 0.0013926080241799354, 0.000886752001941204, 0.0008495360016822815, 0.0006416639983654023, 0.0009800320044159889, 0.0018541759699583053, 0.0041870399713516224, 0.005044128060340881, 0.0028599679581820968]
2023-05-15 23:38:31,126 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.852
2023-05-15 23:38:31,126 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.770
2023-05-15 23:38:31,127 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.755
2023-05-15 23:38:31,127 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.981
2023-05-15 23:38:31,127 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.365
2023-05-15 23:38:31,128 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.018
2023-05-15 23:38:31,128 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.836
2023-05-15 23:38:31,128 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.898
2023-05-15 23:38:31,129 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.896
2023-05-15 23:38:31,129 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.851
2023-05-15 23:38:31,130 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:31,131 - optimal_runtime.py[116] - INFO: avg ratio: 0.9156014016252372
2023-05-15 23:38:31,131 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01164243372928736
2023-05-15 23:38:31,132 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158631 0.00139261 0.00107553 0.00060834 0.0006345  0.00151438
 0.002535   0.00606562 0.00752041 0.00285997]
2023-05-15 23:38:31,135 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:31,392 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:31,393 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:31,394 - gen_series_legodnn_models.py[28] - INFO: target model size: 32.563MB
2023-05-15 23:38:31,394 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 34144324.92929293B (32.563MB), try to adapt blocks
2023-05-15 23:38:31,397 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:31,462 - optimal_runtime.py[77] - INFO: infer time of current model: 0.047346561431884766
2023-05-15 23:38:31,462 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001036576010286808, 0.0013133760057389735, 0.0007860799953341484, 0.0006612799949944019, 0.0005282879993319511, 0.0008516160026192666, 0.0017186239883303642, 0.004079327922314405, 0.004981184013187886, 0.0027818559259176257]
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.928
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.817
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.851
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.545
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.658
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.171
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.902
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.922
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.907
2023-05-15 23:38:31,463 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.875
2023-05-15 23:38:31,464 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:31,464 - optimal_runtime.py[116] - INFO: avg ratio: 1.0033985721077774
2023-05-15 23:38:31,464 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010623723151680394
2023-05-15 23:38:31,465 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0014567  0.00131338 0.00095343 0.00047353 0.00052239 0.00131595
 0.00234967 0.00590958 0.00742657 0.00278186]
2023-05-15 23:38:31,467 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:31,787 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:31,789 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:31,789 - gen_series_legodnn_models.py[28] - INFO: target model size: 33.062MB
2023-05-15 23:38:31,790 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 34667788.13131313B (33.062MB), try to adapt blocks
2023-05-15 23:38:31,793 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:31,858 - optimal_runtime.py[77] - INFO: infer time of current model: 0.0489606704711914
2023-05-15 23:38:31,859 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010512000136077403, 0.0013222399875521661, 0.0007726720124483108, 0.0006378239952027798, 0.0005224640034139157, 0.00085164799913764, 0.001726400040090084, 0.004084576021879911, 0.004993952058255673, 0.0027252799943089483]
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.915
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.811
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.866
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.638
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.676
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.171
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.898
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.920
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.905
2023-05-15 23:38:31,859 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.893
2023-05-15 23:38:31,860 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:31,860 - optimal_runtime.py[116] - INFO: avg ratio: 1.006222589273106
2023-05-15 23:38:31,860 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010593907108133094
2023-05-15 23:38:31,861 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00147725 0.00132224 0.00093717 0.00045674 0.00051663 0.001316
 0.00236031 0.00591719 0.00744561 0.00272528]
2023-05-15 23:38:31,862 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:32,128 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:32,130 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:32,130 - gen_series_legodnn_models.py[28] - INFO: target model size: 33.561MB
2023-05-15 23:38:32,131 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 35191251.333333336B (33.561MB), try to adapt blocks
2023-05-15 23:38:32,133 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:32,284 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1198436508178711
2023-05-15 23:38:32,284 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010197439938783646, 0.0013195200189948084, 0.0007597440220415592, 0.0006249920092523099, 0.0005610879920423031, 0.0008362239785492422, 0.0017511039935052394, 0.0041153918728232385, 0.005021695785224438, 0.003205503959208727]
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.943
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.813
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.881
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.692
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.561
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.193
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.885
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.914
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:32,285 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.759
2023-05-15 23:38:32,286 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:32,286 - optimal_runtime.py[116] - INFO: avg ratio: 0.9831685453971105
2023-05-15 23:38:32,286 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010842320668994597
2023-05-15 23:38:32,287 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00143305 0.00131952 0.00092149 0.00044755 0.00055482 0.00129216
 0.00239408 0.00596183 0.00748697 0.0032055 ]
2023-05-15 23:38:32,289 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:32,560 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:32,561 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:32,561 - gen_series_legodnn_models.py[28] - INFO: target model size: 34.060MB
2023-05-15 23:38:32,561 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 35714714.535353534B (34.060MB), try to adapt blocks
2023-05-15 23:38:32,563 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:32,633 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05182992172241211
2023-05-15 23:38:32,634 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0012143999859690667, 0.0014279040098190308, 0.0008649280034005643, 0.0006577919907867908, 0.0005333120077848434, 0.0008498240150511265, 0.0017244480066001416, 0.004074560053646565, 0.004996448002755642, 0.0027214720696210858]
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.792
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.751
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.774
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.558
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.642
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.174
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.923
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.905
2023-05-15 23:38:32,634 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.894
2023-05-15 23:38:32,635 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:32,635 - optimal_runtime.py[116] - INFO: avg ratio: 0.9725707893891141
2023-05-15 23:38:32,635 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010960465559077748
2023-05-15 23:38:32,635 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0017066  0.0014279  0.00104906 0.00047104 0.00052735 0.00131318
 0.00235764 0.00590268 0.00744933 0.00272147]
2023-05-15 23:38:32,637 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:32,925 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:32,925 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:32,926 - gen_series_legodnn_models.py[28] - INFO: target model size: 34.559MB
2023-05-15 23:38:32,926 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 36238177.73737374B (34.559MB), try to adapt blocks
2023-05-15 23:38:32,927 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:33,002 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06403523254394532
2023-05-15 23:38:33,003 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0016219199746847152, 0.0013013760000467301, 0.0007568959929049016, 0.0006376959979534149, 0.0010959040075540541, 0.002251392021775246, 0.0018662080094218254, 0.004200159937143326, 0.005053920045495034, 0.002866879943758249]
2023-05-15 23:38:33,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.593
2023-05-15 23:38:33,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.824
2023-05-15 23:38:33,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.884
2023-05-15 23:38:33,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.639
2023-05-15 23:38:33,006 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.799
2023-05-15 23:38:33,006 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.443
2023-05-15 23:38:33,007 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.831
2023-05-15 23:38:33,007 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.895
2023-05-15 23:38:33,008 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.894
2023-05-15 23:38:33,009 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.849
2023-05-15 23:38:33,010 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:33,011 - optimal_runtime.py[116] - INFO: avg ratio: 0.779137486289999
2023-05-15 23:38:33,012 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.013681575881585552
2023-05-15 23:38:33,013 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00227929 0.00130138 0.00091803 0.00045665 0.00108366 0.00347893
 0.00255145 0.00608463 0.00753501 0.00286688]
2023-05-15 23:38:33,015 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:33,373 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:33,374 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:33,374 - gen_series_legodnn_models.py[28] - INFO: target model size: 35.059MB
2023-05-15 23:38:33,375 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 36761640.93939394B (35.059MB), try to adapt blocks
2023-05-15 23:38:33,378 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:33,529 - optimal_runtime.py[77] - INFO: infer time of current model: 0.12485686492919922
2023-05-15 23:38:33,529 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010757439918816088, 0.0013436799645423889, 0.0008661440014839173, 0.0008146239891648294, 0.0006660480052232743, 0.0009783040210604667, 0.0018392320051789286, 0.004176512122154236, 0.0050434240177273755, 0.0027304640077054497]
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.894
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.798
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.772
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.066
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.315
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.020
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.843
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.900
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.896
2023-05-15 23:38:33,529 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.891
2023-05-15 23:38:33,530 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:33,530 - optimal_runtime.py[116] - INFO: avg ratio: 0.9255334207715765
2023-05-15 23:38:33,530 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01151749726333795
2023-05-15 23:38:33,531 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151175 0.00134368 0.00105054 0.00058334 0.00065861 0.00151171
 0.00251457 0.00605037 0.00751936 0.00273046]
2023-05-15 23:38:33,532 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:33,846 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:33,847 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:33,847 - gen_series_legodnn_models.py[28] - INFO: target model size: 35.558MB
2023-05-15 23:38:33,847 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 37285104.14141414B (35.558MB), try to adapt blocks
2023-05-15 23:38:33,849 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:33,922 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05967795181274414
2023-05-15 23:38:33,923 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001079679999500513, 0.0013373439982533456, 0.0007988159917294979, 0.0007048320174217223, 0.0005783040039241314, 0.000927839994430542, 0.0017828160338103768, 0.004134592086076736, 0.005034559987485409, 0.0027815999500453476]
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.891
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.802
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.838
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.387
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.514
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.075
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.869
2023-05-15 23:38:33,923 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.909
2023-05-15 23:38:33,924 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.898
2023-05-15 23:38:33,924 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.875
2023-05-15 23:38:33,924 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:33,924 - optimal_runtime.py[116] - INFO: avg ratio: 0.9634878783561973
2023-05-15 23:38:33,924 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011063791128385687
2023-05-15 23:38:33,925 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00151728 0.00133734 0.00096888 0.00050472 0.00057184 0.00143373
 0.00243744 0.00598964 0.00750615 0.0027816 ]
2023-05-15 23:38:33,927 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:34,250 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:34,250 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:34,251 - gen_series_legodnn_models.py[28] - INFO: target model size: 36.057MB
2023-05-15 23:38:34,251 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 37808567.34343434B (36.057MB), try to adapt blocks
2023-05-15 23:38:34,252 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:34,316 - optimal_runtime.py[77] - INFO: infer time of current model: 0.049355167388916016
2023-05-15 23:38:34,316 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010536959841847418, 0.0013240000382065773, 0.0007763199992477895, 0.000643360011279583, 0.0005453760027885437, 0.0008273280076682568, 0.0017467199899256227, 0.004137535892426968, 0.00502451191097498, 0.0028092160671949386]
2023-05-15 23:38:34,317 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.913
2023-05-15 23:38:34,317 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.810
2023-05-15 23:38:34,317 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.862
2023-05-15 23:38:34,318 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.615
2023-05-15 23:38:34,318 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.606
2023-05-15 23:38:34,318 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.206
2023-05-15 23:38:34,318 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.887
2023-05-15 23:38:34,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.909
2023-05-15 23:38:34,319 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:34,320 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.866
2023-05-15 23:38:34,321 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:34,321 - optimal_runtime.py[116] - INFO: avg ratio: 0.9953648171722579
2023-05-15 23:38:34,322 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01070946898761005
2023-05-15 23:38:34,323 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148076 0.001324   0.00094159 0.0004607  0.00053928 0.00127842
 0.00238809 0.00599391 0.00749117 0.00280922]
2023-05-15 23:38:34,325 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:34,652 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:34,654 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:34,656 - gen_series_legodnn_models.py[28] - INFO: target model size: 36.556MB
2023-05-15 23:38:34,657 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 38332030.54545455B (36.556MB), try to adapt blocks
2023-05-15 23:38:34,659 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:34,801 - optimal_runtime.py[77] - INFO: infer time of current model: 0.11840627288818359
2023-05-15 23:38:34,802 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011303360052406788, 0.001342207983136177, 0.0008033279962837695, 0.0007450879961252212, 0.0005870399996638298, 0.0009126080088317396, 0.0017833600193262102, 0.004128928147256375, 0.005021568074822425, 0.0027139519974589345]
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.851
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.799
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.833
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.258
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.492
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.093
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.869
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.911
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:34,802 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.897
2023-05-15 23:38:34,803 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:34,803 - optimal_runtime.py[116] - INFO: avg ratio: 0.9604855561324092
2023-05-15 23:38:34,803 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011098374746819116
2023-05-15 23:38:34,803 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00158846 0.00134221 0.00097435 0.00053355 0.00058048 0.00141019
 0.00243818 0.00598144 0.00748678 0.00271395]
2023-05-15 23:38:34,804 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:35,175 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:35,176 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:35,177 - gen_series_legodnn_models.py[28] - INFO: target model size: 37.055MB
2023-05-15 23:38:35,177 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 38855493.747474745B (37.055MB), try to adapt blocks
2023-05-15 23:38:35,180 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:35,244 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04769574356079102
2023-05-15 23:38:35,245 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010602240040898322, 0.001334975991398096, 0.0007780799902975561, 0.0006335039958357811, 0.0005170880034565926, 0.0008399040102958678, 0.0017246719971299174, 0.0040778879448771475, 0.005119359947741032, 0.002994751997292042]
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.907
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.803
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.860
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.656
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.694
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.188
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.922
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.883
2023-05-15 23:38:35,245 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.813
2023-05-15 23:38:35,246 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:35,246 - optimal_runtime.py[116] - INFO: avg ratio: 0.9964616410904141
2023-05-15 23:38:35,246 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010697680875301473
2023-05-15 23:38:35,247 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148994 0.00133498 0.00094373 0.00045364 0.00051131 0.00129785
 0.00235794 0.0059075  0.00763258 0.00299475]
2023-05-15 23:38:35,248 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:35,538 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:35,540 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:35,541 - gen_series_legodnn_models.py[28] - INFO: target model size: 37.555MB
2023-05-15 23:38:35,541 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 39378956.94949495B (37.555MB), try to adapt blocks
2023-05-15 23:38:35,545 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:35,615 - optimal_runtime.py[77] - INFO: infer time of current model: 0.053770465850830076
2023-05-15 23:38:35,615 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010321279950439933, 0.0012979199886322024, 0.0007720640078186989, 0.0006564480140805243, 0.0005390399955213069, 0.0008801599964499473, 0.0017407359890639783, 0.004098016068339348, 0.005001119926571846, 0.0027428480572998524]
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.932
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.826
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.867
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.563
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.625
2023-05-15 23:38:35,615 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.133
2023-05-15 23:38:35,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.890
2023-05-15 23:38:35,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.917
2023-05-15 23:38:35,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.904
2023-05-15 23:38:35,616 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.887
2023-05-15 23:38:35,616 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:35,616 - optimal_runtime.py[116] - INFO: avg ratio: 0.9979856160693633
2023-05-15 23:38:35,616 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010681344970530669
2023-05-15 23:38:35,617 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145045 0.00129792 0.00093643 0.00047007 0.00053302 0.00136005
 0.0023799  0.00593666 0.00745629 0.00274285]
2023-05-15 23:38:35,618 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:35,929 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:35,930 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:35,931 - gen_series_legodnn_models.py[28] - INFO: target model size: 38.054MB
2023-05-15 23:38:35,931 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 39902420.15151515B (38.054MB), try to adapt blocks
2023-05-15 23:38:35,932 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:35,996 - optimal_runtime.py[77] - INFO: infer time of current model: 0.052555038452148435
2023-05-15 23:38:35,996 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014832959994673727, 0.0013671359792351721, 0.0007990719936788082, 0.000687679998576641, 0.0005386560074985027, 0.0008537600040435791, 0.0017286079972982406, 0.004085152007639409, 0.005010208122432231, 0.0027149440310895445]
2023-05-15 23:38:35,996 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.649
2023-05-15 23:38:35,996 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.784
2023-05-15 23:38:35,996 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.837
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.447
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.626
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.168
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.897
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.920
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.902
2023-05-15 23:38:35,997 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.896
2023-05-15 23:38:35,997 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:35,997 - optimal_runtime.py[116] - INFO: avg ratio: 0.8817664686110784
2023-05-15 23:38:35,997 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012089174424669788
2023-05-15 23:38:35,998 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00208448 0.00136714 0.00096919 0.00049244 0.00053264 0.00131926
 0.00236332 0.00591802 0.00746984 0.00271494]
2023-05-15 23:38:35,999 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:36,225 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:36,227 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:36,227 - gen_series_legodnn_models.py[28] - INFO: target model size: 38.553MB
2023-05-15 23:38:36,227 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 40425883.353535354B (38.553MB), try to adapt blocks
2023-05-15 23:38:36,231 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:36,292 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04638137435913086
2023-05-15 23:38:36,293 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001007424008101225, 0.0013097919747233392, 0.0007732160128653049, 0.0006850559972226618, 0.0005340799987316132, 0.0008499199971556664, 0.0017375360019505023, 0.00408195187151432, 0.004988096140325069, 0.0027396479956805705]
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.955
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.819
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.865
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.456
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.640
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.174
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.892
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:36,293 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.906
2023-05-15 23:38:36,294 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.888
2023-05-15 23:38:36,294 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:36,294 - optimal_runtime.py[116] - INFO: avg ratio: 1.0066672906347038
2023-05-15 23:38:36,294 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010589227185621003
2023-05-15 23:38:36,295 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00141574 0.00130979 0.00093783 0.00049056 0.00052811 0.00131333
 0.00237553 0.00591339 0.00743688 0.00273965]
2023-05-15 23:38:36,297 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:36,578 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:36,579 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:36,579 - gen_series_legodnn_models.py[28] - INFO: target model size: 39.052MB
2023-05-15 23:38:36,579 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 40949346.55555555B (39.052MB), try to adapt blocks
2023-05-15 23:38:36,581 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:36,643 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04720547103881836
2023-05-15 23:38:36,644 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001035519987344742, 0.0013115200176835062, 0.0008001279905438423, 0.0006948479972779751, 0.00057379200309515, 0.0008935679979622365, 0.0017742719687521462, 0.004124191865324975, 0.0050126719176769256, 0.002729823935776949]
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.929
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.818
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.836
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.422
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.526
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.116
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.874
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.912
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.902
2023-05-15 23:38:36,644 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.891
2023-05-15 23:38:36,644 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:36,645 - optimal_runtime.py[116] - INFO: avg ratio: 0.9782154358728101
2023-05-15 23:38:36,645 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010897219824949133
2023-05-15 23:38:36,645 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00145522 0.00131152 0.00097047 0.00049757 0.00056738 0.00138077
 0.00242575 0.00597458 0.00747352 0.00272982]
2023-05-15 23:38:36,646 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:36,923 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:36,924 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:36,925 - gen_series_legodnn_models.py[28] - INFO: target model size: 39.552MB
2023-05-15 23:38:36,925 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 41472809.75757576B (39.552MB), try to adapt blocks
2023-05-15 23:38:36,928 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:37,003 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06415312194824219
2023-05-15 23:38:37,004 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0016606719866394995, 0.003224415987730026, 0.0008458560071885586, 0.0008396800011396408, 0.0008782720118761063, 0.0011683520004153252, 0.001980864018201828, 0.0042785279899835585, 0.0050995199903845784, 0.0029872320294380187]
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.579
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.333
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.791
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.004
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.997
2023-05-15 23:38:37,004 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.854
2023-05-15 23:38:37,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.782
2023-05-15 23:38:37,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.879
2023-05-15 23:38:37,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.886
2023-05-15 23:38:37,005 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.815
2023-05-15 23:38:37,005 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:37,006 - optimal_runtime.py[116] - INFO: avg ratio: 0.8229352224872694
2023-05-15 23:38:37,006 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012953423731998967
2023-05-15 23:38:37,007 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00233375 0.00322442 0.00102593 0.00060128 0.00086846 0.00180538
 0.0027082  0.00619816 0.007603   0.00298723]
2023-05-15 23:38:37,009 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:37,352 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:37,353 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:37,353 - gen_series_legodnn_models.py[28] - INFO: target model size: 40.051MB
2023-05-15 23:38:37,353 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 41996272.959595956B (40.051MB), try to adapt blocks
2023-05-15 23:38:37,355 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:37,421 - optimal_runtime.py[77] - INFO: infer time of current model: 0.055129695892333984
2023-05-15 23:38:37,422 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010616959929466245, 0.0013375679776072502, 0.000799615990370512, 0.000644384004175663, 0.0005200000032782554, 0.0008395200110971927, 0.0017527360096573831, 0.004139232005923987, 0.00507868780940771, 0.0028287681117653844]
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.906
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.802
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.837
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.611
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.684
2023-05-15 23:38:37,422 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.188
2023-05-15 23:38:37,423 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.884
2023-05-15 23:38:37,423 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.908
2023-05-15 23:38:37,423 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.890
2023-05-15 23:38:37,423 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.860
2023-05-15 23:38:37,423 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:37,423 - optimal_runtime.py[116] - INFO: avg ratio: 0.9955483783855994
2023-05-15 23:38:37,423 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010707494354167528
2023-05-15 23:38:37,424 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.001492   0.00133757 0.00096985 0.00046143 0.00051419 0.00129726
 0.00239631 0.00599637 0.00757194 0.00282877]
2023-05-15 23:38:37,426 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:37,712 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:37,712 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:37,712 - gen_series_legodnn_models.py[28] - INFO: target model size: 40.550MB
2023-05-15 23:38:37,713 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 42519736.16161616B (40.550MB), try to adapt blocks
2023-05-15 23:38:37,714 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:37,878 - optimal_runtime.py[77] - INFO: infer time of current model: 0.14935321044921876
2023-05-15 23:38:37,878 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011770879812538625, 0.0013943679779767988, 0.0008537599965929985, 0.0007934719994664194, 0.0006662079989910126, 0.0009860800057649613, 0.0018517440110445026, 0.004191456079483032, 0.005052927881479263, 0.002863487996160984]
2023-05-15 23:38:37,878 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.817
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.769
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.784
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.121
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.315
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.012
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.837
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.897
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.895
2023-05-15 23:38:37,879 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.850
2023-05-15 23:38:37,880 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:37,880 - optimal_runtime.py[116] - INFO: avg ratio: 0.908294981849975
2023-05-15 23:38:37,880 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011736086683153282
2023-05-15 23:38:37,880 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00165416 0.00139437 0.00103552 0.00056819 0.00065877 0.00152373
 0.00253167 0.00607202 0.00753353 0.00286349]
2023-05-15 23:38:37,882 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:38,227 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:38,227 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:38,228 - gen_series_legodnn_models.py[28] - INFO: target model size: 41.049MB
2023-05-15 23:38:38,228 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 43043199.36363636B (41.049MB), try to adapt blocks
2023-05-15 23:38:38,231 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:38,333 - optimal_runtime.py[77] - INFO: infer time of current model: 0.08107324981689454
2023-05-15 23:38:38,334 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0011567360050976276, 0.001401056006550789, 0.0008559040054678918, 0.0007961920127272606, 0.0006619520112872123, 0.0009826880246400834, 0.0018488000258803368, 0.004583904094994068, 0.005477471873164177, 0.0031550720110535627]
2023-05-15 23:38:38,334 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.832
2023-05-15 23:38:38,334 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.765
2023-05-15 23:38:38,334 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.782
2023-05-15 23:38:38,335 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.113
2023-05-15 23:38:38,335 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.323
2023-05-15 23:38:38,335 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.015
2023-05-15 23:38:38,335 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.838
2023-05-15 23:38:38,335 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.005 = 0.820
2023-05-15 23:38:38,336 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.825
2023-05-15 23:38:38,336 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.771
2023-05-15 23:38:38,337 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:38,337 - optimal_runtime.py[116] - INFO: avg ratio: 0.8857786357702321
2023-05-15 23:38:38,337 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012034416061068295
2023-05-15 23:38:38,338 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00162556 0.00140106 0.00103812 0.00057014 0.00065456 0.00151848
 0.00252765 0.00664055 0.0081665  0.00315507]
2023-05-15 23:38:38,341 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:38,643 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:38,644 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:38,644 - gen_series_legodnn_models.py[28] - INFO: target model size: 41.548MB
2023-05-15 23:38:38,644 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 43566662.565656565B (41.548MB), try to adapt blocks
2023-05-15 23:38:38,645 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:38,720 - optimal_runtime.py[77] - INFO: infer time of current model: 0.06289817428588867
2023-05-15 23:38:38,721 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001058015998452902, 0.0013305599950253963, 0.0007818239927291871, 0.0006428479962050914, 0.0005727999955415726, 0.0010379520133137704, 0.0019239360094070433, 0.004249088056385517, 0.005047807946801186, 0.0027465600296854974]
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.909
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.806
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.856
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.617
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.529
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.961
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.806
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.885
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.895
2023-05-15 23:38:38,721 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.886
2023-05-15 23:38:38,722 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:38,722 - optimal_runtime.py[116] - INFO: avg ratio: 0.9481064781093548
2023-05-15 23:38:38,722 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011243282149196473
2023-05-15 23:38:38,723 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00148683 0.00133056 0.00094827 0.00046033 0.0005664  0.00160388
 0.00263037 0.00615551 0.0075259  0.00274656]
2023-05-15 23:38:38,724 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:39,054 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:39,055 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.8, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:39,055 - gen_series_legodnn_models.py[28] - INFO: target model size: 42.048MB
2023-05-15 23:38:39,055 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 44090125.76767676B (42.048MB), try to adapt blocks
2023-05-15 23:38:39,057 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:39,125 - optimal_runtime.py[77] - INFO: infer time of current model: 0.054456256866455076
2023-05-15 23:38:39,125 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0010670719966292383, 0.0013251839801669122, 0.0007935679927468301, 0.0006630720086395741, 0.0005488320067524911, 0.0008473919965326785, 0.0017406399995088576, 0.004081312038004398, 0.005004448018968106, 0.002728319976478815]
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.901
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.809
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.843
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.538
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.596
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.177
2023-05-15 23:38:39,125 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.890
2023-05-15 23:38:39,126 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:39,126 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.903
2023-05-15 23:38:39,126 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.892
2023-05-15 23:38:39,126 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:39,126 - optimal_runtime.py[116] - INFO: avg ratio: 0.9926257271062059
2023-05-15 23:38:39,126 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01073902111316514
2023-05-15 23:38:39,127 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00149956 0.00132518 0.00096251 0.00047482 0.0005427  0.00130942
 0.00237977 0.00591246 0.00746125 0.00272832]
2023-05-15 23:38:39,128 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:39,456 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:39,458 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:39,467 - pure_runtime.py[42] - DEBUG: load 0th block (block-0) (sparsity 0.4) from file
2023-05-15 23:38:39,468 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 25797435392.0,
  'blocks_sparsity': [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.005040027660655276,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31724609.0,
  'update_swap_mem_cost': 123196.0,
  'update_swap_time_cost': 0.009577274322509766}
2023-05-15 23:38:39,509 - gen_series_legodnn_models.py[28] - INFO: target model size: 42.547MB
2023-05-15 23:38:39,510 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 44613588.96969697B (42.547MB), try to adapt blocks
2023-05-15 23:38:39,512 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:39,655 - optimal_runtime.py[77] - INFO: infer time of current model: 0.12172013092041016
2023-05-15 23:38:39,655 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013135039843618869, 0.0013036479875445364, 0.0007940799854695797, 0.0006794239878654479, 0.003419168084859848, 0.0009571200013160706, 0.0018310399949550626, 0.004166240036487579, 0.005037248127162457, 0.002721535999327898]
2023-05-15 23:38:39,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.799
2023-05-15 23:38:39,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.823
2023-05-15 23:38:39,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.843
2023-05-15 23:38:39,655 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.477
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.256
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.042
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.846
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.902
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.897
2023-05-15 23:38:39,656 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.894
2023-05-15 23:38:39,656 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:39,657 - optimal_runtime.py[116] - INFO: avg ratio: 0.8808568015257028
2023-05-15 23:38:39,657 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012101659001100872
2023-05-15 23:38:39,658 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00169182 0.00130365 0.00096313 0.00048653 0.00338097 0.00147898
 0.00250337 0.00603549 0.00751016 0.00272154]
2023-05-15 23:38:39,660 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:39,891 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:39,892 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:39,892 - gen_series_legodnn_models.py[28] - INFO: target model size: 43.046MB
2023-05-15 23:38:39,892 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 45137052.17171717B (43.046MB), try to adapt blocks
2023-05-15 23:38:39,894 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:39,957 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05021839904785156
2023-05-15 23:38:39,957 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013494399823248387, 0.0014068800061941146, 0.0008772160038352011, 0.0007889919951558113, 0.0006338880062103272, 0.00098454400151968, 0.0017964800037443638, 0.0041092799380421634, 0.005024767763912678, 0.002734687965363264]
2023-05-15 23:38:39,957 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.778
2023-05-15 23:38:39,957 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.762
2023-05-15 23:38:39,957 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.763
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.133
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.382
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.013
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.863
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.915
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:39,958 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.890
2023-05-15 23:38:39,958 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:39,958 - optimal_runtime.py[116] - INFO: avg ratio: 0.9183030361955965
2023-05-15 23:38:39,958 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011608181853592308
2023-05-15 23:38:39,959 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.0017381  0.00140688 0.00106397 0.00056499 0.00062681 0.00152135
 0.00245612 0.00595297 0.00749155 0.00273469]
2023-05-15 23:38:39,960 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:40,228 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:40,229 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:40,230 - gen_series_legodnn_models.py[28] - INFO: target model size: 43.545MB
2023-05-15 23:38:40,230 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 45660515.37373737B (43.545MB), try to adapt blocks
2023-05-15 23:38:40,232 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:40,394 - optimal_runtime.py[77] - INFO: infer time of current model: 0.12927503967285156
2023-05-15 23:38:40,395 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014620480015873909, 0.0014062400087714196, 0.0008150720000267029, 0.0007021440044045449, 0.003772863954305649, 0.001017984002828598, 0.0018052480518817898, 0.004138464003801347, 0.005018047899007797, 0.0027242559753358365]
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.718
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.763
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.821
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.396
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.004 = 0.232
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.980
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.859
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.908
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.901
2023-05-15 23:38:40,395 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.893
2023-05-15 23:38:40,396 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:40,396 - optimal_runtime.py[116] - INFO: avg ratio: 0.855291994361687
2023-05-15 23:38:40,396 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.0124633794202879
2023-05-15 23:38:40,396 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00188314 0.00140624 0.00098859 0.0005028  0.00373072 0.00157303
 0.0024681  0.00599525 0.00748153 0.00272426]
2023-05-15 23:38:40,398 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:40,653 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:40,654 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:40,655 - gen_series_legodnn_models.py[28] - INFO: target model size: 44.044MB
2023-05-15 23:38:40,655 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 46183978.57575758B (44.044MB), try to adapt blocks
2023-05-15 23:38:40,658 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:40,781 - optimal_runtime.py[77] - INFO: infer time of current model: 0.10262278747558594
2023-05-15 23:38:40,782 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013741759955883024, 0.0013105279840528962, 0.0008528319895267487, 0.0008013119846582413, 0.0006428159922361374, 0.0009732799902558326, 0.00183747199177742, 0.00418697601556778, 0.005040704190731049, 0.002845248010009527]
2023-05-15 23:38:40,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.764
2023-05-15 23:38:40,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.818
2023-05-15 23:38:40,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.785
2023-05-15 23:38:40,782 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.100
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.362
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.025
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.844
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.898
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.897
2023-05-15 23:38:40,783 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.855
2023-05-15 23:38:40,783 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:40,784 - optimal_runtime.py[116] - INFO: avg ratio: 0.9163849276968876
2023-05-15 23:38:40,784 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011632479232995846
2023-05-15 23:38:40,784 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00176996 0.00131053 0.00103439 0.00057381 0.00063564 0.00150395
 0.00251216 0.00606553 0.00751531 0.00284525]
2023-05-15 23:38:40,786 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:41,140 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:41,141 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:41,142 - gen_series_legodnn_models.py[28] - INFO: target model size: 44.544MB
2023-05-15 23:38:41,142 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 46707441.777777776B (44.544MB), try to adapt blocks
2023-05-15 23:38:41,146 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:41,239 - optimal_runtime.py[77] - INFO: infer time of current model: 0.07587615966796875
2023-05-15 23:38:41,239 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0015248319916427136, 0.0013101759888231755, 0.000802303995937109, 0.0006610239967703819, 0.0005379200018942356, 0.0008605760075151921, 0.0019377600252628328, 0.005544095978140832, 0.005161888010799885, 0.0028750079683959482]
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.688
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.818
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.834
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.545
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.628
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.159
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.800
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.006 = 0.678
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.876
2023-05-15 23:38:41,240 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.846
2023-05-15 23:38:41,241 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:41,241 - optimal_runtime.py[116] - INFO: avg ratio: 0.9253528037602499
2023-05-15 23:38:41,241 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011519745331237258
2023-05-15 23:38:41,242 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00196401 0.00131018 0.00097311 0.00047335 0.00053191 0.00132979
 0.00264927 0.00803154 0.00769599 0.00287501]
2023-05-15 23:38:41,244 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:41,595 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:41,595 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:41,596 - gen_series_legodnn_models.py[28] - INFO: target model size: 45.043MB
2023-05-15 23:38:41,596 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 47230904.97979798B (45.043MB), try to adapt blocks
2023-05-15 23:38:41,599 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:41,670 - optimal_runtime.py[77] - INFO: infer time of current model: 0.05411859130859375
2023-05-15 23:38:41,671 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.002022528000175953, 0.0013772160112857817, 0.0008865599930286407, 0.0008571199998259545, 0.0006655039936304093, 0.0010156799852848054, 0.0018653120100498202, 0.004210528023540974, 0.005028735980391502, 0.002788927983492613]
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.519
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.779
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.755
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.963
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.316
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.982
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.831
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.893
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.899
2023-05-15 23:38:41,671 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.873
2023-05-15 23:38:41,672 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:41,672 - optimal_runtime.py[116] - INFO: avg ratio: 0.9158477607449527
2023-05-15 23:38:41,672 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011639301964546723
2023-05-15 23:38:41,672 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00260505 0.00137722 0.0010753  0.00061377 0.00065807 0.00156946
 0.00255022 0.00609965 0.00749747 0.00278893]
2023-05-15 23:38:41,674 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:42,104 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:42,105 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:42,105 - gen_series_legodnn_models.py[28] - INFO: target model size: 45.542MB
2023-05-15 23:38:42,105 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 47754368.18181818B (45.542MB), try to adapt blocks
2023-05-15 23:38:42,107 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:42,180 - optimal_runtime.py[77] - INFO: infer time of current model: 0.056863231658935545
2023-05-15 23:38:42,180 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013950400054454802, 0.0013404799960553646, 0.0008038720041513443, 0.0007158720009028911, 0.0005353920012712478, 0.0009034240059554578, 0.0017456640191376208, 0.004190816082060337, 0.0050919361039996145, 0.0029434880353510382]
2023-05-15 23:38:42,180 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.752
2023-05-15 23:38:42,180 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.800
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.832
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.350
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.636
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.104
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.888
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.897
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.888
2023-05-15 23:38:42,181 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.827
2023-05-15 23:38:42,181 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:42,182 - optimal_runtime.py[116] - INFO: avg ratio: 0.8735348034137047
2023-05-15 23:38:42,182 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012203095514004341
2023-05-15 23:38:42,182 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00179684 0.00134048 0.00097501 0.00051263 0.00052941 0.001396
 0.00238664 0.00607109 0.00759169 0.00294349]
2023-05-15 23:38:42,184 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:42,567 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:42,568 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:42,569 - gen_series_legodnn_models.py[28] - INFO: target model size: 46.041MB
2023-05-15 23:38:42,569 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 48277831.383838385B (46.041MB), try to adapt blocks
2023-05-15 23:38:42,571 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:42,639 - optimal_runtime.py[77] - INFO: infer time of current model: 0.053394718170166014
2023-05-15 23:38:42,640 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014659200161695482, 0.001398368000984192, 0.0008485760204493999, 0.0007481919974088669, 0.0006070400029420853, 0.0009431679956614971, 0.0018008320406079292, 0.004162879951298237, 0.005023039810359478, 0.0027797439582645895]
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.716
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.767
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.788
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.249
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.443
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.058
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.861
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.903
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.900
2023-05-15 23:38:42,640 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.875
2023-05-15 23:38:42,641 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:42,641 - optimal_runtime.py[116] - INFO: avg ratio: 0.9234317660892059
2023-05-15 23:38:42,641 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011543710138984625
2023-05-15 23:38:42,642 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00188813 0.00139837 0.00102923 0.00053577 0.00060026 0.00145742
 0.00246207 0.00603062 0.00748897 0.00277974]
2023-05-15 23:38:42,643 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:42,997 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:42,998 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:42,999 - gen_series_legodnn_models.py[28] - INFO: target model size: 46.541MB
2023-05-15 23:38:42,999 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 48801294.58585858B (46.541MB), try to adapt blocks
2023-05-15 23:38:43,001 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:43,116 - optimal_runtime.py[77] - INFO: infer time of current model: 0.09434249877929687
2023-05-15 23:38:43,116 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.001376992017030716, 0.0013248000182211398, 0.0007942399904131889, 0.000650943998247385, 0.0005535039976239204, 0.0008628479950129986, 0.0017638079710304737, 0.00411516809463501, 0.004997920133173466, 0.002748768024146557]
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.762
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.809
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.842
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.585
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.582
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.156
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.879
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.914
2023-05-15 23:38:43,116 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.904
2023-05-15 23:38:43,117 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.885
2023-05-15 23:38:43,117 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:43,117 - optimal_runtime.py[116] - INFO: avg ratio: 0.970508813377327
2023-05-15 23:38:43,117 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010983752536742785
2023-05-15 23:38:43,118 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00177359 0.0013248  0.00096333 0.00046613 0.00054732 0.0013333
 0.00241145 0.0059615  0.00745152 0.00274877]
2023-05-15 23:38:43,119 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:43,362 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:43,363 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:43,363 - gen_series_legodnn_models.py[28] - INFO: target model size: 47.040MB
2023-05-15 23:38:43,363 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 49324757.78787879B (47.040MB), try to adapt blocks
2023-05-15 23:38:43,365 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:43,467 - optimal_runtime.py[77] - INFO: infer time of current model: 0.08487519836425782
2023-05-15 23:38:43,467 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014038079902529716, 0.0014817280173301697, 0.0009895999804139138, 0.0009703360125422478, 0.0007767999991774559, 0.0011521280109882354, 0.0019748160168528554, 0.004131999909877777, 0.005123904079198837, 0.0031746880412101743]
2023-05-15 23:38:43,467 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.748
2023-05-15 23:38:43,467 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.724
2023-05-15 23:38:43,467 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.676
2023-05-15 23:38:43,469 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 1.734
2023-05-15 23:38:43,469 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.127
2023-05-15 23:38:43,470 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.866
2023-05-15 23:38:43,470 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.785
2023-05-15 23:38:43,470 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.910
2023-05-15 23:38:43,470 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.882
2023-05-15 23:38:43,470 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.767
2023-05-15 23:38:43,470 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:43,471 - optimal_runtime.py[116] - INFO: avg ratio: 0.8315815419214306
2023-05-15 23:38:43,471 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.012818741282104605
2023-05-15 23:38:43,471 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00180813 0.00148173 0.00120028 0.00069484 0.00076812 0.00178031
 0.00269994 0.00598589 0.00763935 0.00317469]
2023-05-15 23:38:43,473 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:43,743 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:43,744 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:43,745 - gen_series_legodnn_models.py[28] - INFO: target model size: 47.539MB
2023-05-15 23:38:43,745 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 49848220.98989899B (47.539MB), try to adapt blocks
2023-05-15 23:38:43,748 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:43,815 - optimal_runtime.py[77] - INFO: infer time of current model: 0.050411201477050784
2023-05-15 23:38:43,815 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013619520179927352, 0.0013152960203588009, 0.0007957119941711425, 0.0006531199961900712, 0.000541056003421545, 0.0008807360008358955, 0.0017257920317351818, 0.004087519869208336, 0.004986911930143834, 0.0027158400118350986]
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.771
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.815
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.841
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.576
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.619
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.133
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.898
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.920
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.906
2023-05-15 23:38:43,815 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.896
2023-05-15 23:38:43,816 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:43,816 - optimal_runtime.py[116] - INFO: avg ratio: 0.977608681102762
2023-05-15 23:38:43,816 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010903983206081953
2023-05-15 23:38:43,817 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00175422 0.0013153  0.00096511 0.00046769 0.00053501 0.00136094
 0.00235947 0.00592145 0.00743511 0.00271584]
2023-05-15 23:38:43,818 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:44,078 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:44,079 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.0, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:44,079 - gen_series_legodnn_models.py[28] - INFO: target model size: 48.038MB
2023-05-15 23:38:44,079 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 50371684.19191919B (48.038MB), try to adapt blocks
2023-05-15 23:38:44,081 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:44,143 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04868684768676758
2023-05-15 23:38:44,144 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0015742400214076044, 0.0013987200036644936, 0.0007740160077810287, 0.0006397760063409806, 0.0005323200076818467, 0.0008461760058999062, 0.0017241919860243797, 0.00408428793027997, 0.004997440077364444, 0.0027223679944872858]
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.002 = 0.667
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.767
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.864
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.630
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.645
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.179
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.899
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.921
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.904
2023-05-15 23:38:44,144 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.894
2023-05-15 23:38:44,145 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:44,145 - optimal_runtime.py[116] - INFO: avg ratio: 0.9710919548562814
2023-05-15 23:38:44,145 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010977156784747606
2023-05-15 23:38:44,145 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00202765 0.00139872 0.0009388  0.00045813 0.00052637 0.00130754
 0.00235729 0.00591677 0.00745081 0.00272237]
2023-05-15 23:38:44,147 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:44,393 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:44,394 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:44,403 - pure_runtime.py[42] - DEBUG: load 1th block (block-1) (sparsity 0.8) from file
2023-05-15 23:38:44,404 - gen_series_legodnn_models.py[33] - INFO: update info: 
{ 'FLOPs': 21940379648.0,
  'blocks_sparsity': [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0],
  'esti_latency': 0.005079072899676854,
  'esti_test_accuracy': 0.007833333333333335,
  'is_relaxed': False,
  'model_size': 31488705.0,
  'update_swap_mem_cost': 404324.0,
  'update_swap_time_cost': 0.009412050247192383}
2023-05-15 23:38:44,485 - gen_series_legodnn_models.py[28] - INFO: target model size: 48.537MB
2023-05-15 23:38:44,485 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 50895147.39393939B (48.537MB), try to adapt blocks
2023-05-15 23:38:44,488 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:44,555 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04858848190307617
2023-05-15 23:38:44,555 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0014222400076687337, 0.0010181760005652904, 0.000778975997120142, 0.0006388159878551959, 0.0005449279919266701, 0.000855712004005909, 0.0017666879929602146, 0.004068416140973567, 0.004998944111168384, 0.0027190400063991553]
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.738
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.988
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.859
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.634
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.607
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.166
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.877
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.924
2023-05-15 23:38:44,555 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.904
2023-05-15 23:38:44,556 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.895
2023-05-15 23:38:44,556 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:44,556 - optimal_runtime.py[116] - INFO: avg ratio: 0.9953410267390294
2023-05-15 23:38:44,556 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.010709724963099876
2023-05-15 23:38:44,557 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00183187 0.00108585 0.00094481 0.00045745 0.00053884 0.00132228
 0.00241539 0.00589378 0.00745305 0.00271904]
2023-05-15 23:38:44,558 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:44,802 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:44,803 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:44,803 - gen_series_legodnn_models.py[28] - INFO: target model size: 49.037MB
2023-05-15 23:38:44,803 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 51418610.5959596B (49.037MB), try to adapt blocks
2023-05-15 23:38:44,805 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:44,954 - optimal_runtime.py[77] - INFO: infer time of current model: 0.1342398681640625
2023-05-15 23:38:44,955 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013706559911370276, 0.0011702399998903274, 0.0008853119984269142, 0.0007968639954924583, 0.0006569280102849007, 0.0009693439900875091, 0.0018407680168747902, 0.004174879871308803, 0.011075840324163437, 0.002853120017796755]
2023-05-15 23:38:44,955 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.766
2023-05-15 23:38:44,956 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.859
2023-05-15 23:38:44,960 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.756
2023-05-15 23:38:44,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.112
2023-05-15 23:38:44,961 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.333
2023-05-15 23:38:44,962 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.029
2023-05-15 23:38:44,962 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.842
2023-05-15 23:38:44,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.901
2023-05-15 23:38:44,963 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.011 = 0.408
2023-05-15 23:38:44,964 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.853
2023-05-15 23:38:44,965 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 9]),)
2023-05-15 23:38:44,966 - optimal_runtime.py[116] - INFO: avg ratio: 0.9173192527321619
2023-05-15 23:38:44,966 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011620631104291117
2023-05-15 23:38:44,968 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00176543 0.00124802 0.00107379 0.00057062 0.00064959 0.00149786
 0.00251667 0.00604801 0.01651324 0.00285312]
2023-05-15 23:38:44,973 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:45,212 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:45,213 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:45,214 - gen_series_legodnn_models.py[28] - INFO: target model size: 49.536MB
2023-05-15 23:38:45,214 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 51942073.797979794B (49.536MB), try to adapt blocks
2023-05-15 23:38:45,216 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:45,391 - optimal_runtime.py[77] - INFO: infer time of current model: 0.153416259765625
2023-05-15 23:38:45,391 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0029163839817047117, 0.0010520320013165474, 0.000810336012393236, 0.0007068800032138823, 0.0005895680002868175, 0.0010103680044412614, 0.0018520320057868955, 0.00418963198363781, 0.00522057593613863, 0.003171392019838094]
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.003 = 0.360
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.956
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.826
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.380
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.486
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.987
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.837
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.897
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.866
2023-05-15 23:38:45,392 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.767
2023-05-15 23:38:45,393 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:45,393 - optimal_runtime.py[116] - INFO: avg ratio: 0.9527186022972638
2023-05-15 23:38:45,393 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.011188853261771835
2023-05-15 23:38:45,394 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00375635 0.00112196 0.00098285 0.00050619 0.00058298 0.00156126
 0.00253207 0.00606938 0.00778348 0.00317139]
2023-05-15 23:38:45,396 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:45,654 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:45,655 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
2023-05-15 23:38:45,655 - gen_series_legodnn_models.py[28] - INFO: target model size: 50.035MB
2023-05-15 23:38:45,655 - optimal_runtime.py[268] - INFO: cur max inference time: 100.000000s, cur available max memory: 52465537.0B (50.035MB), try to adapt blocks
2023-05-15 23:38:45,658 - optimal_runtime.py[243] - INFO: no blocks infer time info, profile it through an inference
2023-05-15 23:38:45,718 - optimal_runtime.py[77] - INFO: infer time of current model: 0.04618867111206055
2023-05-15 23:38:45,719 - optimal_runtime.py[85] - INFO: infer time of current blocks: [0.0013008000068366527, 0.0009865600056946278, 0.0007744319960474969, 0.0006320000067353248, 0.0005260480009019375, 0.0008226560018956662, 0.0017151999920606612, 0.004068448133766651, 0.005000991933047771, 0.0027376640327274803]
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.807
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.019
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 0.864
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.001 = 2.662
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.665
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.001 / 0.001 = 1.213
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.002 = 0.904
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.004 / 0.004 = 0.924
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.005 / 0.005 = 0.904
2023-05-15 23:38:45,719 - optimal_runtime.py[106] - INFO: ratio: cal infer time / real infer time of biggest block of cur sparsity: 0.002 / 0.003 = 0.889
2023-05-15 23:38:45,720 - optimal_runtime.py[114] - INFO: legal avg ratio indexes: (array([0, 1, 2, 4, 5, 6, 7, 8, 9]),)
2023-05-15 23:38:45,720 - optimal_runtime.py[116] - INFO: avg ratio: 1.0208942186380643
2023-05-15 23:38:45,720 - optimal_runtime.py[119] - INFO: cur cal infer time of original model: 0.01044165834838923
2023-05-15 23:38:45,720 - optimal_runtime.py[254] - INFO: cur original blocks pred infer time: [0.00167545 0.00105213 0.0009393  0.00045257 0.00052017 0.0012712
 0.00234499 0.00589382 0.0074561  0.00273766]
2023-05-15 23:38:45,722 - optimal_runtime.py[226] - INFO: solving...
2023-05-15 23:38:46,089 - optimal_runtime.py[228] - INFO: solving finished
2023-05-15 23:38:46,090 - pure_runtime.py[26] - INFO: load blocks with sparsity [0.4, 0.8, 0.4, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.0]
